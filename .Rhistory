webElem <- remDr$findElement(using = "css selector", value = "div.table-responsive:nth-child(8) > table:nth-child(1)") %>%
webElem$highlightElement()
webElem <- remDr$findElement(using = "css selector", value = "div.table-responsive:nth-child(8) > table:nth-child(1)")
webElem$highlightElement()
#keep the browser active, open(silent = FALSE)
remDr$open() #use this if server is already active
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
# Assign the client to an object
remDr <- rD[["client"]]
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
#firefox attempt
#start session
rD <- RSelenium::rsDriver(browser = "firefox", port = 4569L)
#keep the browser active, open(silent = FALSE)
remDr$open() #use this if server is already active
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
#webElem <- remDr$findElement(using = "css selector", value = "div.table-responsive:nth-child(8) > table:nth-child(1)")
# webElem$highlightElement()
remDr$maxWindowSize()
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#get all rows of table
table_rows <- read_html(source) %>%
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1)")
#extract all data from table rows
table_data <- table_data %>% table_rows %>%
html_nodes("td") %>% html_text()
#extract all data from table rows
table_data <- table_rows %>%
html_nodes("td") %>% html_text()
df <- as.data.frame(table_data)
View(df)
remDr
remDr$open
#firefox attempt
#start session
rD <- RSelenium::rsDriver(browser = "firefox", port = 4569L)
# Assign the client to an object
remDr <- rD[["client"]]
#webElem <- remDr$findElement(using = "css selector", value = "div.table-responsive:nth-child(8) > table:nth-child(1)")
# webElem$highlightElement()
remDr$maxWindowSize()
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#get all rows of table
table_rows <- read_html(source) %>%
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1)")
#install.packages("rvest")
#install.packages("pdftools")
#install.packages("xml2")
#install.packages("RSelenium")
#install.packages("binman")
library(pdftools)
library(rvest)
library(httr)
library(xml2)
library(tibble)
library(RSelenium)
library(wdman)
library(binman)
library(dplyr)
#get all rows of table
table_rows <- read_html(source) %>%
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1)")
View(table_rows)
#extract all data from table rows
table_data <- table_rows %>%
html_nodes("td") %>% html_text()
df <- as.data.frame(table_data)
View(df)
remDr$ope
remDr$open
#firefox attempt
#start session
rD <- RSelenium::rsDriver(browser = "firefox", port = 4569L)
remDr$open
remDr$switchToWindow
remDr$open()
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#get all rows of table
table_rows <- read_html(source) %>% #table_rows is an xml list
html_nodes("/html/body/div[3]/div/header/div[5]/div/div[5]/table")
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#get all rows of table
table_rows <- read_html(source) %>% #table_rows is an xml list
html_nodes("/html/body/div[3]/div/header/div[5]/div/div[5]/table")
#get all rows of table
table_rows <- read_html(source) %>% #table_rows is an xml list
html_nodes(/html/body/div[3]/div/header/div[5]/div/div[5]/table)
#get all rows of table
table_rows <- read_html(source) %>% #table_rows is an xml list
html_nodes("td")
#extract all data from table rows
table_data <- table_rows %>%
html_nodes("td") %>% html_text()
df <- as.data.frame(table_data)
View(df)
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#get all rows of table
table_rows <- read_html(source) %>% #table_rows is an xml list
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1)")
#extract all data from table rows
table_data <- table_rows %>%
html_nodes("td") %>% html_text()
df <- as.data.frame(table_data)
View(df)
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#get all rows of table
table_rows <- read_html(source) %>% #table_rows is an xml list
html_nodes("div.table-responsive:nth-child(8)")
#extract all data from table rows
table_data <- table_rows %>%
html_nodes("td") %>% html_text()
df <- as.data.frame(table_data)
View(df)
#extract all data from table rows
table_data <- table_rows %>% #then table rows is passed to html_nodes to extract td
html_nodes("td") %>% html_text2() #td = cell then passed to html text
# html_text() retrives text from html element
df <- as.data.frame(table_data)
View(df)
#extract all data from table rows
table_data <- table_rows %>% #then table rows is passed to html_nodes to extract td
html_nodes("td") %>% html_text1() #td = cell then passed to html text
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#get all rows of table
table_rows <- read_html(source) %>% #table_rows is an xml list
html_nodes("div.table-responsive:nth-child(8)")
#extract all data from table rows
table_data <- table_rows %>% #then table rows is passed to html_nodes to extract td
html_nodes("td") %>% html_text1() #td = cell then passed to html text
#extract all data from table rows
table_data <- table_rows %>% #then table rows is passed to html_nodes to extract td
html_nodes("td") %>% html_text() #td = cell then passed to html text
# html_text() retrives text from html element
df <- as.data.frame(table_data)
View(df)
#extract all data from table rows
table_data <- table_rows %>% #then table rows is passed to html_nodes to extract td
html_nodes("td") %>% html_text2() #td = cell then passed to html text
# html_text() retrives text from html element
df <- as.data.frame(table_data)
View(df)
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#get all rows of table
table_rows <- read_html(source) %>% #table_rows is an xml list
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2)")
#get all rows of table
table_body <- read_html(source) %>% #table_rows is an xml list
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2)")
#extract all data from table rows
table_data <- table_body %>% #then table rows is passed to html_nodes to extract td
html_nodes("td") %>% html_text2() #td = cell then passed to html text
# html_text() retrives text from html element
df <- as.data.frame(table_data)
View(df)
# Get column names, turn into list, when transforming into df ncol = the list
source <- remDr$getPageSource()[[1]]
remDr$open()
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
# Get column names, turn into list, when transforming into df ncol = the list
source <- remDr$getPageSource()[[1]]
remDr$open()
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
#webElem <- remDr$findElement(using = "css selector", value = "div.table-responsive:nth-child(8) > table:nth-child(1)")
# webElem$highlightElement()
remDr$maxWindowSize()
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source
#get all rows of table
table_body  <- read_html(source) %>% #table_rows is an xml list
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2)")
#extract all data from table rows
table_data <- table_body %>% #then table rows is passed to html_nodes to extract td
html_nodes("tr") %>% #first get all rows separately
html_nodes("td") %>% # then get all cells td
html_text2()         # html_text() retrives text from html element
df <- as.data.frame(table_data)
View(df)
#firefox attempt
#start session
rD <- RSelenium::rsDriver(browser = "firefox", port = 4569L)
# Assign the client to an object
remDr <- rD[["client"]]
remDr$open()
rem$close()
remDr$close()
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
#firefox attempt
#start session
rD <- RSelenium::rsDriver(browser = "firefox", port = 4569L)
remDr$open()
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
#web scrape
remDr$navigate("https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024")
#webElem <- remDr$findElement(using = "css selector", value = "div.table-responsive:nth-child(8) > table:nth-child(1)")
# webElem$highlightElement()
remDr$maxWindowSize()
# Get column names, turn into list, when transforming into df, the ncol = the list
source <- remDr$getPageSource()[[1]]
column_names <- read_html(source) %>%
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1) > thead:nth-child(1)") %>%
html_text2()
column_length <- length(column_names) # length gets/sets the length of a vector(lists)
#install.packages("rvest")
#install.packages("pdftools")
#install.packages("xml2")
#install.packages("RSelenium")
#install.packages("binman")
library(pdftools)
library(rvest)
library(httr)
library(xml2)
library(tibble)
library(RSelenium)
library(wdman)
library(binman)
library(dplyr)
# Get column names, turn into list, when transforming into df, the ncol = the list
source <- remDr$getPageSource()[[1]]
column_names <- read_html(source) %>%
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1) > thead:nth-child(1)") %>%
html_text2()
column_length <- length(column_names) # length gets/sets the length of a vector(lists)
#web scrape
base_url <- "https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024"
View(df)
# Get column names, turn into list, when transforming into df, the ncol = the list
source <- remDr$getPageSource()[[1]]
column_names <- read_html(source) %>%
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1) > thead:nth-child(1)") %>%
html_text2()
column_length <- length(column_names) # length gets/sets the length of a vector(lists)
print(column_length)
print(names(column_length))
column_length <- length(column_names) # length gets/sets the length of a vector(lists)
print(names(column_length)) #NULL
print(column_names)
print(table_data)
print(column_names)
View(df)
# First turn lists into matrix w correct # of cols then make a tibble
df <- matrix(table_data, ncol = column_length, byrow = TRUE)
View(df)
# First turn lists into matrix w correct # of cols then make a tibble
df <- matrix(table_data, ncol = column_length, byrow = TRUE) %>%
as.tibble()
# First turn lists into matrix w correct # of cols then make a tibble
df <- matrix(table_data, ncol = column_length, byrow = TRUE) %>%
as_tibble()
View(df)
print(column_names)
column_length <- length(column_names) # length gets/sets the length of a vector(lists)
print(names(column_length)) #NULL bcus it is a list rn? and not a character?
colnames(df) <- column_names
print(df)
View(df)
length(table_data)
length(table_data)
12/240
240/12
remDr$open()
remDr$navigate(base_url)
#webElem <- remDr$findElement(using = "css selector", value = "div.table-responsive:nth-child(8) > table:nth-child(1)")
# webElem$highlightElement()
remDr$maxWindowSize()
#Up to this point 10/7 the data wasnt scraped properly, it is in a long 1 column dataframe
num_cols <- 12
length(table_data) #length = 240, / by 12 = 20
num_rows <- length(table_data)/num_cols
matrix_table_data <- matrix(table_data, ncol = num_cols, byrow = TRUE) %>%
as_tibble()
View(matrix_table_data)
str(column_names)
colnames(df) <- column_names
View(df)
## DEBUGGING##
# Up to this point 10/7 the data wasnt scraped properly, it is in a long 1 column dataframe
num_cols <- 12
num_rows <- length(table_data)/num_cols
matrix_table_data <- matrix(table_data, ncol = num_cols, byrow = TRUE) %>%
as_tibble()
View(df)
## DEBUGGING##
# Up to this point 10/7 the data wasnt scraped properly, it is in a long 1 column dataframe
num_cols <- 12
num_rows <- length(table_data)/num_cols
matrix_table_data <- matrix(table_data, ncol = num_cols, byrow = TRUE) %>%
as_tibble()
View(matrix_table_data)
print(column_names)
colnames(matrix_table_data) <- column_names
str(matrix_table_data)
View(matrix_table_data)
View(installed)
View(matrix_table_data)
matrix_table_data <- matrix(table_data, ncol = num_cols, byrow = TRUE) %>%
as_tibble()
View(matrix_table_data)
remDr$open()
remDr$open()
remDr$navigate(base_url)
View(m)
column_names <- read_html(source) %>%  # extract list of column names, convert to text after
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1) > thead:nth-child(1)") %>%
html_nodes("th") %>%
html_text2()
print(column_names)
print(names(column_length)) #NULL bcus it is a list rn? and not a character?
column_length <- length(column_names) # length gets/sets the length of a vector(lists)
print(column_names)
print(column_length) #NULL bcus it is a list rn? and not a character?
column_length <- length(column_names) # length gets/sets the length of a vector(lists)
print(column_length) #NULL bcus it is a list rn? and not a character?
# First turn lists into matrix w correct # of cols then make a tibble
df <- matrix(table_data, ncol = column_length, byrow = TRUE) %>%
as_tibble()
colnames(df) <- column_names
print(df)
str(df)
View(df)
print(df)
str(df)
remDr$open()
remDr$navigate(base_url)
View(ffood)
View(df)
# Navigating to sub pages on the Activtiy # the a elements
a_elements <- source %>%  #get a elemtns from the source (html) of the base_url
html_elements(css = "div.package > a")
# Navigating to sub pages on the Activtiy # the a elements
a_elements <- read_html(remDr$getPageSource()[[1]]) %>%  #get a elemtns from the source (html) of the base_url
html_elements(css = "div.package > a")
a_elements
# Navigating to sub pages on the Activtiy # the a elements
a_elements <- read_html(remDr$getPageSource()[[1]]) %>%
html_nodes("tr") %>%
html_nodes("td") %>% #get a elemtns from the source (html) of the base_url
html_elements(css = "div.package > a")
a_elements
td_cell_elements <- source %>%
html_nodes("tr") %>%
html_nodes("td")
source <- remDr$getPageSource()[[1]]
td_cell_elements <- source %>%
html_nodes("tr") %>%
html_nodes("td")
website_html <- base_url %>%
read_html()
remDr$open()
remDr$navigate(base_url)
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source from where you navigated
website_html <- base_url %>%
read_html()
website_html <- "base_url" %>%
read_html()
website_html <- "https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024" %>%
read_html()
remDr$navigate(base_url)
#webElem <- remDr$findElement(using = "css selector", value = "div.table-responsive:nth-child(8) > table:nth-child(1)")
# webElem$highlightElement()
remDr$maxWindowSize()
website_html <- "https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024" %>%
read_html()
remDr$navigate(base_url)
remDr$navigate(base_url)
#web scrape
base_url <- "https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024"
remDr$navigate(base_url)
colnames(df) <- column_names %>%
select(-c(1:2))
colnames(df) <- column_names %>%
filter(-c(1:2))
#firefox attempt
#start session
rD <- RSelenium::rsDriver(browser = "firefox", port = 4569L)
remDr$open()
remDr$navigate(base_url)
inspection_detail <- remDr$findElement(using = "css selector",
value = "div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2) > tr:nth-child(1) > td:nth-child(3) > a:nth-child(1)" )
remDr$highlightElement
inspection_detail$highlightElement
inspection_detail <- remDr$findElement(using = "css selector",
value = "div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2) > tr:nth-child(1) > td:nth-child(3) > a:nth-child(1)" )
inspection_detail$highlightElement
inspection_detail <- remDr$findElement(using = "css selector",
value = "div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2) > tr:nth-child(1) > td:nth-child(3) > a:nth-child(1)" )
inspection_detail$highlightElement
inspection_detail$highlightElement()
inspection_detail <- remDr$findElement(using = "css selector",
value = "div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2) > tr:nth-child(1) > td:nth-child(3)" )
inspection_detail$highlightElement()
webElem <- remDr$findElement(using = "css selector",
value = "div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2) > tr:nth-child(1) > td:nth-child(3)" )
webElem$highlightElement()
webElem <- remDr$findElement(using = "css selector",
value = "div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2) > tr:nth-child(2) > td:nth-child(3)" )
webElem$highlightElement()
webElem$clickElement
webElem <- remDr$findElement(using = "css selector",
value = "div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2) > tr:nth-child(2) > td:nth-child(3)" )
webElem$clickElement
webElem <- remDr$findElement(using = "css selector",
value = "<td><a href=establishment.inspection_detail?id=1763527.015 title=1763527.015>")
webElem <- remDr$findElement(using = "xpath",
value ="/html/body/div[3]/div/header/div[5]/div/div[5]/table/tbody/tr[1]/td[3]")
webElem$clickElement
webElem$clickElement()
webElem <- remDr$findElement(using = "xpath",
value ="//tbody/tr[3]/td[1] ")
webElem$clickElement() #worked w xpath //tbody/tr[3]/td[1]
webElem <- remDr$findElement(using = "xpath",
value ="//tbody/tr[3]/td[1] ")
webElem$highlightElement() #worked w xpath //tbody/tr[3]/td[1]
webElem$clickElement() #worked w xpath //tbody/tr[3]/td[1]
webElem <- remDr$findElement(using = "xpath",
value ="tbody tr:nth-child(1) td:nth-child(3)")
webElem <- remDr$findElement(using = "css selector",
value ="tbody tr:nth-child(1) td:nth-child(3)")
webElem$clickElement() #worked w xpath //tbody/tr[3]/td[1]
webElem <- remDr$findElement(using = "css selector",
value ="tbody tr:nth-child(1) td:nth-child(3)") #relative css selector
webElem$clickElement()
Sys.sleep(3)
View(matrix_table_data)
View(df)
View(df)
remDr$open()
remDr$navigate(base_url)
#working
webElem <- remDr$findElement(using = "css selector",
value ="tbody tr:nth-child(1) td:nth-child(3)") #relative css selector
webElem$clickElement()
Sys.sleep(2)
Sys.sleep(2)
# works with relative css selector and absolute css and absolute xpath
source <- remDr$getPageSource()[[1]]
View(df)
rD <- RSelenium::rsDriver(browser = "firefox", port = 4569L) # start session
remDr$open()
remDr$navigate(base_url)
#webElem <- remDr$findElement(using = "css selector", value = "div.table-responsive:nth-child(8) > table:nth-child(1)")
# webElem$highlightElement()
remDr$maxWindowSize()
#keep the browser active, open(silent = FALSE)
#remDr$open() #use this if server is already active
#remDr$close() #close current session
source <- remDr$getPageSource()[[1]]# read page source from where you navigated
# get all rows of table in an xml list
table_body  <- read_html(source) %>% #table_body is xml list
html_nodes("div.table-responsive:nth-child(8) > table:nth-child(1) > tbody:nth-child(2)")
#Extract all data from table rows
table_data <- table_body %>% # then table body is passed to html_nodes to extract
html_nodes("tr") %>% # first get all rows (tr) separately
html_nodes("td") %>% # then get all cells (td)
html_text2()         # html_text() retrives text from html element
df <- as.data.frame(table_data)
length(table_data)
View(matrix_table_data)
#working
webElem <- remDr$findElement(using = "css selector",
value ="tbody tr:nth-child(1) td:nth-child(3)") #relative css selector
webElem$clickElement()
webElem$clickElement()
#working
webElem <- remDr$findElement(using = "css selector",
value ="tbody tr:nth-child(1) td:nth-child(3)") #relative css selector
webElem$clickElement()
