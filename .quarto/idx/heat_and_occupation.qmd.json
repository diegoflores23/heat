{"title":"Indoor Heat and Occupation","markdown":{"yaml":{"title":"Indoor Heat and Occupation","date":"8/16/2024","format":{"html":{"echo":false,"toc":true,"toc_float":true}},"editor_options":{"markdown":{"wrap":72}}},"headingText":"On the job, with Heat.","containsRefs":false,"markdown":"\n\n\nSeven California workers died from indoor heat from [2010 to\n2017](https://www.rand.org/pubs/working_papers/WRA1386-1.html). The real\nnumber is believed to be significantly higher, however, it remains\nconsistently under-reported of the lack of recognition of indoor heat as\na factor in these cases of death. Many more ED visits can actually be\nattributed to heat but aren't reported as an underlying cause of\n\nLos Angeles County. San Bernardino County. Orange County. A southern\nCalifornia paradise? Or a microcosm of the labor fight?\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\nlibrary(readr)\n#install.packages(\"patchwork\")\nlibrary(patchwork)\nlibrary(kableExtra)\nlibrary(ggthemes)\nlibrary(readxl)\nlibrary(janitor)\nlibrary(tidyverse)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(stargazer)\nlibrary(gridExtra)\nlibrary(caret)\nlibrary(car)\n#install.packages(\"sf\")\nlibrary(sf)\nlibrary(usmap)\nlibrary(RColorBrewer)\nlibrary(maps)\nlibrary(mapdata)\nlibrary(leaflet)\nlibrary(lubridate)\nlibrary(choroplethr)\n#install.packages(\"countyweather\")  #not available for this R version\n#install.packages(\"rnoaa\")\nlibrary(sp)\nlibrary(spatial)\nlibrary(devtools)\n#install.packages(\"osmdata\")\nlibrary(mapview)\nlibrary(osmdata)\n#install.packages(\"httr\")\nlibrary(httr)\n# install.packages(\"summarytools\")\nlibrary(summarytools)\n```\n\n```{r load_qcew_by_area23, include= FALSE}\nlac_naics <- read.csv(\"lac_naics23\")\noc_naics <- read.csv(\"oc_naics23\")\nsb_naics <- read.csv(\"sb_naics23\")\n```\n\n#### subsetting for naics industries of interest\n\n```{r subset_naics_industry23}\nlac_naics <-  lac_naics %>% # Industries of interest below in LA county\n  rename(fips = area_fips, \n         naics = industry_code) %>% \n  filter(naics %in% c(\"811192\", \"315\",   # %>%, filter for NAICS obsvr that r in this vector\n                      \"493110\", \"722513\"))\n# NA check below, can ignore \n#lapply(lac_naics2, function(x) sum(is.na(x))) # 0 NA's as expected? yes\n#print(names(lac_naics))\nlac_naics <- lac_naics[-c(1,5:6, 9, 17, 25)]  #removing non-interest vars\n\noc_naics <-  oc_naics %>% # Industries of interest below in LA county\n  rename(fips = area_fips, \n         naics = industry_code) %>% \n  filter(naics %in% c(\"811192\", \"315\",   # %>%, filter: see if NAICS obsvr r in the vector\n                      \"493110\", \"722513\"))\n\noc_naics <- oc_naics[-c(1, 7, 10, 18,26)] \nsb_naics <- sb_naics %>% \n  rename(fips = area_fips,\n         naics = industry_code) %>% \n  filter(naics %in% c(\"811192\", \"315\",   # %>%, filter: see if NAICS obsvr r in the vector\n                      \"493110\", \"722513\")) \nsb_naics <- sb_naics[-c(1, 7, 10, 18,26)] \n```\n\n```{r assign_industry23}\nassign_industry_fun <- function(naics, taxable_annual_wages) {\n  industry <- case_when( \n    # More specific & condition first\n    naics == 493110 & taxable_annual_wages == 0 ~ \"Warehouse & Storage (public)\",  \n    naics == 493110 ~ \"Warehouse & Storage\",  # General condition second\n    naics == 722513 ~ \"Fast Food\",\n    naics == 811192 ~ \"Car Wash\",\n    naics == 315 ~ \"Apparel Mfg.\", \n    TRUE ~ NA_character_\n  )\n  return(industry)\n}\n## Case_when function is great for creating new rows based on conditions, great to use with filter in order to remove rows i believe \n#function 2 for 2024 Q1\nindustry_fun24 <- function(naics, taxable_qtrly_wages) {\n  industry <- case_when( \n    # More specific & condition first\n    naics == 493110 & taxable_qtrly_wages == 0 ~ \"Warehouse & Storage (public)\",  \n    naics == 493110 ~ \"Warehouse & Storage\",  # General condition second\n    naics == 722513 ~ \"Fast Food\",\n    naics == 811192 ~ \"Car Wash\",\n    naics == 315 ~ \"Apparel Mfg.\", \n    TRUE ~ NA_character_\n  )\n  return(industry)\n}\n#Applying Function 1 - assign industry to different \nlac_naics <- lac_naics %>% \n  mutate(industry = \n           (assign_industry_fun(naics, taxable_annual_wages))) %>% # apply mutate to industry col bcus casewhen\n  select(1:2, industry, everything())             # function only applies to vectorized lists not entire df \n\noc_naics <- oc_naics %>% \n  mutate(industry = \n           (assign_industry_fun(naics, taxable_annual_wages))) %>% # apply mutate to industry col bcus casewhen\n  select(1:2, industry, everything())   \n\nsb_naics <- sb_naics %>% \n  mutate(industry = \n           (assign_industry_fun(naics, taxable_annual_wages))) %>% # apply mutate to industry col bcus casewhen\n  select(1:2, industry, everything())   \n#str(lac_naics2)\n#troubleshootign function -- it works \n#lac_naics2 %>% \n  #filter(naics == 493110) %>% #filter for warehouse \n  #select(industry, naics, taxable_annual_wages)\n\n```\n\n#### Calling 2024 QCEW data\n\n-   Calculating % change great\n    [Rpubs](https://rpubs.com/techanswers88/RateOfChange) article with\n    visuals. If comparing percent change of Q1 24 and Q1 23 then I must\n    download Q1 23 data.\n\n    -   [Percentage\n        change](https://ec.europa.eu/eurostat/statistics-explained/index.php?title=Beginners:Statistical_concept_-_Percentage_change_and_percentage_points#:~:text=When%20you%20have%20data%20for,change%2C%20i.e.%20the%20percentage%20change.)When\n        you have data for two points in time, you can calculate how much\n        change there has been during this period. The result is\n        expressed as a percentage (in absolute numbers, it's just a\n        difference) and is called the rate of change, i.e. the\n        percentage change. It is calculated as follows: \\[(Number at\n        later time รท Number at earlier time) - 1\\] ร 100.\n\n        Example In 2010, there were 4.8 million persons employed in\n        country X and in 2015 there were 5.2 million. The percentage\n        change from 2010 to 2015 is then calculated as follows: \\[(5.2 รท\n        4.8)-1\\] x 100= +8.3%\n\n-   **marijuana NAICS: 459991** Marijuana stores, medical or\n    recreational\n\n-   NAICS **812300 - Drycleaning and Laundry Services**\n\n-   **maintenance workers** NAICS: **561720**, cleaning offices/ homes,\n    building cleaning services, residential cleaning services\n\n```{r all_2024}\n#2024 Q1 - call data \nlac_naics24 <- read.csv(\"lac_naics24.csv\")\noc_naics24 <- read.csv(\"oc_naics24.csv\")\nsb_naics24 <- read.csv(\"sb_naics24.csv\")\n```\n\ncase_when follows (condition \\~ result), evaluates each condition in\norder, and if it finds the first TRUE condition for a row, it applies\nthe corresponding result. DONE\n\n```{r flag_filter_public_rows}\n#filter public/ federal for 2023 \nlac_naics <- lac_naics %>% \n  mutate(flag = ifelse(lac_naics$own_code == 3, TRUE, FALSE)) %>% \n  filter(flag == FALSE)\noc_naics <- oc_naics %>% \n  mutate(flag = ifelse(oc_naics$own_code == 3, TRUE, FALSE)) %>% \n  filter(flag == FALSE)\n#sb_naics24$flag <- sb_naics24 %>% \n  #mutate(flag = (case_when(own_code == 3 | own_code == 1 ~ TRUE,\n  #         TRUE ~ FALSE ))) #general condition!! \nsb_naics <- sb_naics %>% \n  mutate(flag = case_when(own_code==3 | own_code ==1 ~ TRUE,\n                          TRUE ~ FALSE)) %>% \n  filter(flag == FALSE)\n\n```\n\n```{r assign_industry24, eval = FALSE}\n# Applying function 2 - assigning industry  \nlac_naics24 <- lac_naics24 %>% \n  mutate(industry = \n           (assign_industry_fun(naics, taxable_qtrly_wages))) %>% \n  select(1:2, industry, everything())\n\noc_naics24 <- oc_naics24[-c(2, 4:5, 7:8, 17, 26)] %>% \n  mutate(industry = \n           (industry_fun24(naics, taxable_qtrly_wages))) %>% \n  select(1:2, industry, everything())\n\nsb_naics24 <- sb_naics24[-c(2, 4:5, 7:8, 17, 26)] %>% \n  mutate(industry = \n           (industry_fun24(naics, taxable_qtrly_wages))) %>% \n  select(1:2, industry, everything())#remove unwanted row of public fast food establishment\n```\n\n```{r failed_merge}\n#industry <- merge(lac_naics2, oc_naics, by = c(\"fips\", \"naics\"), all = \"TRUE\")\n#industry <- merge(industry, sb_naics, by = c(\"fips\", \"naics\"), all = \"TRUE\")\n#str(industry)\n#rm(industry) #left join nor full join achieve deisred result, need tidydata see below\n```\n\nNote: What other industries are we interested in viewing employment\nstatistics on?\n\n```{r bind_rows_merge_23and24}\n#add county identifier \nlac_naics$county <- \"Los Angeles County\"\noc_naics$county <- \"Orange County\"\nsb_naics$county <- \"San Bernardino County\"\n#BIND ROW 2023 YEAR \nindustries <- bind_rows(lac_naics, oc_naics, sb_naics) %>% \n  select(1, county, everything())  #success: removed warehouse public, all have an indsutry and county name, only\n# NA is the agg lvl code- not important \n#print(names(industries))\n#industries <- industries\n\n#merge 2024 \n#add county identifier \nlac_naics24$county <- \"Los Angeles County\"\noc_naics24$county <- \"Orange County\"\nsb_naics24$county <- \"San Bernardino County\"\n#BIND ROW\nindustries24 <- bind_rows(lac_naics24, oc_naics24, sb_naics24) %>% \n  select(1, county, everything()) \n\nindustries24 <- industries24 %>%  select(-c(3, 6:7, 10))\n```\n\n```{r establishment_ bycounty_visual}\n#DESCRIPTIVE STATS \np <- ggplot(data = industries, aes(x = industry, y = annual_avg_estabs, fill = county)) \np1 <- p + geom_bar(stat = \"identity\", position = \"dodge\") + labs(title = \"Total Industry Establishments by County (2023)\", \n       y = \"Annual Average Establishments\",\n       x = \"Industry\",\n       caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\" ) \np1 <- p1 + theme_linedraw() + theme(axis.text.x = element_text(angle = 15, hjust = 1))\n# p1 + theme_fivethirtyeight()\np1\n```\n\n```{r industry_bycounty_visual, results = 'hide'}\n#By industry, faceted into three counties \np2 <- ggplot(data = industries, aes(x = industry, y = annual_avg_estabs, fill = industry)) + \n  geom_bar(stat = \"identity\", position = \"dodge\") + labs(title = \"Total Industry Establishments by County (2023)\", y = \"Annual Average Establishments\", x = \"Industry\", caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\" ) + theme_linedraw()+ facet_wrap(~ county) + theme(axis.text.x = element_text(angle = 25, hjust = 1)) \n```\n\n```{r industry_bycounty_visual2}\np2\np2.5 <- ggplot(data = industries, aes(x = industry, y = annual_avg_wkly_wage, fill = industry)) + \n  geom_bar(stat = \"identity\", position = \"dodge\") + labs(title = \"Average weekly wage by County (2023)\", y = \"Annual Average weekly wage\", x = \"Industry\", caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\") + theme_linedraw()+ facet_wrap(~ county) + theme(axis.text.x = element_text(angle = 25, hjust = 1))\np2.5\nggsave(\"avg_wkly_wage23.png\", plot = p2.5, width = 8, height = 6)\n```\n\nFrom this figure we can see the lion's share of employment that is the\nfast food industry. Los Anegeles County through its sheer size, of\ncourse, constitutes a majority of the total count of fast food\nrestaurants. Cutting the fast food industry out of the picture we can\nzoom in on\\\n\\### San Bernardino County\n\n```{r sb_industry_count}\nindustries_filter <- industries %>% \n  filter(county == \"San Bernardino County\")\np3 <- ggplot(data = industries_filter, aes(x = industry,y = annual_avg_estabs, fill = industry)) + geom_bar(stat = \"identity\", position = \"dodge\", width = 0.5) + labs(title = \"Industry Total in San Bernardino County (2023)\", y = \"Annual Average Establishments\", x = \"Industry\", caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\" ) \np3 <- p3 + theme_linedraw() +theme(axis.text.x = element_text(angle = -370, hjust = 0))+ coord_cartesian(ylim = c(0,750))\np3\n```\n\n```{r ff_wages_by_county23}\nindustries_filter <- industries %>% filter(industry == \"Fast Food\")\n\np4 <- ggplot(data = industries_filter, aes(x = county, y = annual_avg_wkly_wage, fill = county)) + \n  geom_bar(stat = \"identity\", width = 0.5) + \n  labs(title = \"Average Weekly Wages in LA, OC, and SB County (2023)\", \n       y = \"Average Weekly wages\", \n       x = \"Industry\", \n       caption = \"Source: Bureau of Labor Statistics Quarterly Census on Employment and Wages\") +\n  theme_linedraw() + \n  theme(axis.text.x = element_text(angle = -370, hjust = 0))\np4\n# print(names(industries))\n```\n\nannual_avg_emplvl\n\ntotal_annual_wages\n\nannual_avg_estabs\n\navg annual pay - done for ff and ware\n\nannual_avg_wkly_wage - done for ff and ware\n\nannual_contributions - annual taxable wages what they contirbute to gov\nprograms etc avg_annual_pay\n\n```{r avg_wage_lac23}\nindustries_filter <- industries %>% \n  filter(county == \"Los Angeles County\")\np5 <- ggplot(data = industries_filter, aes(x = industry,y = annual_avg_wkly_wage, fill = industry)) + geom_bar(stat = \"identity\", width = 0.5) + labs(title = \"Average Weekly Wages in Los Angeles County (2023)\", y = \"Average Weekly wages\", x = \"Industry\", caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\" )\np5\np4 <- p4 + theme_linedraw() + theme(axis.text.x = element_text(angle = -370, hjust = 0))\np4\n```\n\n## Bureau of Labor Statistics Quarterly Census on Employment and Wages(QCEW) 2023\n\n```{r sample_area_df, echo = FALSE}\n#DONE sample NAICS df, To do: download LA and OC and include all of them in this df preview\nindustries2 <- industries_filter[-c(1,3,5)]\nindustries %>%\n  kbl(table.attr = 'data-quarto-disable-processing=\"true\"', \n      caption = \"QCEW 2023\") %>% \n  scroll_box(width = \"90%\", height = \"400px\" ) %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"condensed\"), \n                full_width = F) \n  \n```\n\n**Notes on. kable styling: column_spec!!!** mtcars\\[1:8, 1:8\\] %\\>%\nkbl() %\\>% kable_paper(full_width = F) %\\>% column_spec(2, color =\nspec_color(mtcars$mpg[1:8]),\n              link = \"https://haozhu233.github.io/kableExtra/\") %>%\n  column_spec(6, color = \"white\",\n              background = spec_color(mtcars$drat\\[1:8\\], end = 0.7),\npopover = paste(\"am:\", mtcars\\$am\\[1:8\\]))\n\nWhat about text wrapping? if i want ot align_right how can I write that\ntext? might have to use a function? Currently alright right doesnt work\nwell bcus table is huge\n\n```{r osm_nominatum_api}\n#library(osmdata)\n# bounding box \n# lac_bb <- getbb(\"Los Angeles County, California\")\n# url <- \"http://httpbin.org/ip\"\n# ip <- httr::GET(url)\n# httr::content(ip)\n# httr::GET(\"https://nominatim.openstreetmap.org/search?q=Los+Angeles+County+California&format=json\")\n# above doesnt work, use places API instead, nominatum uses sf files to plot \n# exmaple below: mapview(pharmacies_sf$osm_points, zcol = \"name\")\n```\n\n```{r}\n#installed <- as.data.frame(installed.packages())\n\n#write.csv(installed, 'installed_previously.csv')\n```\n\nPlaces API (new): includes nearby search and text search The main\ndifference between the two searches is that Text Search (New) lets you\nspecify an arbitrary search string while Nearby Search (New) requires a\nspecific area in which to search. Places API (not new):\\\n- A Place Search returns a list of places along with summary information\nabout each place; additional information is available via a Place\nDetails query.\n\n```{r streets_api}\nget_places <- function(api_key, location, radius = 25000, type = \"restaurant\") {\n  base_url <- \"https://maps.googleapis.com/maps/api/place/nearbysearch/json\"\n  all_places <- data.frame()\n  next_page_token <- NULL\n\n  repeat {\n    response <- GET(base_url, query = list(\n      location = location,\n      radius = radius,\n      type = type,\n      keyword = \"fast food\",\n      key = api_key,\n      pagetoken = next_page_token\n    ))\n    content <- content(response, \"parsed\")\n    \n    if (content$status != \"OK\") {\n      stop(\"API request was not successful: \", content$status)\n    }\n    places <- content$results\n    places_df <- data.frame(\n      name = sapply(places, function(x) x$name),\n      lat = sapply(places, function(x) x$geometry$location$lat),\n      lng = sapply(places, function(x) x$geometry$location$lng),\n      address = sapply(places, function(x) x$vicinity)\n    )\n    all_places <- rbind(all_places, places_df)\n    if (!is.null(content$next_page_token)) {\n      next_page_token <- content$next_page_token\n      Sys.sleep(2)  # Required delay before using next_page_token\n    } else {\n      break\n    }\n  }\n  return(all_places)\n}\n#defined a function above to query the API\n\napi_key <- \"AIzaSyDxCIOyFiUyQyPDMkoSfJntu_JQPhGPLOI\"\nla_center_cooridnate <- \"34.0522,-118.2437\" # negative for west i believe \nradius <- 25000 #25000 km  #25 km ~ 15 mi \n\nffood_geoloc <- get_places(api_key, la_center_cooridnate, radius, type = \"restaurant\")\n```\n\n## Mapping the Fast Food Industry\n\n```{r map1}\n#create map widget, initial layer \nm <- leaflet(data = ffood_geoloc) %>% \n  addTiles()\nm %>% addCircleMarkers(\n  ~lng, ~lat, # ~ calls the columns from df above, positions markers on map\n  label = ~paste(name, address), \n  radius = 3\n)\n```\n","srcMarkdownNoYaml":"\n\n# On the job, with Heat.\n\nSeven California workers died from indoor heat from [2010 to\n2017](https://www.rand.org/pubs/working_papers/WRA1386-1.html). The real\nnumber is believed to be significantly higher, however, it remains\nconsistently under-reported of the lack of recognition of indoor heat as\na factor in these cases of death. Many more ED visits can actually be\nattributed to heat but aren't reported as an underlying cause of\n\nLos Angeles County. San Bernardino County. Orange County. A southern\nCalifornia paradise? Or a microcosm of the labor fight?\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\nlibrary(readr)\n#install.packages(\"patchwork\")\nlibrary(patchwork)\nlibrary(kableExtra)\nlibrary(ggthemes)\nlibrary(readxl)\nlibrary(janitor)\nlibrary(tidyverse)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(stargazer)\nlibrary(gridExtra)\nlibrary(caret)\nlibrary(car)\n#install.packages(\"sf\")\nlibrary(sf)\nlibrary(usmap)\nlibrary(RColorBrewer)\nlibrary(maps)\nlibrary(mapdata)\nlibrary(leaflet)\nlibrary(lubridate)\nlibrary(choroplethr)\n#install.packages(\"countyweather\")  #not available for this R version\n#install.packages(\"rnoaa\")\nlibrary(sp)\nlibrary(spatial)\nlibrary(devtools)\n#install.packages(\"osmdata\")\nlibrary(mapview)\nlibrary(osmdata)\n#install.packages(\"httr\")\nlibrary(httr)\n# install.packages(\"summarytools\")\nlibrary(summarytools)\n```\n\n```{r load_qcew_by_area23, include= FALSE}\nlac_naics <- read.csv(\"lac_naics23\")\noc_naics <- read.csv(\"oc_naics23\")\nsb_naics <- read.csv(\"sb_naics23\")\n```\n\n#### subsetting for naics industries of interest\n\n```{r subset_naics_industry23}\nlac_naics <-  lac_naics %>% # Industries of interest below in LA county\n  rename(fips = area_fips, \n         naics = industry_code) %>% \n  filter(naics %in% c(\"811192\", \"315\",   # %>%, filter for NAICS obsvr that r in this vector\n                      \"493110\", \"722513\"))\n# NA check below, can ignore \n#lapply(lac_naics2, function(x) sum(is.na(x))) # 0 NA's as expected? yes\n#print(names(lac_naics))\nlac_naics <- lac_naics[-c(1,5:6, 9, 17, 25)]  #removing non-interest vars\n\noc_naics <-  oc_naics %>% # Industries of interest below in LA county\n  rename(fips = area_fips, \n         naics = industry_code) %>% \n  filter(naics %in% c(\"811192\", \"315\",   # %>%, filter: see if NAICS obsvr r in the vector\n                      \"493110\", \"722513\"))\n\noc_naics <- oc_naics[-c(1, 7, 10, 18,26)] \nsb_naics <- sb_naics %>% \n  rename(fips = area_fips,\n         naics = industry_code) %>% \n  filter(naics %in% c(\"811192\", \"315\",   # %>%, filter: see if NAICS obsvr r in the vector\n                      \"493110\", \"722513\")) \nsb_naics <- sb_naics[-c(1, 7, 10, 18,26)] \n```\n\n```{r assign_industry23}\nassign_industry_fun <- function(naics, taxable_annual_wages) {\n  industry <- case_when( \n    # More specific & condition first\n    naics == 493110 & taxable_annual_wages == 0 ~ \"Warehouse & Storage (public)\",  \n    naics == 493110 ~ \"Warehouse & Storage\",  # General condition second\n    naics == 722513 ~ \"Fast Food\",\n    naics == 811192 ~ \"Car Wash\",\n    naics == 315 ~ \"Apparel Mfg.\", \n    TRUE ~ NA_character_\n  )\n  return(industry)\n}\n## Case_when function is great for creating new rows based on conditions, great to use with filter in order to remove rows i believe \n#function 2 for 2024 Q1\nindustry_fun24 <- function(naics, taxable_qtrly_wages) {\n  industry <- case_when( \n    # More specific & condition first\n    naics == 493110 & taxable_qtrly_wages == 0 ~ \"Warehouse & Storage (public)\",  \n    naics == 493110 ~ \"Warehouse & Storage\",  # General condition second\n    naics == 722513 ~ \"Fast Food\",\n    naics == 811192 ~ \"Car Wash\",\n    naics == 315 ~ \"Apparel Mfg.\", \n    TRUE ~ NA_character_\n  )\n  return(industry)\n}\n#Applying Function 1 - assign industry to different \nlac_naics <- lac_naics %>% \n  mutate(industry = \n           (assign_industry_fun(naics, taxable_annual_wages))) %>% # apply mutate to industry col bcus casewhen\n  select(1:2, industry, everything())             # function only applies to vectorized lists not entire df \n\noc_naics <- oc_naics %>% \n  mutate(industry = \n           (assign_industry_fun(naics, taxable_annual_wages))) %>% # apply mutate to industry col bcus casewhen\n  select(1:2, industry, everything())   \n\nsb_naics <- sb_naics %>% \n  mutate(industry = \n           (assign_industry_fun(naics, taxable_annual_wages))) %>% # apply mutate to industry col bcus casewhen\n  select(1:2, industry, everything())   \n#str(lac_naics2)\n#troubleshootign function -- it works \n#lac_naics2 %>% \n  #filter(naics == 493110) %>% #filter for warehouse \n  #select(industry, naics, taxable_annual_wages)\n\n```\n\n#### Calling 2024 QCEW data\n\n-   Calculating % change great\n    [Rpubs](https://rpubs.com/techanswers88/RateOfChange) article with\n    visuals. If comparing percent change of Q1 24 and Q1 23 then I must\n    download Q1 23 data.\n\n    -   [Percentage\n        change](https://ec.europa.eu/eurostat/statistics-explained/index.php?title=Beginners:Statistical_concept_-_Percentage_change_and_percentage_points#:~:text=When%20you%20have%20data%20for,change%2C%20i.e.%20the%20percentage%20change.)When\n        you have data for two points in time, you can calculate how much\n        change there has been during this period. The result is\n        expressed as a percentage (in absolute numbers, it's just a\n        difference) and is called the rate of change, i.e. the\n        percentage change. It is calculated as follows: \\[(Number at\n        later time รท Number at earlier time) - 1\\] ร 100.\n\n        Example In 2010, there were 4.8 million persons employed in\n        country X and in 2015 there were 5.2 million. The percentage\n        change from 2010 to 2015 is then calculated as follows: \\[(5.2 รท\n        4.8)-1\\] x 100= +8.3%\n\n-   **marijuana NAICS: 459991** Marijuana stores, medical or\n    recreational\n\n-   NAICS **812300 - Drycleaning and Laundry Services**\n\n-   **maintenance workers** NAICS: **561720**, cleaning offices/ homes,\n    building cleaning services, residential cleaning services\n\n```{r all_2024}\n#2024 Q1 - call data \nlac_naics24 <- read.csv(\"lac_naics24.csv\")\noc_naics24 <- read.csv(\"oc_naics24.csv\")\nsb_naics24 <- read.csv(\"sb_naics24.csv\")\n```\n\ncase_when follows (condition \\~ result), evaluates each condition in\norder, and if it finds the first TRUE condition for a row, it applies\nthe corresponding result. DONE\n\n```{r flag_filter_public_rows}\n#filter public/ federal for 2023 \nlac_naics <- lac_naics %>% \n  mutate(flag = ifelse(lac_naics$own_code == 3, TRUE, FALSE)) %>% \n  filter(flag == FALSE)\noc_naics <- oc_naics %>% \n  mutate(flag = ifelse(oc_naics$own_code == 3, TRUE, FALSE)) %>% \n  filter(flag == FALSE)\n#sb_naics24$flag <- sb_naics24 %>% \n  #mutate(flag = (case_when(own_code == 3 | own_code == 1 ~ TRUE,\n  #         TRUE ~ FALSE ))) #general condition!! \nsb_naics <- sb_naics %>% \n  mutate(flag = case_when(own_code==3 | own_code ==1 ~ TRUE,\n                          TRUE ~ FALSE)) %>% \n  filter(flag == FALSE)\n\n```\n\n```{r assign_industry24, eval = FALSE}\n# Applying function 2 - assigning industry  \nlac_naics24 <- lac_naics24 %>% \n  mutate(industry = \n           (assign_industry_fun(naics, taxable_qtrly_wages))) %>% \n  select(1:2, industry, everything())\n\noc_naics24 <- oc_naics24[-c(2, 4:5, 7:8, 17, 26)] %>% \n  mutate(industry = \n           (industry_fun24(naics, taxable_qtrly_wages))) %>% \n  select(1:2, industry, everything())\n\nsb_naics24 <- sb_naics24[-c(2, 4:5, 7:8, 17, 26)] %>% \n  mutate(industry = \n           (industry_fun24(naics, taxable_qtrly_wages))) %>% \n  select(1:2, industry, everything())#remove unwanted row of public fast food establishment\n```\n\n```{r failed_merge}\n#industry <- merge(lac_naics2, oc_naics, by = c(\"fips\", \"naics\"), all = \"TRUE\")\n#industry <- merge(industry, sb_naics, by = c(\"fips\", \"naics\"), all = \"TRUE\")\n#str(industry)\n#rm(industry) #left join nor full join achieve deisred result, need tidydata see below\n```\n\nNote: What other industries are we interested in viewing employment\nstatistics on?\n\n```{r bind_rows_merge_23and24}\n#add county identifier \nlac_naics$county <- \"Los Angeles County\"\noc_naics$county <- \"Orange County\"\nsb_naics$county <- \"San Bernardino County\"\n#BIND ROW 2023 YEAR \nindustries <- bind_rows(lac_naics, oc_naics, sb_naics) %>% \n  select(1, county, everything())  #success: removed warehouse public, all have an indsutry and county name, only\n# NA is the agg lvl code- not important \n#print(names(industries))\n#industries <- industries\n\n#merge 2024 \n#add county identifier \nlac_naics24$county <- \"Los Angeles County\"\noc_naics24$county <- \"Orange County\"\nsb_naics24$county <- \"San Bernardino County\"\n#BIND ROW\nindustries24 <- bind_rows(lac_naics24, oc_naics24, sb_naics24) %>% \n  select(1, county, everything()) \n\nindustries24 <- industries24 %>%  select(-c(3, 6:7, 10))\n```\n\n```{r establishment_ bycounty_visual}\n#DESCRIPTIVE STATS \np <- ggplot(data = industries, aes(x = industry, y = annual_avg_estabs, fill = county)) \np1 <- p + geom_bar(stat = \"identity\", position = \"dodge\") + labs(title = \"Total Industry Establishments by County (2023)\", \n       y = \"Annual Average Establishments\",\n       x = \"Industry\",\n       caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\" ) \np1 <- p1 + theme_linedraw() + theme(axis.text.x = element_text(angle = 15, hjust = 1))\n# p1 + theme_fivethirtyeight()\np1\n```\n\n```{r industry_bycounty_visual, results = 'hide'}\n#By industry, faceted into three counties \np2 <- ggplot(data = industries, aes(x = industry, y = annual_avg_estabs, fill = industry)) + \n  geom_bar(stat = \"identity\", position = \"dodge\") + labs(title = \"Total Industry Establishments by County (2023)\", y = \"Annual Average Establishments\", x = \"Industry\", caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\" ) + theme_linedraw()+ facet_wrap(~ county) + theme(axis.text.x = element_text(angle = 25, hjust = 1)) \n```\n\n```{r industry_bycounty_visual2}\np2\np2.5 <- ggplot(data = industries, aes(x = industry, y = annual_avg_wkly_wage, fill = industry)) + \n  geom_bar(stat = \"identity\", position = \"dodge\") + labs(title = \"Average weekly wage by County (2023)\", y = \"Annual Average weekly wage\", x = \"Industry\", caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\") + theme_linedraw()+ facet_wrap(~ county) + theme(axis.text.x = element_text(angle = 25, hjust = 1))\np2.5\nggsave(\"avg_wkly_wage23.png\", plot = p2.5, width = 8, height = 6)\n```\n\nFrom this figure we can see the lion's share of employment that is the\nfast food industry. Los Anegeles County through its sheer size, of\ncourse, constitutes a majority of the total count of fast food\nrestaurants. Cutting the fast food industry out of the picture we can\nzoom in on\\\n\\### San Bernardino County\n\n```{r sb_industry_count}\nindustries_filter <- industries %>% \n  filter(county == \"San Bernardino County\")\np3 <- ggplot(data = industries_filter, aes(x = industry,y = annual_avg_estabs, fill = industry)) + geom_bar(stat = \"identity\", position = \"dodge\", width = 0.5) + labs(title = \"Industry Total in San Bernardino County (2023)\", y = \"Annual Average Establishments\", x = \"Industry\", caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\" ) \np3 <- p3 + theme_linedraw() +theme(axis.text.x = element_text(angle = -370, hjust = 0))+ coord_cartesian(ylim = c(0,750))\np3\n```\n\n```{r ff_wages_by_county23}\nindustries_filter <- industries %>% filter(industry == \"Fast Food\")\n\np4 <- ggplot(data = industries_filter, aes(x = county, y = annual_avg_wkly_wage, fill = county)) + \n  geom_bar(stat = \"identity\", width = 0.5) + \n  labs(title = \"Average Weekly Wages in LA, OC, and SB County (2023)\", \n       y = \"Average Weekly wages\", \n       x = \"Industry\", \n       caption = \"Source: Bureau of Labor Statistics Quarterly Census on Employment and Wages\") +\n  theme_linedraw() + \n  theme(axis.text.x = element_text(angle = -370, hjust = 0))\np4\n# print(names(industries))\n```\n\nannual_avg_emplvl\n\ntotal_annual_wages\n\nannual_avg_estabs\n\navg annual pay - done for ff and ware\n\nannual_avg_wkly_wage - done for ff and ware\n\nannual_contributions - annual taxable wages what they contirbute to gov\nprograms etc avg_annual_pay\n\n```{r avg_wage_lac23}\nindustries_filter <- industries %>% \n  filter(county == \"Los Angeles County\")\np5 <- ggplot(data = industries_filter, aes(x = industry,y = annual_avg_wkly_wage, fill = industry)) + geom_bar(stat = \"identity\", width = 0.5) + labs(title = \"Average Weekly Wages in Los Angeles County (2023)\", y = \"Average Weekly wages\", x = \"Industry\", caption = \"Source: Buruea of Labor Statistics Quarterly Census on Employment and Wages\" )\np5\np4 <- p4 + theme_linedraw() + theme(axis.text.x = element_text(angle = -370, hjust = 0))\np4\n```\n\n## Bureau of Labor Statistics Quarterly Census on Employment and Wages(QCEW) 2023\n\n```{r sample_area_df, echo = FALSE}\n#DONE sample NAICS df, To do: download LA and OC and include all of them in this df preview\nindustries2 <- industries_filter[-c(1,3,5)]\nindustries %>%\n  kbl(table.attr = 'data-quarto-disable-processing=\"true\"', \n      caption = \"QCEW 2023\") %>% \n  scroll_box(width = \"90%\", height = \"400px\" ) %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"condensed\"), \n                full_width = F) \n  \n```\n\n**Notes on. kable styling: column_spec!!!** mtcars\\[1:8, 1:8\\] %\\>%\nkbl() %\\>% kable_paper(full_width = F) %\\>% column_spec(2, color =\nspec_color(mtcars$mpg[1:8]),\n              link = \"https://haozhu233.github.io/kableExtra/\") %>%\n  column_spec(6, color = \"white\",\n              background = spec_color(mtcars$drat\\[1:8\\], end = 0.7),\npopover = paste(\"am:\", mtcars\\$am\\[1:8\\]))\n\nWhat about text wrapping? if i want ot align_right how can I write that\ntext? might have to use a function? Currently alright right doesnt work\nwell bcus table is huge\n\n```{r osm_nominatum_api}\n#library(osmdata)\n# bounding box \n# lac_bb <- getbb(\"Los Angeles County, California\")\n# url <- \"http://httpbin.org/ip\"\n# ip <- httr::GET(url)\n# httr::content(ip)\n# httr::GET(\"https://nominatim.openstreetmap.org/search?q=Los+Angeles+County+California&format=json\")\n# above doesnt work, use places API instead, nominatum uses sf files to plot \n# exmaple below: mapview(pharmacies_sf$osm_points, zcol = \"name\")\n```\n\n```{r}\n#installed <- as.data.frame(installed.packages())\n\n#write.csv(installed, 'installed_previously.csv')\n```\n\nPlaces API (new): includes nearby search and text search The main\ndifference between the two searches is that Text Search (New) lets you\nspecify an arbitrary search string while Nearby Search (New) requires a\nspecific area in which to search. Places API (not new):\\\n- A Place Search returns a list of places along with summary information\nabout each place; additional information is available via a Place\nDetails query.\n\n```{r streets_api}\nget_places <- function(api_key, location, radius = 25000, type = \"restaurant\") {\n  base_url <- \"https://maps.googleapis.com/maps/api/place/nearbysearch/json\"\n  all_places <- data.frame()\n  next_page_token <- NULL\n\n  repeat {\n    response <- GET(base_url, query = list(\n      location = location,\n      radius = radius,\n      type = type,\n      keyword = \"fast food\",\n      key = api_key,\n      pagetoken = next_page_token\n    ))\n    content <- content(response, \"parsed\")\n    \n    if (content$status != \"OK\") {\n      stop(\"API request was not successful: \", content$status)\n    }\n    places <- content$results\n    places_df <- data.frame(\n      name = sapply(places, function(x) x$name),\n      lat = sapply(places, function(x) x$geometry$location$lat),\n      lng = sapply(places, function(x) x$geometry$location$lng),\n      address = sapply(places, function(x) x$vicinity)\n    )\n    all_places <- rbind(all_places, places_df)\n    if (!is.null(content$next_page_token)) {\n      next_page_token <- content$next_page_token\n      Sys.sleep(2)  # Required delay before using next_page_token\n    } else {\n      break\n    }\n  }\n  return(all_places)\n}\n#defined a function above to query the API\n\napi_key <- \"AIzaSyDxCIOyFiUyQyPDMkoSfJntu_JQPhGPLOI\"\nla_center_cooridnate <- \"34.0522,-118.2437\" # negative for west i believe \nradius <- 25000 #25000 km  #25 km ~ 15 mi \n\nffood_geoloc <- get_places(api_key, la_center_cooridnate, radius, type = \"restaurant\")\n```\n\n## Mapping the Fast Food Industry\n\n```{r map1}\n#create map widget, initial layer \nm <- leaflet(data = ffood_geoloc) %>% \n  addTiles()\nm %>% addCircleMarkers(\n  ~lng, ~lat, # ~ calls the columns from df above, positions markers on map\n  label = ~paste(name, address), \n  radius = 3\n)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["assets_css/styles.css"],"toc":true,"output-file":"heat_and_occupation.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"sandstone","grid":{"body-width":"900px"},"title":"Indoor Heat and Occupation","date":"8/16/2024","editor_options":{"markdown":{"wrap":72}},"toc_float":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}