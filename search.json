[
  {
    "objectID": "resources.html#what-is-the-new-indoor-heat-standard",
    "href": "resources.html#what-is-the-new-indoor-heat-standard",
    "title": "Resources",
    "section": "What is the new Indoor Heat Standard?",
    "text": "What is the new Indoor Heat Standard?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOverview of your rights under California’s Indoor Heat Standard\n\n\n\n\n\n\nWater:\nWorkers have a right to access fresh, cool, and potable drinking water. Water must be as close as possible to work and cool down areas.\nLowering workplace temperature:\nA boss/ supervisor must cool down the work area, such as using A/C, under hot temperatures. If that is not enough, bosses must “limit the amount of time spent working in hot areas.” If that is still not enough a boss must provide “heat-protective clothing.”\nWorkers have a right to these protections when:\n\nTemperatures are above 87°\nTemperatures are above 82° and workers wear clothing that restricts your ability to cool down\nTemperatures are above 82° and employees work near an object that makes the room hotter.\n\n\n\nRest:\nWorkers have a right to take a preventative cool-down break when they feel the need to do so to protect themselves from overheating. You cannot be discouraged to take this break.\nTraining:\nWorkers have a right to heat trainings to understand heat illness and symptoms, risk factors, water consumption, and emergency response actions. Supervisors must be trained in the same subjects.\n\n\nCool Down Areas:\nWorkers have the right to access a cool-down area that is kept at 82° or lower whenever needed.\nHeat Illness Prevention Plan:\nA boss must maintain a heat illness prevention plan in English and the language understood by the majority of the workers.\n\n\n\n\n\nThis explanation of the indoor heat standard comes directly from CALOSHA’s heat resource website 99Calor found here.\n\nWhen does your boss need to do something about high temperatures? At 87°F or 82°F!\nThe chart below describes when an employer must take action to lower workplace temperatures that hit 87°F or 82°F if you are wearing “heat restrictive clothing” or working near a “high radiant heat source.” These terms are defined below.\n\n\n\n\n\n\n\n\n%%{init: {\"flowchart\": {\"htmlLabels\": false}} }%%\nflowchart LR\n    A[\"`At Work`\"] --&gt; B1[\"`Temp/ heat index hits 82F while\n    wearing 'heat restrictive clothing'`\"]\n    A --&gt; B2[\"`Temp/ heat index hits 87F`\"]\n    A --&gt; B3[\"`Temp/ heat index hits 82F while working \n    near 'radiant heat source'`\"]\n    B1 --&gt; C[\"`Use Engineering \n    Controls: \n    - A/C, \n    - mist fans, \n    - acclimate, \n    - isolate heat source, etc.`\"]\n    B2 --&gt; C\n    B3 --&gt; C\n    C --&gt;|If still too hot|D[\"`Use Administrative\n    Controls: \n    - Lower work intensity, \n    - rotate work in hot areas, \n    - natural ventilation, etc.`\" ] \n    D --&gt; |If still too hot| E[\"`Boss must provide\n    'personal heat-protective equipment'`\"]\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\nDefinitions\n\n“Heat restrictive clothing”\n\nFull body clothing that reduces your ability to cool off. Examples: waterproof/ insulated coveralls, welding jackets, hazard protection suits.\n\n“Radiant heat”\n\nHeat transmitted by electromagnetic waves and not by conduction or convection. In other words, radiant heat includes the sun, hot objects (e.g. large machinery), hot liquids (e.g. kitchen oils), hot surfaces (e.g. heat lamps, grills, ovens), and fire.\n\n“Radiant heat source”\n\nAny object, surface, or other source of radiant heat that, if not shielded, would raise the globe temperature of the cool-down area 5°F or more than the temperature of the cool-down area.\n\n“High radiant heat area”\n\nA work area where an the temperature is at least 5°F greater than the immediate temperature in the broader work area.\n\n“Heat protective clothing”\n\nEquipment/ clothing made to protect against heat illness. Examples: water-cooled garments, air-cooled garments, cooling vests, wetted over-garments, heat-reflective clothing."
  },
  {
    "objectID": "resources.html#how-to-identify-heat-stress-and-illness",
    "href": "resources.html#how-to-identify-heat-stress-and-illness",
    "title": "Resources",
    "section": "How to identify heat stress and illness?",
    "text": "How to identify heat stress and illness?\n\n\n\n\n\n\nImportant\n\n\n\nHeat illness is serious and can worsen rapidly. If you feel any of these symptoms you have the right to take a preventative cool down break at any point until you feel healthy enough to return to work."
  },
  {
    "objectID": "resources.html#are-you-experiencing-high-temperatures-at-work",
    "href": "resources.html#are-you-experiencing-high-temperatures-at-work",
    "title": "Resources",
    "section": "Are you experiencing high temperatures at work?",
    "text": "Are you experiencing high temperatures at work?\n\nSee Step-By-Step Guide to Filing a Heat Related Complaint Online with Federal OSHA.\nIf you have been exposed to unfair work conditions related to extreme indoor temperatures you have the opportunity to hold your employer accountable. Below is a link to the step by step guide to file a heat related OSHA complaint provided by the National Coalition for Occupational Safety and Health (National COSH)."
  },
  {
    "objectID": "resources.html#community-based-southern-california-worker-organizations",
    "href": "resources.html#community-based-southern-california-worker-organizations",
    "title": "Resources",
    "section": "Community based Southern California worker organizations:",
    "text": "Community based Southern California worker organizations:\nWarehouse Workers:\n\nWarehouse Workers Resource Center\nInland Empire Amazon Workers United\n\nOccupational Worker Safety and Health:\n\nSouthern California Coalition for Occupational Safety and Health\nUCLA Labor Occupational Safety and Health\n\nCarwash Workers:\n\nCLEAN\n\nAffinity and Location based worker organizations:\n\nLA Black Workers Center\nKoreatown Immigrant Worker Alliance"
  },
  {
    "objectID": "methods.html",
    "href": "methods.html",
    "title": "Data & Methods",
    "section": "",
    "text": "This research project uses a mixed-methods approach combining qualitative interviews and first hand accounts with a quantitative analysis of employment and OSHA data."
  },
  {
    "objectID": "methods.html#qualitative",
    "href": "methods.html#qualitative",
    "title": "Data & Methods",
    "section": "Qualitative",
    "text": "Qualitative\n\nI. Interviews & Testimonies\nImplementation and enforcement of the indoor heat standard remains an ongoing process and understanding workers perceptions’ of the standard throughout this process is an important question. Are workers aware of this heat standard? What do workers think about the process of implementation? Questions such as these are important to answer, hence, seven semi-structured interviews were carried out with workers from five different industries, namely warehousing & logistics, fast food & kitchen, cannabis, maintenance, and service (cafes). Furthermore, interviews with workers impacted by indoor heat allows Community Based Organizations (CBO’s), decision makers, and other interested parties to hear and receive necessary feedback for more effective implementation and/ or enforcement.\nInterviews were carried out via video-call and in person over the span of a month. Many were set up by way of pre-existing relationships between CBO’s and the primary partner organization, Southern California Coalition for Occupational Safety and Health (SoCalCOSH).\n\nValidity and reliability \nInterviews are an important part of gathering qualitative data and, outside of informally chatting with workers, were the only formal qualitative method use in this project. While interviews provide direct data about worker perceptions and opinions one cannot generalize interview findings to all workers in a particular industry. The views of workers are representative of their own. While often times qualitative methodologies are criticized for lacking generalizability, qualitative scholars highlight the misunderstanding that methods, such as qualitative interviews, lack any ability to extend generalizations(Smith 2018). Applying assumptions or findings to a broader audience is still possible, but not in the same way as quantitative results are typically generalized. Provide example!! and write more on validity\nThis set of qualitative interviews was intended to gather perspectives directly from workers over an attempt to vaguely understand the impact of the indoor heat standard through unfounded policy assumptions. As a result, the project carried out a relatively straightforward, reproducible interview recruitment process. As previously mentioned, workers were recruited by way of contacting pre-existing connections with employees working inside various CBO’s throughout Los Angeles and the Inland Empire. Scheduling and interviews with workers typically occurred after being put in contact with them directly through an organizer representing their respective community based organization. In X/7 cases the community or regional organizer connected me directly with the organizer. This points to the crucial link that community and/ or regional organizers represent in connecting working class people to not only their respective community based organization but also to other institutional bodies and resources, such as, UCLA’s Labor and Occupational Safety (LOSH) Program. Include image of the network at play here.\n\n\nData sources\nThe recruitment process, while relatively straightforward, presents its own set of methodological questions. Namely what do the recruited interview subjects represent in the broader pool of potential interview subjects? Can one classify the recruited worker as an ‘average worker’? Are their views representative of the ’average worker’ ? Depending on who is being asked, the answer to these questions vary. For the purpose of this study workers have been classified into three categories: an active advocate/ organizer, newly involved worker, and a non-involved worker.\n\n\nBias\nMost interview participants fall into the active advocate and newly involved worker category. It would be remiss to not discuss the potential bias this may represent in the study and interview conclusions. Specifically, some interview findings represent a particular perspective of workers who have been involved in labor advocacy and/ or organizing for years. From the interview findings these workers are more involved, analyze socio-economic systems critically, and encourage advocacy and activism. For example, one warehouse worker from Pomona, CA has been involved to varying capacities with a warehouse worker labor center for 10 years. The interview responses of this worker confirm that their perspective is noticeably different than that of a recent warehouse worker.\nDespite some of the bias present in the interview design the approach is justified when working with labor for the sake of building trust. Furthermore, in some cases the list of questions were not provided as a means of gauging whether or not this would really impact interview responses. While this is not a fool-proof method of comprehensively gauging bias, it provided sufficient evidence to the research team that the impact was negligible and worth the trade off in building trust while also increasing potential bias.\n\n\nInterview protocol\nUpong scheduling interviews with workers a verbal consent form and list of prospective questions were presented. The verbal consent form outlines expectations and guidelines from the interviewer and interviewee, such as, the option to: remain anonymous, refuse any question, and to end the interview at any point. Both are included in the appendix.\nProviding a list of questions prior to the interview may influence the response of participants which in turn may impact the overall bias of inferences. However, questions were provided in order to strengthen the trust and relationship between researcher and interviewee. Building trust between these two groups was crucial because when researching and interviewing labor, participants will have hesitations, doubts, or concerns that involving in this project may put their employment at risk. Apart from being common knowledge in organizing and occupational safety and health circles, scholars overwhelmingly recognize that fears of workplace retaliation present a major obstacle to any sort of labor advocacy and organizing(Hurd 1998; Murphy, n.d.)."
  },
  {
    "objectID": "methods.html#quantitative",
    "href": "methods.html#quantitative",
    "title": "Data & Methods",
    "section": "Quantitative",
    "text": "Quantitative\n\nII. Data Analysis\nThe purpose of analyzing employment and location data is to uncover and advocate for working class realities. Workers on the ground are well aware of the lack of a living wage, the insufficient blank, and blank.\n\nData sources\nAll of the data used was gathered from publicly available"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "This research project is carried out in collaboration between UCLA’s Labor Occupational Safety and Health (LOSH) program and the Southern California Coalition for Occupational Safety & Health (SoCalCOSH). This project seeks to uncover the realities and impacts of indoor heat on workers in Southern California using a mixed-methods approach. Through worker interviews paired with data analysis, we analyze the current landscape of implementation and enforcement of the indoor heat standard, position worker voices front and center in research, and provide original analyses of labor and federal OSHA data.\n\n\nWith the onset of climate change, the planet continues to grow hotter and hotter. Heat impacts all facets of life, especially one’s working conditions. While some of the impacts of climate change may be irreversible, there are policies in place to curb the impact of heat, particularly in the workplace. California’s Title 8 regulation, more commonly known as the Indoor Heat Standard, protects all indoor workers, regardless of occupation, from indoor heat exceeding 82° and/ or 87°. The term indoor worker at first presents as vague but this is intentional, as the policy hopes to encompass a broad range of workers in a broad range of industries.\nVarious industries like warehousing, janitorial, fast food, laundry workers, steel workers, and food processing workers (to name a few) have been majorly impacted by indoor heat on the job. In other words, these are some of the industries that can benefit the most from the indoor heat standard’s protections.\nSouthern California residents are familiar with the dangers of being out in the heat. We avoid it. We seek shade. We see construction workers and gardeners working in the heat and we feel for them. Alongside many local governments and organizations, the state of California recognizes the impacts of outdoor heat, going as far as codifying labor standards in 2006 that protect outdoor employees, like agriculture and construction workers. Of course, the 2006 Maria Isabel Vasquez Jimenez outdoor heat illness standard was only passed after many lives were lost to outdoor heat. While the impacts of outdoor heat are well documented, what about the impacts of indoor heat?\n\n\n\n\n\n\n\nTaco Bell worker and station, Credit: Unknown.\n\n\nIt is a warm Sunday in Anaheim, CA and people are looking for an affordable and fast meal. Why not Taco Bell? Jeanpaul, a shift lead at an Anaheim Taco Bell, finds himself fulfilling orders with his four person crew that is already short-staffed for the day. Work grows busier, which is typical– this Taco Bell crew sells upwards of $12,000- $18,000 of food daily. At an average of $15,000 in sales a day, the crew find themselves preparing and selling around $2,143 worth of food per hour. Orders are flooding in, and with a central air conditioning that has been broken for a year and six months, the kitchen heats up quickly. Amidst the rush, Jeanpaul’s co-worker calls him over.\n\n“I ask ‘what happened?’ … She’s pale. She stood against the wall and POOM. She fell. But when she fell I grabbed her and I didn’t care about anything anymore … Life comes first before work for me.” \n…\n“Honestly it was suffocating that day, my head even hurt. I felt like I was going to faint, but I got out. I couldn’t take it anymore. I said no, I’m not going to be here, but there are a lot of people who did [stay]. They were 49/50 years old, so it hits them harder. But you do feel suffocated. You do feel bad. You don’t feel comfortable working anymore.”\n\n\n\n\nIn the sweltering kitchen heat, Jeanpaul’s co-worker fainted in front of him. Jeanpaul himself had a headache. That same kitchen reached temperatures of 104° on certain days, a fact only known because a worker carried a small thermometer displaying the temperature. Evidently, there were no practices in place informing employees of workplace temperatures, which would enable them to take necessary precautions, such as breaks and hydrating, to prevent heat related emergencies. Additionally, the employer had not communicated any clear emergency procedures that would prepare the Taco Bell crew to handle serious health incidents, such as fainting from heat stress.\nThe fast food industry is notorious for being a poverty employer, that is, it employs a larger share of people in poverty than any other industry. Daniel Flaming outlines the combined effect of low wages, insufficient hours, and employee turnover in maintaining many fast food workers in an economically precarious situation, or rather, poverty employment. In the most extreme cases, this poverty employment has led to fast food workers making up 5.9 percent of California’s homeless population in 2020.\nDespite being a major employer in the state of California, fast food work does not provide a living wage and further exposes workers to extreme, unsafe temperatures​​. Figure 1 below demonstrates the disparity between living wages and actual wages in the fast food industry. In Los Angeles, Orange, and San Bernardino County, workers are earning an average weekly wage of $532, $524, $484, respectively. This pales in comparison to an average living wage which in all three counties is more than double what fast food workers were earning on average in 2023. According to MIT’s living wage calculator the average living wage for a single person working full time (40 hours/ week) in Los Angeles, Orange, and San Bernardino County is $26.63, $30.48, and $25.17, respectively. Due to a lack of average hourly wage data from the Bureau of Labor Statistics, the comparison between living wages and actual wages is made at the weekly level (40 hours/ week) where average wage data is available.\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\nStill navigating the situation, Jeanpaul calls his manager for help but she refuses to believe in the gravity of the situation. Instead she insists que se hasta haciendo. She is faking it, the manager insists. The manager goes as far as saying Jeanpaul cannot take her to the hospital (as he hoped to) and he can only leave Taco Bell if the bathroom or plumbing is broken. After the incident, neither a supervisor nor a manager decided to show up that day. On Monday, the following day, Jeanpaul receives a call that he is being given a formal warning for five minutes of overtime that he worked but he suspects the meeting’s real purpose is to fire him. Reflecting on this he says:\n\n“But when the heat [incident] happened, it was like we said, ‘Right now. This week we have to go on strike.’ Their plan was to fire me, and I told them [SEIU XXX], ‘Aye, they’re going to fire me on Tuesday. Speed ​​up the strike because they’re going to fire me on Tuesday.’”\n\nCiting wage theft, psychological mistreatment, discrimination toward older workers, and the fainting incident as the final straw, these workers saw strength in numbers, walking out in protest of both unjust working conditions and extreme indoor temperatures. They have since filed a formal Cal/OSHA complaint. Empowered by collective action, they remain steadfast in their commitment to demand dignified workplaces. \n\n\n\n\n\n\n\n\n\nFigure 2\n\n\n\nThis kitchen’s 104° temperature indicates the ambient temperature at that moment, however, the heat stress one feels at any given moment is influenced by both ambient temperature and humidity. With a temperature of a 104* and a humidity level of 14%, the Taco Bell kitchen felt more like 100° instead of 104° due to the low humidity levels. However, apart from being uncomfortable working in 100° weather for a prolonged time can lead to possible sunstroke, heat cramps, or heat exhaustion, among several other health impacts. These thresholds are in the image above. \nIndoor heat is a silent killer. When the body is no longer able to cool itself under extreme temperatures, one can experience a plethora of health issues including dizziness, headaches, nosebleeds, heat exhaustion, and heat stroke. Under extreme heat the body will work harder to cool itself down, stressing the heart and kidneys which can in turn exacerbate underlying chronic illnesses such as cardiovascular, mental, respiratory and diabetes related conditions (WHO 2024). In other words, extreme heat disproportionately impacts the elderly or those with underlying health conditions. These impacts are further exacerbated when one has to work a long, strenuous work shift under extreme temperatures.\nHeat remains widely misunderstood, making it challenging to address its full impacts. Below is an overview of federal understandings of the heat index, new understandings of the heat index, and a straightforward explanation of how to interpret the heat index and heat stress.\n\n\nThe dominant understanding of heat revolves around the National Weather Service’s heat index developed by R.G. Steadman (1979) that combines ambient temperature (wet bulb temperature) and relative humidity to produce a reading of what the temperature really feels for the human body. By extension, this measure captures the heat stress a body may feel at any given temperature. While the heat index has successfully captured what temperatures really feel like, climate change has flipped this index on its head. Specifically, with the increase of extreme temperatures and humidity due to climate change, we are seeing the inability of the index to accurately capture what temperatures feel like on some of the hottest heat waves.\n\n\n\n\n\n\nFigure 3: The current heat index underestimates values the most at high humidity + high temperatures.\n\n\n\nGenerally, Steadman’s model captures the heat index successfully for most weather conditions, however, the researchers point to the fact that for relative humidity levels at 80%, the heat index never defined values for temperatures below 59° or above 88° (Lu & Romps, 2022). Already in 2024, Southern California has seen several summer heat waves with temperatures above 90° and even 100°. While humidity outdoors in Southern California may not be an issue do the rather dry climate, To update the heat index to the ongoing extreme weather episodes experienced today, the researchers provide an updated heat index calculator as well as a corrected NWS chart as seen in the figure below.  \n\n\n\n\n\n\nFigure 4\n\n\n\nIn their 2024 study, Romps and Lu collected original weather data from Texas during the summer months, further highlighting combined effects of rising temperatures and humidity on human physiological stress. Their findings show that climate change has raised the heat index in Texas by an average of 8–11°F during June through August. Consequently, the current heat index is underestimating these values precisely because heat index values were never defined for extreme weather patterns of high humididty and high temperatures, such as those seen in a Texas summer.\n\nThis dangerous mix of high humidity and extreme heat significantly increases health risks, especially for workers, elderly people, and those with pre-existing conditions. While outdoor workers, such as those in construction, are known to be vulnerable to heat-related incidents, indoor workplaces can also become treacherous. Without adequate cooling, indoor workplaces can trap heat, creating conditions that, while less visible, are equally threatening. Specifically, indoor workplaces without proper ventilation, such as air conditioning, lack the presence of wind that normally functions as a cooling agent in outdoor heat. This can lead to dangerous combinations of high temperature and high humidity, precisely the conditions in which heat stress is much higher than what the current heat index reports. \n\n\n\nHigher humidity reduces the body’s ability to cool itself through sweating, leading to increased heat stress. This poses significant health risks, as the body is pushed closer to physiological limits where hyperthermia (dangerous overheating) can occur. As humidity and temperatures rise, so does the risk of heat-related illnesses. Findings suggest that even small increases in temperature can drastically increase the body’s stress under high humidity, leading to conditions like heat stroke.\n\n\n\n\n\n\n\n\n\n\n\nSan Bernardino Amazon Fulfillment Center, Cyber Monday 2016. Credit: Ferazzi/ LA Times\n\n\nSouthern California’s logistics and warehouse industry is a vital hub for goods movement, employing over XXXXX workers across the region. The industry forms the backbone of the Southern California logistics hub (and the U.S. supply chain), but workers face a plethora of occupational and health challenges due to sprawling warehouse with limited ventilation and intense workloads. Many warehouses lack effective cooling systems, leading to indoor temperatures that can reach triple digits on hot days. As a result, workers report facing health risks, often with minimal protections in place to mitigate the effects of prolonged heat exposure.\nVictor, a veteran warehouse worker, is currently employed at a large facility in the Inland Empire that sorts wholesale goods for major retail stores like Sam’s Club and Costco. He describes the immense warehouse where 200-300 people are on the clock at one time, a sight all too common in the Inland Empire region. He’s up at 4 am for his morning shift, but even in the early hours, the impacts of the warehousing & logistics industry in the region are palpable to him.\n\n“There is a lot of traffic, all the containers. So many containers bring a lot of traffic. In the warehouses, everywhere, from very early. When I go in at 4 in the morning the freeway is already full.”\n\nFor Victor, it’s evident that the warehousing industry dramatically impacts the region he calls home. With over 20 years as a warehouse worker, he understands these connections deeply and intuitively. Consequently, he has long been part of the fight to change the industry and fight for improved protections and rights for warehouse workers. As he reflects on the newly passed indoor heat standard, he says:\n\n“We should have gone through it [the heat standard] a long time ago because I practically lived through it myself, working in the warehouses, there was no insulation, there was no fan, there was no water, so that’s why we have to do something.”\n\n\n\n\n\n\n\n\nHomes and a giant warehouse complex in the Rancho Cucamonga and Fontana area. Photo by David McNew/The New York Times\n\n\nEven with protective measures, such as the large fans and water stations at Victor’s workplace, workers constantly face threats to their health. During the Inland Empire’s recent DATE heatwave, Victor suddenly felt blood at his nose while working, an unmistakable sign that indoor temperatures are having serious impacts to workers’ health and safety. Just last year, three people fainted in his workplace due to extreme heat.\nThe indoor heat standard can help prevent this? paragraph on that? or paragraph on the common complaint of fans\nIn Riverside, systemic impacts like extreme heat, climate change, and inequality converge, amplifying the hardships faced by workers. Workers see firsthand how these forces intertwine, impacting his neighborhood with rising temperatures (indoor and outdoor), pollution, traffic congestion, and frequent wildfires.\n\n“They didn’t take it too seriously but practically the heat is increasing more... As more traffic passes by, instead of seeing more green areas we see more warehouses and warehouses, all of this heats up the environment more and especially when it is hot there are more fires. The climate gets worse, the air, everything is contaminated, everything like that.” - Victor Ramirez\n\nWarehouse workers share similarities in their outlooks and experiences, offering an opportunity and space for strong currents of worker solidarity, organization, and unionization.\nDescribe the container? describe the importance of containerization in the logistics industry. inland shift and what impact it has had to the region.\nKaren, a Coachella resident working at a major San Bernardino warehouse, finds herself with a new perspective on warehouse work. From office work to being a warehouse worker she is happy with the transition and is recently becoming more active in advocating for herself and her fellow workers. Karen works in the non-con, or non-conveyable, department, where she handles packages that are too large or heavy for a conveyor belt. Treadmills,\n\n\n\nKaren recognizes the importance of air conditioning in these massive warehouses. Specifically, during the recent DATE Inland Empire heat wave, she notes that the air conditioning maintained the warehouse around 30°F lower than the 115°F temperatures outside, with the indoor temperature hovering around 85°-87°F. Even with the commercial air conditioning, the indoor temperature, at times, still reached the heat standard’s threshold requiring active intervention to lower the temperature.\nOf course, working in a massive air-conditioned warehouse is not the norm in the logistics capital of the US. Despite the different working conditions warehouse workers in this region have shared experiences and opportunities for strong unity and solidarity.\n\n\n\n\n……\n\n\n\nWorker outreach as part of California’s Workplace Outreach Project (CWOP)\n\n\n…."
  },
  {
    "objectID": "index.html#why-indoor-heat",
    "href": "index.html#why-indoor-heat",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "With the onset of climate change, the planet continues to grow hotter and hotter. Heat impacts all facets of life, especially one’s working conditions. While some of the impacts of climate change may be irreversible, there are policies in place to curb the impact of heat, particularly in the workplace. California’s Title 8 regulation, more commonly known as the Indoor Heat Standard, protects all indoor workers, regardless of occupation, from indoor heat exceeding 82° and/ or 87°. The term indoor worker at first presents as vague but this is intentional, as the policy hopes to encompass a broad range of workers in a broad range of industries.\nVarious industries like warehousing, janitorial, fast food, laundry workers, steel workers, and food processing workers (to name a few) have been majorly impacted by indoor heat on the job. In other words, these are some of the industries that can benefit the most from the indoor heat standard’s protections.\nSouthern California residents are familiar with the dangers of being out in the heat. We avoid it. We seek shade. We see construction workers and gardeners working in the heat and we feel for them. Alongside many local governments and organizations, the state of California recognizes the impacts of outdoor heat, going as far as codifying labor standards in 2006 that protect outdoor employees, like agriculture and construction workers. Of course, the 2006 Maria Isabel Vasquez Jimenez outdoor heat illness standard was only passed after many lives were lost to outdoor heat. While the impacts of outdoor heat are well documented, what about the impacts of indoor heat?\n\n\n\n\n\n\n\nTaco Bell worker and station, Credit: Unknown.\n\n\nIt is a warm Sunday in Anaheim, CA and people are looking for an affordable and fast meal. Why not Taco Bell? Jeanpaul, a shift lead at an Anaheim Taco Bell, finds himself fulfilling orders with his four person crew that is already short-staffed for the day. Work grows busier, which is typical– this Taco Bell crew sells upwards of $12,000- $18,000 of food daily. At an average of $15,000 in sales a day, the crew find themselves preparing and selling around $2,143 worth of food per hour. Orders are flooding in, and with a central air conditioning that has been broken for a year and six months, the kitchen heats up quickly. Amidst the rush, Jeanpaul’s co-worker calls him over.\n\n“I ask ‘what happened?’ … She’s pale. She stood against the wall and POOM. She fell. But when she fell I grabbed her and I didn’t care about anything anymore … Life comes first before work for me.” \n…\n“Honestly it was suffocating that day, my head even hurt. I felt like I was going to faint, but I got out. I couldn’t take it anymore. I said no, I’m not going to be here, but there are a lot of people who did [stay]. They were 49/50 years old, so it hits them harder. But you do feel suffocated. You do feel bad. You don’t feel comfortable working anymore.”\n\n\n\n\nIn the sweltering kitchen heat, Jeanpaul’s co-worker fainted in front of him. Jeanpaul himself had a headache. That same kitchen reached temperatures of 104° on certain days, a fact only known because a worker carried a small thermometer displaying the temperature. Evidently, there were no practices in place informing employees of workplace temperatures, which would enable them to take necessary precautions, such as breaks and hydrating, to prevent heat related emergencies. Additionally, the employer had not communicated any clear emergency procedures that would prepare the Taco Bell crew to handle serious health incidents, such as fainting from heat stress.\nThe fast food industry is notorious for being a poverty employer, that is, it employs a larger share of people in poverty than any other industry. Daniel Flaming outlines the combined effect of low wages, insufficient hours, and employee turnover in maintaining many fast food workers in an economically precarious situation, or rather, poverty employment. In the most extreme cases, this poverty employment has led to fast food workers making up 5.9 percent of California’s homeless population in 2020.\nDespite being a major employer in the state of California, fast food work does not provide a living wage and further exposes workers to extreme, unsafe temperatures​​. Figure 1 below demonstrates the disparity between living wages and actual wages in the fast food industry. In Los Angeles, Orange, and San Bernardino County, workers are earning an average weekly wage of $532, $524, $484, respectively. This pales in comparison to an average living wage which in all three counties is more than double what fast food workers were earning on average in 2023. According to MIT’s living wage calculator the average living wage for a single person working full time (40 hours/ week) in Los Angeles, Orange, and San Bernardino County is $26.63, $30.48, and $25.17, respectively. Due to a lack of average hourly wage data from the Bureau of Labor Statistics, the comparison between living wages and actual wages is made at the weekly level (40 hours/ week) where average wage data is available.\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\nStill navigating the situation, Jeanpaul calls his manager for help but she refuses to believe in the gravity of the situation. Instead she insists que se hasta haciendo. She is faking it, the manager insists. The manager goes as far as saying Jeanpaul cannot take her to the hospital (as he hoped to) and he can only leave Taco Bell if the bathroom or plumbing is broken. After the incident, neither a supervisor nor a manager decided to show up that day. On Monday, the following day, Jeanpaul receives a call that he is being given a formal warning for five minutes of overtime that he worked but he suspects the meeting’s real purpose is to fire him. Reflecting on this he says:\n\n“But when the heat [incident] happened, it was like we said, ‘Right now. This week we have to go on strike.’ Their plan was to fire me, and I told them [SEIU XXX], ‘Aye, they’re going to fire me on Tuesday. Speed ​​up the strike because they’re going to fire me on Tuesday.’”\n\nCiting wage theft, psychological mistreatment, discrimination toward older workers, and the fainting incident as the final straw, these workers saw strength in numbers, walking out in protest of both unjust working conditions and extreme indoor temperatures. They have since filed a formal Cal/OSHA complaint. Empowered by collective action, they remain steadfast in their commitment to demand dignified workplaces. \n\n\n\n\n\n\n\n\n\nFigure 2\n\n\n\nThis kitchen’s 104° temperature indicates the ambient temperature at that moment, however, the heat stress one feels at any given moment is influenced by both ambient temperature and humidity. With a temperature of a 104* and a humidity level of 14%, the Taco Bell kitchen felt more like 100° instead of 104° due to the low humidity levels. However, apart from being uncomfortable working in 100° weather for a prolonged time can lead to possible sunstroke, heat cramps, or heat exhaustion, among several other health impacts. These thresholds are in the image above. \nIndoor heat is a silent killer. When the body is no longer able to cool itself under extreme temperatures, one can experience a plethora of health issues including dizziness, headaches, nosebleeds, heat exhaustion, and heat stroke. Under extreme heat the body will work harder to cool itself down, stressing the heart and kidneys which can in turn exacerbate underlying chronic illnesses such as cardiovascular, mental, respiratory and diabetes related conditions (WHO 2024). In other words, extreme heat disproportionately impacts the elderly or those with underlying health conditions. These impacts are further exacerbated when one has to work a long, strenuous work shift under extreme temperatures.\nHeat remains widely misunderstood, making it challenging to address its full impacts. Below is an overview of federal understandings of the heat index, new understandings of the heat index, and a straightforward explanation of how to interpret the heat index and heat stress.\n\n\nThe dominant understanding of heat revolves around the National Weather Service’s heat index developed by R.G. Steadman (1979) that combines ambient temperature (wet bulb temperature) and relative humidity to produce a reading of what the temperature really feels for the human body. By extension, this measure captures the heat stress a body may feel at any given temperature. While the heat index has successfully captured what temperatures really feel like, climate change has flipped this index on its head. Specifically, with the increase of extreme temperatures and humidity due to climate change, we are seeing the inability of the index to accurately capture what temperatures feel like on some of the hottest heat waves.\n\n\n\n\n\n\nFigure 3: The current heat index underestimates values the most at high humidity + high temperatures.\n\n\n\nGenerally, Steadman’s model captures the heat index successfully for most weather conditions, however, the researchers point to the fact that for relative humidity levels at 80%, the heat index never defined values for temperatures below 59° or above 88° (Lu & Romps, 2022). Already in 2024, Southern California has seen several summer heat waves with temperatures above 90° and even 100°. While humidity outdoors in Southern California may not be an issue do the rather dry climate, To update the heat index to the ongoing extreme weather episodes experienced today, the researchers provide an updated heat index calculator as well as a corrected NWS chart as seen in the figure below.  \n\n\n\n\n\n\nFigure 4\n\n\n\nIn their 2024 study, Romps and Lu collected original weather data from Texas during the summer months, further highlighting combined effects of rising temperatures and humidity on human physiological stress. Their findings show that climate change has raised the heat index in Texas by an average of 8–11°F during June through August. Consequently, the current heat index is underestimating these values precisely because heat index values were never defined for extreme weather patterns of high humididty and high temperatures, such as those seen in a Texas summer.\n\nThis dangerous mix of high humidity and extreme heat significantly increases health risks, especially for workers, elderly people, and those with pre-existing conditions. While outdoor workers, such as those in construction, are known to be vulnerable to heat-related incidents, indoor workplaces can also become treacherous. Without adequate cooling, indoor workplaces can trap heat, creating conditions that, while less visible, are equally threatening. Specifically, indoor workplaces without proper ventilation, such as air conditioning, lack the presence of wind that normally functions as a cooling agent in outdoor heat. This can lead to dangerous combinations of high temperature and high humidity, precisely the conditions in which heat stress is much higher than what the current heat index reports. \n\n\n\nHigher humidity reduces the body’s ability to cool itself through sweating, leading to increased heat stress. This poses significant health risks, as the body is pushed closer to physiological limits where hyperthermia (dangerous overheating) can occur. As humidity and temperatures rise, so does the risk of heat-related illnesses. Findings suggest that even small increases in temperature can drastically increase the body’s stress under high humidity, leading to conditions like heat stroke.\n\n\n\n\n\n\n\n\n\n\n\nSan Bernardino Amazon Fulfillment Center, Cyber Monday 2016. Credit: Ferazzi/ LA Times\n\n\nSouthern California’s logistics and warehouse industry is a vital hub for goods movement, employing over XXXXX workers across the region. The industry forms the backbone of the Southern California logistics hub (and the U.S. supply chain), but workers face a plethora of occupational and health challenges due to sprawling warehouse with limited ventilation and intense workloads. Many warehouses lack effective cooling systems, leading to indoor temperatures that can reach triple digits on hot days. As a result, workers report facing health risks, often with minimal protections in place to mitigate the effects of prolonged heat exposure.\nVictor, a veteran warehouse worker, is currently employed at a large facility in the Inland Empire that sorts wholesale goods for major retail stores like Sam’s Club and Costco. He describes the immense warehouse where 200-300 people are on the clock at one time, a sight all too common in the Inland Empire region. He’s up at 4 am for his morning shift, but even in the early hours, the impacts of the warehousing & logistics industry in the region are palpable to him.\n\n“There is a lot of traffic, all the containers. So many containers bring a lot of traffic. In the warehouses, everywhere, from very early. When I go in at 4 in the morning the freeway is already full.”\n\nFor Victor, it’s evident that the warehousing industry dramatically impacts the region he calls home. With over 20 years as a warehouse worker, he understands these connections deeply and intuitively. Consequently, he has long been part of the fight to change the industry and fight for improved protections and rights for warehouse workers. As he reflects on the newly passed indoor heat standard, he says:\n\n“We should have gone through it [the heat standard] a long time ago because I practically lived through it myself, working in the warehouses, there was no insulation, there was no fan, there was no water, so that’s why we have to do something.”\n\n\n\n\n\n\n\n\nHomes and a giant warehouse complex in the Rancho Cucamonga and Fontana area. Photo by David McNew/The New York Times\n\n\nEven with protective measures, such as the large fans and water stations at Victor’s workplace, workers constantly face threats to their health. During the Inland Empire’s recent DATE heatwave, Victor suddenly felt blood at his nose while working, an unmistakable sign that indoor temperatures are having serious impacts to workers’ health and safety. Just last year, three people fainted in his workplace due to extreme heat.\nThe indoor heat standard can help prevent this? paragraph on that? or paragraph on the common complaint of fans\nIn Riverside, systemic impacts like extreme heat, climate change, and inequality converge, amplifying the hardships faced by workers. Workers see firsthand how these forces intertwine, impacting his neighborhood with rising temperatures (indoor and outdoor), pollution, traffic congestion, and frequent wildfires.\n\n“They didn’t take it too seriously but practically the heat is increasing more... As more traffic passes by, instead of seeing more green areas we see more warehouses and warehouses, all of this heats up the environment more and especially when it is hot there are more fires. The climate gets worse, the air, everything is contaminated, everything like that.” - Victor Ramirez\n\nWarehouse workers share similarities in their outlooks and experiences, offering an opportunity and space for strong currents of worker solidarity, organization, and unionization.\nDescribe the container? describe the importance of containerization in the logistics industry. inland shift and what impact it has had to the region.\nKaren, a Coachella resident working at a major San Bernardino warehouse, finds herself with a new perspective on warehouse work. From office work to being a warehouse worker she is happy with the transition and is recently becoming more active in advocating for herself and her fellow workers. Karen works in the non-con, or non-conveyable, department, where she handles packages that are too large or heavy for a conveyor belt. Treadmills,\n\n\n\nKaren recognizes the importance of air conditioning in these massive warehouses. Specifically, during the recent DATE Inland Empire heat wave, she notes that the air conditioning maintained the warehouse around 30°F lower than the 115°F temperatures outside, with the indoor temperature hovering around 85°-87°F. Even with the commercial air conditioning, the indoor temperature, at times, still reached the heat standard’s threshold requiring active intervention to lower the temperature.\nOf course, working in a massive air-conditioned warehouse is not the norm in the logistics capital of the US. Despite the different working conditions warehouse workers in this region have shared experiences and opportunities for strong unity and solidarity."
  },
  {
    "objectID": "index.html#worker-struggles-persistence-and-advocacy",
    "href": "index.html#worker-struggles-persistence-and-advocacy",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "……\n\n\n\nWorker outreach as part of California’s Workplace Outreach Project (CWOP)\n\n\n…."
  },
  {
    "objectID": "docs/webscrape.html",
    "href": "docs/webscrape.html",
    "title": "CALOSHA establishment search web scrape",
    "section": "",
    "text": "for webscraping:\nrvest if it works well for static site scrapping and also web browser control (with read_html_live()): https://rvest.tidyverse.org/ dev. by wickham\n\nPagination: See his github rvest here, uses httr to scrape multiple pages\n\nHayalbaz if you need more interaction : https://github.com/rundel/hayalbaz\nA nice playlist on how to use rvest by data slice: https://youtube.com/playlist?list=PLr5uaPu5L7xLEclrT0-2TWAz5FTkfdUiW&si=FWa02M1Qq7uLBMDB\nto read pdf content:\nreadtext (wrap pdftools and more): https://github.com/quanteda/readtext\npdftools: https://cran.r-project.org/web/packages/pdftools/index.html\nCriminologist jail/ prison extraction data using pdftools package:\nSince other packages to extract tables from pdf have maintenance or dependency issues (with java) here is a tutorial using pdftools (a bit long): https://crimebythenumbers.com/scrape-table.html\nFor more complex sites, you might need to deal with JavaScript-rendered content. In such cases, RSelenium is a great tool. It allows you to automate a web browser, interact with dynamic content, and scrape data that isn’t readily available in the static HTML.\nTo scrape:\n\nwebscrape CALOSHA website (not really up to date) on complaints received and citations issued\n\n\n\n\norder: close pop up (if needed)&gt; establishment search (California, monrovia office, case status: all, violation status: With Violations), date, press search &gt; Click Activity &gt;Inspection Nr: 1760736.015, Report ID: 0950644, Date Opened: 06/13/2024, Site Address, Union Status, NAICS, Mailing Address, Inspection Type, Scope, Advanced Notice, Ownership, Safety/Health, Close Conference, Emphasis, Case Closed,\nLocate violation summary: Current Violations - Total, Current Penalty - Total\nLocate Violation Items: Get Standard Cited only if it is 3395? or get all standards cited, regardless retrieve Standard cited, Issuance Date, Abatement Due Date, current penalty\n\n\nInspection type: there are two types– programmed and unprogrammed,\n\nA Fatality/Catastrophe Report (FAT/CAT),\nComplaint\nAccident\n\n\nnotes from lex (osha rep):\nIn the case you referenced below, there are indicators of what type of inspection: Accident and Complaint Inspections are” Unprogrammed Inspections:” and in most cases are also “Partial” Inspections (focused on the specific accident or the complaint item, although some complaints could be “Comprehensive”).\nInspection Type: Complaint\nScope: Partial\nAdvanced Notice: N\nOwnership: Private\nSafety/Health: Health\nClose Conference: 12/15/2023\nEmphasis:\nCase Closed: 01/30/2024\nProgrammed inspections, like those conducted by my office will always be “Comprehensive”. IN all cases, there is never an announcement of a pending inspection. Notice is never given to any employer, by law in Cal OSHA\nData analysis:\n\nsee which industries are most cited\nWhat percent of complaints actually result in violations? This is 5 year range 1059/ 1706 – 62%\n\n\nknitr::opts_chunk$set(eval = FALSE)\n#install.packages(\"rvest\") \n#install.packages(\"pdftools\")\n#install.packages(\"xml2\")\n#install.packages(\"RSelenium\")\n#install.packages(\"binman\")\n# install.packages(\"purrr\")\nlibrary(purrr)\nlibrary(pdftools)\n\nUsing poppler version 23.04.0\n\nlibrary(rvest)\nlibrary(httr)\nlibrary(xml2)\nlibrary(tibble)\nlibrary(RSelenium)\nlibrary(wdman)\nlibrary(binman)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n#FAILED - server request 403 \n#url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n# set user agent \n\n#response &lt;- GET(url, \n                user_agent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"))\n\n# Check if the request was successful\n#if (status_code(response) == 200) {\n  # Parse the content of the webpage\n  #webpage &lt;- read_html(content(response, \"text\"))\n  \n  # Extract the first table from the page\n # table &lt;- webpage %&gt;% \n   # html_nodes(\"table\") %&gt;%     # Find all tables on the page\n  #  .[[1]] %&gt;%                  # Select the first table (adjust index if needed)\n   # html_table(fill = TRUE)      # Convert HTML table to data frame\n  \n  # Print the table\n  #print(table)\n  \n#} else {\n  stop(\"Failed to retrieve the webpage. Status code: \", status_code(response))\n#}\n\n\n#FAILED - not recgonzing referer, user agent issues \n# Define the URL\n# Load required libraries\n\n# Define the URL\nurl &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n\n# Set HTTP headers to mimic a real browser\n# adding more user agent headers, simulate real users \nresponse &lt;- GET(url, \n                user_agent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"),\n                add_headers(.  \n                  `Referer` = \"https://www.google.com\",\n                  `Accept-Language` = \"en-US,en;q=0.9\",\n                  `Cache-Control` = \"max-age=0\"\n                ))\n\n# Check if the request was successful\nif (status_code(response) == 200) {\n  # Parse the content of the webpage\n  webpage &lt;- read_html(content(response, \"text\"))\n  \n  # Extract the first table from the page\n  table &lt;- webpage %&gt;% \n    html_nodes(\"table\") %&gt;%     # Find all tables on the page\n    .[[1]] %&gt;%                  # Select the first table (adjust index if needed)\n    html_table(fill = TRUE)      # Convert HTML table to data frame\n  \n  # Print the table\n  print(table)\n  \n} else {\n  stop(\"Failed to retrieve the webpage. Status code: \", status_code(response))\n}\n\nAttempt II. rvest xml2 and tibbles\n\n#store url \nurl2 &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n#scrape htmlinfo from stored url \nbase_webpage &lt;- read_html(url2)\n#loop \nnew_url2 &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024/%s\"\n# Creating dataframe of the first 100 movies:\n# html_table() converts html tables into dataframes.\ntable_base &lt;- rvest::html_table(base_webpage) [[1]] %&gt;% \n  tibble::as_tibble(.name_repair = \"unique\")\ntable_new &lt;- data.frame()\ndf &lt;- data.frame()\ni &lt;- 101\n\n## Creating data out of the next set of tables \nwhile (i&lt;5502) {\n  new_webpage&lt;- read_html(sprintf(new_url2,i))\n  table_new &lt;- rvest::html_table(new_webpage)[[1]] %&gt;% \n    tibble::as_tibble(.name_repair = \"unique\") # repair the repeated columns\n  df&lt;- rbind(df,table_new)\n  i=i+100\n}\n## Merge table_base and df \ncitations &lt;- merge(table_base, df, all = T)\nhead(citations)\n\n\n\n\nsites generate dynamic content w/ JavaScript so the raw html of site doesnt help much. Rblogger tutorial (2014) outdated, using appsilon tutorial\n\nlatest chromedriver version installed: 129.0.6668.89, somehow my R cannot access it it conitnues to access an older version of it 106. tried everything, I manually installed driver 129 for browser and driver compatibility.\nI dwonloaded driver 129 here\n\nChrome attempt didnt work. chrome driver incompatibility, saved by firefox\n\n#NOT WORKING\n#rD &lt;- RSelenium::rsDriver() #only supports v.106, have v.129\n# check supported chrome versions. \nbinman::list_versions(appname = \"chromedriver\")\nrD &lt;- RSelenium::rsDriver(browser = \"chrome\", \n                          port = 53924L, chromever = \"129.0.6668.89\") \n#troubleshooting below \n# Define the path to your ChromeDriver\nchrome_driver_path &lt;- \"/Users/diegoflores/Downloads/chromedriver-mac-arm64-2/chromedriver\"\n\n# Start RSelenium with the path to the driver\nrD &lt;- rsDriver(browser = \"chrome\", chromever = \"129.0.6668.89\", extraCapabilities = list(chromeOptions = list(binary = chrome_driver_path)))\nbinman::list_versions(appname = \"chromedriver\")\n\nrD &lt;- RSelenium::rsDriver(browser = \"chrome\",\n                          chromever = \"106.0.5249.21\")\n\nWorking with elements\n\nfindElement(using, value): Search for an element on the page, starting from the document root. The located element will be returned as an object of webElement class. To use this need some basic knowledge of HTML/ CSS (or xpath, etc). Chrome extension, called SelectorGadget, might help.\nhighlightElement(): Utility function to highlight current Element. This helps to check that you selected the wanted element.\nsendKeysToElement(): Send a sequence of keystrokes to an element. The keystrokes are sent as a list. Plain text is entered as an unnamed element of the list. Keyboard entries are defined in ’selKeys‘ and should be listed with the name ’key‘.\nclearElement(): Clear a TEXTAREA or text INPUT element’s value.\nclickElement(): Click the element. You can click links, check boxes, dropdown lists, etc.\nLATEST UPDATE:\n\nsuccesful but the table output isnt that nice I need to first get the top header (whihc has the variables names) am I analyzing by column or row or both, or how do I think about the scrape?\nI think I successfully extracted all of the first table? now I need to loop it!! figure out pagination\n\n\n\nrD &lt;- RSelenium::rsDriver(browser = \"firefox\", port = 4569L) # start session\nremDr &lt;- rD[[\"client\"]] # Assign the client to an object\n\n\nremDr$open()\nbase_url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024\" \n\nremDr$navigate(base_url)\n# Sys.sleep(4) # seconds\n\n#webElem &lt;- remDr$findElement(using = \"css selector\", value = \"div.table-responsive:nth-child(8) &gt; table:nth-child(1)\") \n# webElem$highlightElement()\nremDr$maxWindowSize()\n#keep the browser active, open(silent = FALSE)\n#remDr$open() #use this if server is already active\n#remDr$close() #close current session \n\n\nsource &lt;- remDr$getPageSource()[[1]]# read page source from where you navigated \n# get all rows of table in an xml list \ntable_body  &lt;- read_html(source) %&gt;% #table_body is xml list \n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) &gt; tbody:nth-child(2)\")\n\nprint(table_body)\n #Extract all data from rows in the table\ntable_data &lt;- table_body %&gt;% # then table body is passed to html_nodes to extract the actual data\n  html_nodes(\"tr\") %&gt;% # first get all rows (tr, its getting from source code) separately \n  html_nodes(\"td\") %&gt;% # then get all cells (td)\n  html_text2()         # html_text() retrives text from html element\ndf &lt;- as.data.frame(table_data)\n\n# Get column names, turn into list, when transforming into df, the ncol = the list column_length\ncolumn_names &lt;- read_html(source) %&gt;%  # extract list of column names, convert to text after using html_text2\n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) &gt; thead:nth-child(1)\") %&gt;% \n  html_nodes(\"th\") %&gt;%  # extracting table headers (th)\n  html_text2()\nprint(column_names) # vector of 12 names, just a check\n\ncolumn_length &lt;- length(column_names) # 12, length gets/sets the length of a vector (which is a list)\n\n# First turn lists into matrix w correct # of cols then make a tibble \ndf &lt;- matrix(table_data, ncol = column_length, byrow = TRUE) %&gt;% \n  as_tibble()\n\ncolnames(df) &lt;- column_names \n#str(df) # all chrs \n# df &lt;- df %&gt;% select(-1, -2)  # remove first two columns, not sure where/ when to run this prolly after \n                             # everything is scraped \n\n#### Pagination repeat function ####\nrepeat {\nnext_button &lt;- remDr$findElement(using = \"xpath\", value = '//a[@title = \"Next Page\"]') # locate netx button\n\nnext_button$clickElement()  # Click next button \nSys.sleep(2)                # Sleep 3 seconds \n\nif (length(remDr$findElements(using = \"xpath\", value = '//a[@title = \"Next Page\"]')) == 0) { # a check! \n  break\n  }\n}\n\n# Appending newly scraped df to all data \nall_data &lt;- list() \n\nall_data &lt;- rbindlist(list(all_data, df))\n\n\n# NOT WORKING RN \n# Navigating to sub pages on the Activtiy # the a elements \na_elements &lt;- read_html(remDr$getPageSource()[[1]]) %&gt;%\n  html_nodes(\"tr\") %&gt;%\n  html_nodes(\"td\") %&gt;% # get a elemtns from the source (html) of the base_url\n  html_elements(css = \"div.package &gt; a\")\na_elements\n\nwebsite_html &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024\" %&gt;% \n  read_html()\ntd_cell_elements &lt;- source %&gt;% \n  html_nodes(\"tr\") %&gt;% \n  html_nodes(\"td\") \n#bcus a elements (links) are inside the td (cells) i must extract all a tags w/ in the td cells \na_elements &lt;- td_cell_elements %&gt;%  \n  html_elements(\"a\") # selecting the a elements from the html source - here its from the td_cel_elements html source\na_elements_links &lt;- a_elements %&gt;% \n  html_attr(\"href\") #gets attribute from html source code \na_element_links\n\n\n# SCRAPE SUB PAGE working but abandoning \nactivityElem &lt;- remDr$findElement(using = \"css selector\", # finds the activity link using \n                                       value =\"tbody tr:nth-child(1) td:nth-child(3)\") # relative css selector \nactivityElem$clickElement()  #clicks the activity link \nSys.sleep(2)\nsource &lt;- remDr$getPageSource()[[1]] # source() retrieves current HTML of webpage as a list, and [[1]] extracts first  # (and only) item in that list, which is full HTML code as a string\n# Extract paragraphs based on their HTML structure, using single-line selector(no spaces)\nptext &lt;- read_html(source) %&gt;%  \n  html_nodes(\"div.row-fluid:nth-child(9) &gt; div:nth-child(1) &gt; p:nth-child(1), #site address\n              div.row-fluid:nth-child(9) &gt; div:nth-child(2) &gt; p:nth-child(1), # union \n              div.row-fluid:nth-child(9) &gt; div:nth-child(3) &gt; p:nth-child(2), # NAICS \n              div.row-fluid:nth-child(11) &gt; div:nth-child(2) &gt; p:nth-child(1),# safety \n              div.row-fluid:nth-child(11) &gt; div:nth-child(2) &gt; p:nth-child(3)\") %&gt;% \n  html_text2()\n# print(ptext) # Print the extracted text, currently a vector it works! 10/14  \n# Violation Summary Table: getting total current violations and current penalty  \ntable_body2 &lt;- read_html(source) %&gt;% \n  html_nodes(\".tablei &gt; tbody:nth-child(2) &gt; tr\") #looking at tablei, tbody, nth child 2, all the rows (tr)\n# 10/14, it works!!! and its already a function :) must be appended into the larger script \ntable_data2 &lt;- table_body2 %&gt;% \n  map_df(function(.x) { # already looking at all rows (as a string) so .x represents each element of the vector, \n    data.frame(         # in this case each .x is a row (tr) element \n      current_vil = html_node(.x, \"tr:nth-child(3) &gt; td:nth-child(7)\") %&gt;% html_text2(), # tbl row 3, cell 7\n      current_pen = html_node(.x, \"tr:nth-child(5) &gt; td:nth-child(7)\") %&gt;% html_text2()  # tbl row 5, cell 7\n    )# must tell function to look into .x bcus this searches w/ in specified rows of  table_body2 \n  }) # instead of excluding it and then telling the function to search the entire document? \n     # map_df is superseded meaning it will. not be replaced but there are other syntax recommendations \n\n\n# 1: SETUP \nremDr$open()\nbase_url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024\" \nremDr$navigate(base_url)\nSys.sleep(3) \nremDr$maxWindowSize()\nsource &lt;- remDr$getPageSource()[[1]]\n\n# 2: PLUG IN SCRAPE OF INITIAL TABLE \n\n# 3: get all links for activity # using for loop, navigate and scrape w/ in them\n# FAILED Attempt 2 - neither work :( i am sad. 10/16 update, ending web scraping. \nparsed_html &lt;- read_html(source)\nlinks &lt;- parsed_html %&gt;% \n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) tbody tr\") %&gt;% \n  html_nodes(\"td a\") %&gt;% # each row has links in &lt;a&gt; tags inside &lt;td&gt;\n  html_attr(\"href\") # Extract href attributes\nprint(links)\n# https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024 \n# https://www.osha.gov/ords/imis/establishment.inspection_detail?id=1763527.015\n# FAILED Attempt 1 below\nrows &lt;- remDr$findElements(using = \"css selector\", value =\"div.table-responsive:nth-child(8) table tbody tr\") # rows - find all row elements first, its only getting row 1!!! \nlinks &lt;- sapply(rows, function(row) {   # Getting links: iterate over each row to get links \n  a_tag &lt;- row$findElement(using = \"css\", value = \"td a\")\n    a_tag$getElementAttribute(\"href\")   # get link itself from &lt;a&gt; (anchor element)\n})\nprint(links)\n#\nfor (link in links){\n  remDr$navigate(links) # navigate to the link in vector links\n  #SCRAPE FUNCTION HERE\n}\n\n\n## DEBUGGING## # alternative approach below, fixed code above was missing html_nodes(\"th\") in order to extract cell\n##               values of the css selector \n# Up to this point 10/7 the data wasnt scraped properly, it is in a long 1 column dataframe \n#num_cols &lt;- 12\n#num_rows &lt;- length(table_data)/num_cols\n# matrix_table_data &lt;- matrix(table_data, ncol = num_cols, byrow = TRUE) %&gt;% \n # as_tibble()\n# colnames(matrix_table_data) &lt;- column_names\n# there is an issue w the way column names are being extracted, try different css selector, if it fails, try new written\n# vector \n\n10/ 16\n\nending for now. very close to just scraping all pages but not the subpages unfortunately!\n\n10/15\n\ngreat progress but on the note of why the function is iterating over the first row 20 times instead of each row once\n\nThis usually happens if the findElement (singular) method is used instead of findElements (plural), or if you’re not properly referencing each individual row during iteration. but I have used plural!! to no avail\n\n\n10/14\nCSS selector\n\n\n\n10/10/224\n\ndo we need the script to create a predefined list for the total activity number? yes i believe\nTo do: Following along with web scrape premier league\n\n\ncreate a list of all activity numbers (href links) from the readable HTML source (its a string from a list)\nI.e. see code chunk. So i must find all “link” items in the row elements that have attribute href. html_attr then extracts value of the “data-option-name” attribute from the li elements, which are the season names\n“As you can see, we have an attribute named ‘data-dropdown-list’ whose value is ‘FOOTBALL_COMPSEASON’ and inside we have ‘li’ tags where the attribute ‘data-option-name’ changes for each season.”\n\n\n#FOR EXMAPLE:\nlist_seasons &lt;- read_html(source) %&gt;%\n  html_nodes(\"ul[data-dropdown-list=         # find all list (li) items in the ul elements that have attribute [data-dropdown-\n             FOOTBALL_COMPSEASON] &gt; li\") %&gt;% # list=FOOTBALL...] targetting the specific dropdown list for seasons \n  html_attr(\"data-option-name\")\n\n10/4/24\n\nafter I find the correct html elements/ and their css selectors I should replicate the for loop code below to get all html source from all pages, then can parse it out correctly into a dataframe (rvest)\ndiv.table-responsive:nth-child(8) refers to 8th child element div w/ class table responsive\n\n10/7/24 - monday\n\nfinally got the base scrape down (df), now I gotta deal with pagination and inspection details\nPagination: locate ‘next’ web element to run at the end of the initial scrape, sys.sleep(_), extract only the table body, dont need table headers? See wickham github\nIndex pages: Inspection detail: can navigate and click it, then scrape site address, union status, naics, row fluid class under it, case status, violation summary, and violation items\n\nthe issue here is creating the new variables, will be a new set of 10+ variables – will prolly happen after using same methods\nViolation summary: only retrieve Current violations/ penalty from the total row\nviolation items: not sure at all how to get standard cited since there is more than 1 unique value there can be x amount of unique standards cited but surely not unlimited, dont need to get all since it is already common knowledge what standards are cited most frequently (provided by OSHA) could probably just check if heat standard is mentioned and if so to make it Y/N\n\nwrapper functions:\nultimate goal:\n\n&lt;table&gt; \n&lt;tr&gt;\n&lt;td&gt;Row 1, Cell 1&lt;/td&gt; #td defines a cell in the row\n&lt;td&gt;Row 1, Cell 2&lt;/td&gt;\n&lt;/tr&gt; \n&lt;tr&gt;\n &lt;td&gt;Row 2, Cell 1&lt;/td&gt;\n&lt;td&gt;Row 2, Cell 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tr&gt;\n\n&lt;a href=“establishment.inspection detail? id = ####### title =”#######” &gt;\n1763527.015\n\n &lt;/table&gt;\nScraping programmatically from stack overflow: start by writing a function that takes a page number, finds the link for that page, clicks on the link, and returns the HTML source for that page:\nuseful functions\n\nfindElement(using =, value=): Search for an element on the page, starting from the document root. The located element will be returned as an object of webElement class. To use this function you need some basic knowledge of HTML and CSS (or xpath, etc). Using a Chrome extension, called SelectorGadget, might help.\nhighlightElement(): Utility function to highlight current Element. This helps to check that you selected the wanted element.\nsendKeysToElement(): Send a sequence of keystrokes to an element. The keystrokes are sent as a list. Plain text is entered as an unnamed element of the list. Keyboard entries are defined in ’selKeys‘ and should be listed with the name ’key‘.\ngetPageSource()[[1]]: Get the current page source. This method combined with `rvest` is what makes possible to scrape dynamic web pages. The xml document returned by the method can then be read using rvest::read_html(). This method returns a `list` object, that’s the reason behind [[1]].\n\nget_html &lt;- function(i) {\n  webElem &lt;- remDr$findElement(using = \"link text\", as.character(i))\n  webElem$clickElement()\n  Sys.sleep(s)\n  remDr$getPageSource()[[1]]\n}\ns &lt;- 2 # seconds to wait between each page\ntotal_pages &lt;- 17\nhtml_pages &lt;- vector(\"list\", total_pages)\nStart the browser, navigate to page 1, and save the source:\nlibrary(RSelenium)\nrD &lt;- rsDriver()\nremDr &lt;- rD[[\"client\"]]\nbase_url &lt;- \"http://dgsp.cns.gob.mx/Transparencia/wConsultasGeneral.aspx\"\nremDr$navigate(base_url)\nsrc &lt;- remDr$getPageSource()[[1]]\nhtml_pages[1] &lt;- src\nFor pages 2 to 17, we use a for-loop and call the function we wrote above, taking care to account specially for page 11:\nfor (i in 2:total_pages) {\n  if (i == 11) {\n    webElem &lt;- remDr$findElement(using = \"link text\", \"...\")\n    webElem$clickElement()\n    Sys.sleep(s)\n    html_pages[i] &lt;- remDr$getPageSource()[[1]]\n  } else {\n    html_pages[i] &lt;- get_html(i)  \n  }\n}\nremDr$close()\nThe result is html_pages, a list of length 17, with each element the HTML source for each page."
  },
  {
    "objectID": "docs/webscrape.html#notes-for-webscraping",
    "href": "docs/webscrape.html#notes-for-webscraping",
    "title": "CALOSHA establishment search web scrape",
    "section": "",
    "text": "for webscraping:\nrvest if it works well for static site scrapping and also web browser control (with read_html_live()): https://rvest.tidyverse.org/ dev. by wickham\n\nPagination: See his github rvest here, uses httr to scrape multiple pages\n\nHayalbaz if you need more interaction : https://github.com/rundel/hayalbaz\nA nice playlist on how to use rvest by data slice: https://youtube.com/playlist?list=PLr5uaPu5L7xLEclrT0-2TWAz5FTkfdUiW&si=FWa02M1Qq7uLBMDB\nto read pdf content:\nreadtext (wrap pdftools and more): https://github.com/quanteda/readtext\npdftools: https://cran.r-project.org/web/packages/pdftools/index.html\nCriminologist jail/ prison extraction data using pdftools package:\nSince other packages to extract tables from pdf have maintenance or dependency issues (with java) here is a tutorial using pdftools (a bit long): https://crimebythenumbers.com/scrape-table.html\nFor more complex sites, you might need to deal with JavaScript-rendered content. In such cases, RSelenium is a great tool. It allows you to automate a web browser, interact with dynamic content, and scrape data that isn’t readily available in the static HTML.\nTo scrape:\n\nwebscrape CALOSHA website (not really up to date) on complaints received and citations issued\n\n\n\n\norder: close pop up (if needed)&gt; establishment search (California, monrovia office, case status: all, violation status: With Violations), date, press search &gt; Click Activity &gt;Inspection Nr: 1760736.015, Report ID: 0950644, Date Opened: 06/13/2024, Site Address, Union Status, NAICS, Mailing Address, Inspection Type, Scope, Advanced Notice, Ownership, Safety/Health, Close Conference, Emphasis, Case Closed,\nLocate violation summary: Current Violations - Total, Current Penalty - Total\nLocate Violation Items: Get Standard Cited only if it is 3395? or get all standards cited, regardless retrieve Standard cited, Issuance Date, Abatement Due Date, current penalty\n\n\nInspection type: there are two types– programmed and unprogrammed,\n\nA Fatality/Catastrophe Report (FAT/CAT),\nComplaint\nAccident\n\n\nnotes from lex (osha rep):\nIn the case you referenced below, there are indicators of what type of inspection: Accident and Complaint Inspections are” Unprogrammed Inspections:” and in most cases are also “Partial” Inspections (focused on the specific accident or the complaint item, although some complaints could be “Comprehensive”).\nInspection Type: Complaint\nScope: Partial\nAdvanced Notice: N\nOwnership: Private\nSafety/Health: Health\nClose Conference: 12/15/2023\nEmphasis:\nCase Closed: 01/30/2024\nProgrammed inspections, like those conducted by my office will always be “Comprehensive”. IN all cases, there is never an announcement of a pending inspection. Notice is never given to any employer, by law in Cal OSHA\nData analysis:\n\nsee which industries are most cited\nWhat percent of complaints actually result in violations? This is 5 year range 1059/ 1706 – 62%\n\n\nknitr::opts_chunk$set(eval = FALSE)\n#install.packages(\"rvest\") \n#install.packages(\"pdftools\")\n#install.packages(\"xml2\")\n#install.packages(\"RSelenium\")\n#install.packages(\"binman\")\n# install.packages(\"purrr\")\nlibrary(purrr)\nlibrary(pdftools)\n\nUsing poppler version 23.04.0\n\nlibrary(rvest)\nlibrary(httr)\nlibrary(xml2)\nlibrary(tibble)\nlibrary(RSelenium)\nlibrary(wdman)\nlibrary(binman)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n#FAILED - server request 403 \n#url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n# set user agent \n\n#response &lt;- GET(url, \n                user_agent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"))\n\n# Check if the request was successful\n#if (status_code(response) == 200) {\n  # Parse the content of the webpage\n  #webpage &lt;- read_html(content(response, \"text\"))\n  \n  # Extract the first table from the page\n # table &lt;- webpage %&gt;% \n   # html_nodes(\"table\") %&gt;%     # Find all tables on the page\n  #  .[[1]] %&gt;%                  # Select the first table (adjust index if needed)\n   # html_table(fill = TRUE)      # Convert HTML table to data frame\n  \n  # Print the table\n  #print(table)\n  \n#} else {\n  stop(\"Failed to retrieve the webpage. Status code: \", status_code(response))\n#}\n\n\n#FAILED - not recgonzing referer, user agent issues \n# Define the URL\n# Load required libraries\n\n# Define the URL\nurl &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n\n# Set HTTP headers to mimic a real browser\n# adding more user agent headers, simulate real users \nresponse &lt;- GET(url, \n                user_agent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"),\n                add_headers(.  \n                  `Referer` = \"https://www.google.com\",\n                  `Accept-Language` = \"en-US,en;q=0.9\",\n                  `Cache-Control` = \"max-age=0\"\n                ))\n\n# Check if the request was successful\nif (status_code(response) == 200) {\n  # Parse the content of the webpage\n  webpage &lt;- read_html(content(response, \"text\"))\n  \n  # Extract the first table from the page\n  table &lt;- webpage %&gt;% \n    html_nodes(\"table\") %&gt;%     # Find all tables on the page\n    .[[1]] %&gt;%                  # Select the first table (adjust index if needed)\n    html_table(fill = TRUE)      # Convert HTML table to data frame\n  \n  # Print the table\n  print(table)\n  \n} else {\n  stop(\"Failed to retrieve the webpage. Status code: \", status_code(response))\n}\n\nAttempt II. rvest xml2 and tibbles\n\n#store url \nurl2 &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n#scrape htmlinfo from stored url \nbase_webpage &lt;- read_html(url2)\n#loop \nnew_url2 &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024/%s\"\n# Creating dataframe of the first 100 movies:\n# html_table() converts html tables into dataframes.\ntable_base &lt;- rvest::html_table(base_webpage) [[1]] %&gt;% \n  tibble::as_tibble(.name_repair = \"unique\")\ntable_new &lt;- data.frame()\ndf &lt;- data.frame()\ni &lt;- 101\n\n## Creating data out of the next set of tables \nwhile (i&lt;5502) {\n  new_webpage&lt;- read_html(sprintf(new_url2,i))\n  table_new &lt;- rvest::html_table(new_webpage)[[1]] %&gt;% \n    tibble::as_tibble(.name_repair = \"unique\") # repair the repeated columns\n  df&lt;- rbind(df,table_new)\n  i=i+100\n}\n## Merge table_base and df \ncitations &lt;- merge(table_base, df, all = T)\nhead(citations)\n\n\n\n\nsites generate dynamic content w/ JavaScript so the raw html of site doesnt help much. Rblogger tutorial (2014) outdated, using appsilon tutorial\n\nlatest chromedriver version installed: 129.0.6668.89, somehow my R cannot access it it conitnues to access an older version of it 106. tried everything, I manually installed driver 129 for browser and driver compatibility.\nI dwonloaded driver 129 here\n\nChrome attempt didnt work. chrome driver incompatibility, saved by firefox\n\n#NOT WORKING\n#rD &lt;- RSelenium::rsDriver() #only supports v.106, have v.129\n# check supported chrome versions. \nbinman::list_versions(appname = \"chromedriver\")\nrD &lt;- RSelenium::rsDriver(browser = \"chrome\", \n                          port = 53924L, chromever = \"129.0.6668.89\") \n#troubleshooting below \n# Define the path to your ChromeDriver\nchrome_driver_path &lt;- \"/Users/diegoflores/Downloads/chromedriver-mac-arm64-2/chromedriver\"\n\n# Start RSelenium with the path to the driver\nrD &lt;- rsDriver(browser = \"chrome\", chromever = \"129.0.6668.89\", extraCapabilities = list(chromeOptions = list(binary = chrome_driver_path)))\nbinman::list_versions(appname = \"chromedriver\")\n\nrD &lt;- RSelenium::rsDriver(browser = \"chrome\",\n                          chromever = \"106.0.5249.21\")\n\nWorking with elements\n\nfindElement(using, value): Search for an element on the page, starting from the document root. The located element will be returned as an object of webElement class. To use this need some basic knowledge of HTML/ CSS (or xpath, etc). Chrome extension, called SelectorGadget, might help.\nhighlightElement(): Utility function to highlight current Element. This helps to check that you selected the wanted element.\nsendKeysToElement(): Send a sequence of keystrokes to an element. The keystrokes are sent as a list. Plain text is entered as an unnamed element of the list. Keyboard entries are defined in ’selKeys‘ and should be listed with the name ’key‘.\nclearElement(): Clear a TEXTAREA or text INPUT element’s value.\nclickElement(): Click the element. You can click links, check boxes, dropdown lists, etc.\nLATEST UPDATE:\n\nsuccesful but the table output isnt that nice I need to first get the top header (whihc has the variables names) am I analyzing by column or row or both, or how do I think about the scrape?\nI think I successfully extracted all of the first table? now I need to loop it!! figure out pagination\n\n\n\nrD &lt;- RSelenium::rsDriver(browser = \"firefox\", port = 4569L) # start session\nremDr &lt;- rD[[\"client\"]] # Assign the client to an object\n\n\nremDr$open()\nbase_url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024\" \n\nremDr$navigate(base_url)\n# Sys.sleep(4) # seconds\n\n#webElem &lt;- remDr$findElement(using = \"css selector\", value = \"div.table-responsive:nth-child(8) &gt; table:nth-child(1)\") \n# webElem$highlightElement()\nremDr$maxWindowSize()\n#keep the browser active, open(silent = FALSE)\n#remDr$open() #use this if server is already active\n#remDr$close() #close current session \n\n\nsource &lt;- remDr$getPageSource()[[1]]# read page source from where you navigated \n# get all rows of table in an xml list \ntable_body  &lt;- read_html(source) %&gt;% #table_body is xml list \n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) &gt; tbody:nth-child(2)\")\n\nprint(table_body)\n #Extract all data from rows in the table\ntable_data &lt;- table_body %&gt;% # then table body is passed to html_nodes to extract the actual data\n  html_nodes(\"tr\") %&gt;% # first get all rows (tr, its getting from source code) separately \n  html_nodes(\"td\") %&gt;% # then get all cells (td)\n  html_text2()         # html_text() retrives text from html element\ndf &lt;- as.data.frame(table_data)\n\n# Get column names, turn into list, when transforming into df, the ncol = the list column_length\ncolumn_names &lt;- read_html(source) %&gt;%  # extract list of column names, convert to text after using html_text2\n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) &gt; thead:nth-child(1)\") %&gt;% \n  html_nodes(\"th\") %&gt;%  # extracting table headers (th)\n  html_text2()\nprint(column_names) # vector of 12 names, just a check\n\ncolumn_length &lt;- length(column_names) # 12, length gets/sets the length of a vector (which is a list)\n\n# First turn lists into matrix w correct # of cols then make a tibble \ndf &lt;- matrix(table_data, ncol = column_length, byrow = TRUE) %&gt;% \n  as_tibble()\n\ncolnames(df) &lt;- column_names \n#str(df) # all chrs \n# df &lt;- df %&gt;% select(-1, -2)  # remove first two columns, not sure where/ when to run this prolly after \n                             # everything is scraped \n\n#### Pagination repeat function ####\nrepeat {\nnext_button &lt;- remDr$findElement(using = \"xpath\", value = '//a[@title = \"Next Page\"]') # locate netx button\n\nnext_button$clickElement()  # Click next button \nSys.sleep(2)                # Sleep 3 seconds \n\nif (length(remDr$findElements(using = \"xpath\", value = '//a[@title = \"Next Page\"]')) == 0) { # a check! \n  break\n  }\n}\n\n# Appending newly scraped df to all data \nall_data &lt;- list() \n\nall_data &lt;- rbindlist(list(all_data, df))\n\n\n# NOT WORKING RN \n# Navigating to sub pages on the Activtiy # the a elements \na_elements &lt;- read_html(remDr$getPageSource()[[1]]) %&gt;%\n  html_nodes(\"tr\") %&gt;%\n  html_nodes(\"td\") %&gt;% # get a elemtns from the source (html) of the base_url\n  html_elements(css = \"div.package &gt; a\")\na_elements\n\nwebsite_html &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024\" %&gt;% \n  read_html()\ntd_cell_elements &lt;- source %&gt;% \n  html_nodes(\"tr\") %&gt;% \n  html_nodes(\"td\") \n#bcus a elements (links) are inside the td (cells) i must extract all a tags w/ in the td cells \na_elements &lt;- td_cell_elements %&gt;%  \n  html_elements(\"a\") # selecting the a elements from the html source - here its from the td_cel_elements html source\na_elements_links &lt;- a_elements %&gt;% \n  html_attr(\"href\") #gets attribute from html source code \na_element_links\n\n\n# SCRAPE SUB PAGE working but abandoning \nactivityElem &lt;- remDr$findElement(using = \"css selector\", # finds the activity link using \n                                       value =\"tbody tr:nth-child(1) td:nth-child(3)\") # relative css selector \nactivityElem$clickElement()  #clicks the activity link \nSys.sleep(2)\nsource &lt;- remDr$getPageSource()[[1]] # source() retrieves current HTML of webpage as a list, and [[1]] extracts first  # (and only) item in that list, which is full HTML code as a string\n# Extract paragraphs based on their HTML structure, using single-line selector(no spaces)\nptext &lt;- read_html(source) %&gt;%  \n  html_nodes(\"div.row-fluid:nth-child(9) &gt; div:nth-child(1) &gt; p:nth-child(1), #site address\n              div.row-fluid:nth-child(9) &gt; div:nth-child(2) &gt; p:nth-child(1), # union \n              div.row-fluid:nth-child(9) &gt; div:nth-child(3) &gt; p:nth-child(2), # NAICS \n              div.row-fluid:nth-child(11) &gt; div:nth-child(2) &gt; p:nth-child(1),# safety \n              div.row-fluid:nth-child(11) &gt; div:nth-child(2) &gt; p:nth-child(3)\") %&gt;% \n  html_text2()\n# print(ptext) # Print the extracted text, currently a vector it works! 10/14  \n# Violation Summary Table: getting total current violations and current penalty  \ntable_body2 &lt;- read_html(source) %&gt;% \n  html_nodes(\".tablei &gt; tbody:nth-child(2) &gt; tr\") #looking at tablei, tbody, nth child 2, all the rows (tr)\n# 10/14, it works!!! and its already a function :) must be appended into the larger script \ntable_data2 &lt;- table_body2 %&gt;% \n  map_df(function(.x) { # already looking at all rows (as a string) so .x represents each element of the vector, \n    data.frame(         # in this case each .x is a row (tr) element \n      current_vil = html_node(.x, \"tr:nth-child(3) &gt; td:nth-child(7)\") %&gt;% html_text2(), # tbl row 3, cell 7\n      current_pen = html_node(.x, \"tr:nth-child(5) &gt; td:nth-child(7)\") %&gt;% html_text2()  # tbl row 5, cell 7\n    )# must tell function to look into .x bcus this searches w/ in specified rows of  table_body2 \n  }) # instead of excluding it and then telling the function to search the entire document? \n     # map_df is superseded meaning it will. not be replaced but there are other syntax recommendations \n\n\n# 1: SETUP \nremDr$open()\nbase_url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024\" \nremDr$navigate(base_url)\nSys.sleep(3) \nremDr$maxWindowSize()\nsource &lt;- remDr$getPageSource()[[1]]\n\n# 2: PLUG IN SCRAPE OF INITIAL TABLE \n\n# 3: get all links for activity # using for loop, navigate and scrape w/ in them\n# FAILED Attempt 2 - neither work :( i am sad. 10/16 update, ending web scraping. \nparsed_html &lt;- read_html(source)\nlinks &lt;- parsed_html %&gt;% \n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) tbody tr\") %&gt;% \n  html_nodes(\"td a\") %&gt;% # each row has links in &lt;a&gt; tags inside &lt;td&gt;\n  html_attr(\"href\") # Extract href attributes\nprint(links)\n# https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024 \n# https://www.osha.gov/ords/imis/establishment.inspection_detail?id=1763527.015\n# FAILED Attempt 1 below\nrows &lt;- remDr$findElements(using = \"css selector\", value =\"div.table-responsive:nth-child(8) table tbody tr\") # rows - find all row elements first, its only getting row 1!!! \nlinks &lt;- sapply(rows, function(row) {   # Getting links: iterate over each row to get links \n  a_tag &lt;- row$findElement(using = \"css\", value = \"td a\")\n    a_tag$getElementAttribute(\"href\")   # get link itself from &lt;a&gt; (anchor element)\n})\nprint(links)\n#\nfor (link in links){\n  remDr$navigate(links) # navigate to the link in vector links\n  #SCRAPE FUNCTION HERE\n}\n\n\n## DEBUGGING## # alternative approach below, fixed code above was missing html_nodes(\"th\") in order to extract cell\n##               values of the css selector \n# Up to this point 10/7 the data wasnt scraped properly, it is in a long 1 column dataframe \n#num_cols &lt;- 12\n#num_rows &lt;- length(table_data)/num_cols\n# matrix_table_data &lt;- matrix(table_data, ncol = num_cols, byrow = TRUE) %&gt;% \n # as_tibble()\n# colnames(matrix_table_data) &lt;- column_names\n# there is an issue w the way column names are being extracted, try different css selector, if it fails, try new written\n# vector \n\n10/ 16\n\nending for now. very close to just scraping all pages but not the subpages unfortunately!\n\n10/15\n\ngreat progress but on the note of why the function is iterating over the first row 20 times instead of each row once\n\nThis usually happens if the findElement (singular) method is used instead of findElements (plural), or if you’re not properly referencing each individual row during iteration. but I have used plural!! to no avail\n\n\n10/14\nCSS selector\n\n\n\n10/10/224\n\ndo we need the script to create a predefined list for the total activity number? yes i believe\nTo do: Following along with web scrape premier league\n\n\ncreate a list of all activity numbers (href links) from the readable HTML source (its a string from a list)\nI.e. see code chunk. So i must find all “link” items in the row elements that have attribute href. html_attr then extracts value of the “data-option-name” attribute from the li elements, which are the season names\n“As you can see, we have an attribute named ‘data-dropdown-list’ whose value is ‘FOOTBALL_COMPSEASON’ and inside we have ‘li’ tags where the attribute ‘data-option-name’ changes for each season.”\n\n\n#FOR EXMAPLE:\nlist_seasons &lt;- read_html(source) %&gt;%\n  html_nodes(\"ul[data-dropdown-list=         # find all list (li) items in the ul elements that have attribute [data-dropdown-\n             FOOTBALL_COMPSEASON] &gt; li\") %&gt;% # list=FOOTBALL...] targetting the specific dropdown list for seasons \n  html_attr(\"data-option-name\")\n\n10/4/24\n\nafter I find the correct html elements/ and their css selectors I should replicate the for loop code below to get all html source from all pages, then can parse it out correctly into a dataframe (rvest)\ndiv.table-responsive:nth-child(8) refers to 8th child element div w/ class table responsive\n\n10/7/24 - monday\n\nfinally got the base scrape down (df), now I gotta deal with pagination and inspection details\nPagination: locate ‘next’ web element to run at the end of the initial scrape, sys.sleep(_), extract only the table body, dont need table headers? See wickham github\nIndex pages: Inspection detail: can navigate and click it, then scrape site address, union status, naics, row fluid class under it, case status, violation summary, and violation items\n\nthe issue here is creating the new variables, will be a new set of 10+ variables – will prolly happen after using same methods\nViolation summary: only retrieve Current violations/ penalty from the total row\nviolation items: not sure at all how to get standard cited since there is more than 1 unique value there can be x amount of unique standards cited but surely not unlimited, dont need to get all since it is already common knowledge what standards are cited most frequently (provided by OSHA) could probably just check if heat standard is mentioned and if so to make it Y/N\n\nwrapper functions:\nultimate goal:\n\n&lt;table&gt; \n&lt;tr&gt;\n&lt;td&gt;Row 1, Cell 1&lt;/td&gt; #td defines a cell in the row\n&lt;td&gt;Row 1, Cell 2&lt;/td&gt;\n&lt;/tr&gt; \n&lt;tr&gt;\n &lt;td&gt;Row 2, Cell 1&lt;/td&gt;\n&lt;td&gt;Row 2, Cell 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tr&gt;\n\n&lt;a href=“establishment.inspection detail? id = ####### title =”#######” &gt;\n1763527.015\n\n &lt;/table&gt;\nScraping programmatically from stack overflow: start by writing a function that takes a page number, finds the link for that page, clicks on the link, and returns the HTML source for that page:\nuseful functions\n\nfindElement(using =, value=): Search for an element on the page, starting from the document root. The located element will be returned as an object of webElement class. To use this function you need some basic knowledge of HTML and CSS (or xpath, etc). Using a Chrome extension, called SelectorGadget, might help.\nhighlightElement(): Utility function to highlight current Element. This helps to check that you selected the wanted element.\nsendKeysToElement(): Send a sequence of keystrokes to an element. The keystrokes are sent as a list. Plain text is entered as an unnamed element of the list. Keyboard entries are defined in ’selKeys‘ and should be listed with the name ’key‘.\ngetPageSource()[[1]]: Get the current page source. This method combined with `rvest` is what makes possible to scrape dynamic web pages. The xml document returned by the method can then be read using rvest::read_html(). This method returns a `list` object, that’s the reason behind [[1]].\n\nget_html &lt;- function(i) {\n  webElem &lt;- remDr$findElement(using = \"link text\", as.character(i))\n  webElem$clickElement()\n  Sys.sleep(s)\n  remDr$getPageSource()[[1]]\n}\ns &lt;- 2 # seconds to wait between each page\ntotal_pages &lt;- 17\nhtml_pages &lt;- vector(\"list\", total_pages)\nStart the browser, navigate to page 1, and save the source:\nlibrary(RSelenium)\nrD &lt;- rsDriver()\nremDr &lt;- rD[[\"client\"]]\nbase_url &lt;- \"http://dgsp.cns.gob.mx/Transparencia/wConsultasGeneral.aspx\"\nremDr$navigate(base_url)\nsrc &lt;- remDr$getPageSource()[[1]]\nhtml_pages[1] &lt;- src\nFor pages 2 to 17, we use a for-loop and call the function we wrote above, taking care to account specially for page 11:\nfor (i in 2:total_pages) {\n  if (i == 11) {\n    webElem &lt;- remDr$findElement(using = \"link text\", \"...\")\n    webElem$clickElement()\n    Sys.sleep(s)\n    html_pages[i] &lt;- remDr$getPageSource()[[1]]\n  } else {\n    html_pages[i] &lt;- get_html(i)  \n  }\n}\nremDr$close()\nThe result is html_pages, a list of length 17, with each element the HTML source for each page."
  },
  {
    "objectID": "docs/about.html",
    "href": "docs/about.html",
    "title": "About",
    "section": "",
    "text": "This research project aims to amplify workers’ voices and experiences with indoor heat—often extreme heat—to better understand its impact on health, safety, working conditions, and the overall worker. In the context of California’s recent Indoor Heat Illness Standard, passed June 2024 and in effect as of July 23rd, 2024, a plethora of worker advocacy organizations, labor unions, and collectives are taking the necessary action to inform, train, and empower their workers as it relates to indoor heat. This research website forms a part of that broader push to empower workers in the face of new and, initially, ambiguous understandings of California’s indoor heat protections. It is our hope this website serves as both an advocacy tool to inform workers and organizations and a push to bridge data analysis and original labor research.\nCarried out in partnership with:\nSoCalCOSH & UCLA Labor Occupational Saftey and Health Program\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/heat_and_occupation.html",
    "href": "docs/heat_and_occupation.html",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "Seven California workers died from indoor heat from 2010 to 2017. The real number is believed to be significantly higher, however, it remains consistently under-reported of the lack of recognition of indoor heat as a factor in these cases of death. Many more ED visits can actually be attributed to heat but aren’t reported as an underlying cause of\nLos Angeles County. San Bernardino County. Orange County. A southern California paradise? Or a microcosm of the labor fight?\n\n\n\n\n\n\nCalculating % change great Rpubs article with visuals. If comparing percent change of Q1 24 and Q1 23 then I must download Q1 23 data.\n\nPercentage changeWhen you have data for two points in time, you can calculate how much change there has been during this period. The result is expressed as a percentage (in absolute numbers, it’s just a difference) and is called the rate of change, i.e. the percentage change. It is calculated as follows: [(Number at later time ÷ Number at earlier time) - 1] × 100.\nExample In 2010, there were 4.8 million persons employed in country X and in 2015 there were 5.2 million. The percentage change from 2010 to 2015 is then calculated as follows: [(5.2 ÷ 4.8)-1] x 100= +8.3%\n\nmarijuana NAICS: 459991 Marijuana stores, medical or recreational\nNAICS 812300 - Drycleaning and Laundry Services\nmaintenance workers NAICS: 561720, cleaning offices/ homes, building cleaning services, residential cleaning services\n\ncase_when follows (condition ~ result), evaluates each condition in order, and if it finds the first TRUE condition for a row, it applies the corresponding result. DONE\nNote: What other industries are we interested in viewing employment statistics on?\n\n\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom this figure we can see the lion’s share of employment that is the fast food industry. Los Anegeles County through its sheer size, of course, constitutes a majority of the total count of fast food restaurants. Cutting the fast food industry out of the picture we can zoom in on\n### San Bernardino County\n\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nannual_avg_emplvl\ntotal_annual_wages\nannual_avg_estabs\navg annual pay - done for ff and ware\nannual_avg_wkly_wage - done for ff and ware\nannual_contributions - annual taxable wages what they contirbute to gov programs etc avg_annual_pay\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQCEW 2023\n \n  \n    fips \n    county \n    own_code \n    industry \n    naics \n    year \n    qtr \n    annual_avg_estabs \n    annual_avg_emplvl \n    total_annual_wages \n    taxable_annual_wages \n    annual_contributions \n    annual_avg_wkly_wage \n    avg_annual_pay \n    lq_annual_avg_estabs \n    lq_annual_avg_emplvl \n    lq_total_annual_wages \n    lq_taxable_annual_wages \n    lq_annual_contributions \n    lq_annual_avg_wkly_wage \n    lq_avg_annual_pay \n    oty_annual_avg_estabs_chg \n    oty_annual_avg_estabs_pct_chg \n    oty_annual_avg_emplvl_chg \n    oty_annual_avg_emplvl_pct_chg \n    oty_total_annual_wages_chg \n    oty_total_annual_wages_pct_chg \n    oty_taxable_annual_wages_chg \n    oty_taxable_annual_wages_pct_chg \n    oty_annual_contributions_chg \n    oty_annual_contributions_pct_chg \n    oty_annual_avg_wkly_wage_chg \n    oty_annual_avg_wkly_wage_pct_chg \n    oty_avg_annual_pay_chg \n    oty_avg_annual_pay_pct_chg \n    flag \n    agglvl_code \n    size_code \n    disclosure_code \n    lq_disclosure_code \n    oty_disclosure_code \n  \n \n\n  \n    6037 \n    Los Angeles County \n    5 \n    Apparel Mfg. \n    315 \n    2023 \n    A \n    1519 \n    20083 \n    1175982106 \n    186441384 \n    6048886 \n    1126 \n    58555 \n    5.05 \n    7.79 \n    7.35 \n    8.71 \n    7.39 \n    0.94 \n    0.94 \n    -134 \n    -8.1 \n    -1970 \n    -8.9 \n    -66757642 \n    -5.4 \n    -21052893 \n    -10.1 \n    -745072 \n    -11.0 \n    42 \n    3.9 \n    2203 \n    3.9 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Warehouse & Storage \n    493110 \n    2023 \n    A \n    562 \n    16702 \n    1039628183 \n    155609771 \n    4956405 \n    1197 \n    62247 \n    0.73 \n    0.33 \n    0.36 \n    0.33 \n    0.35 \n    1.10 \n    1.10 \n    52 \n    10.2 \n    -402 \n    -2.4 \n    10029162 \n    1.0 \n    -11639282 \n    -7.0 \n    -441311 \n    -8.2 \n    39 \n    3.4 \n    2052 \n    3.4 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Fast Food \n    722513 \n    2023 \n    A \n    8945 \n    150158 \n    4157504180 \n    1343749547 \n    30071603 \n    532 \n    27688 \n    0.74 \n    1.12 \n    1.23 \n    1.40 \n    1.39 \n    1.10 \n    1.10 \n    208 \n    2.4 \n    5198 \n    3.6 \n    203555912 \n    5.1 \n    5637873 \n    0.4 \n    181198 \n    0.6 \n    7 \n    1.3 \n    412 \n    1.5 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Car Wash \n    811192 \n    2023 \n    A \n    591 \n    6488 \n    206408702 \n    60282294 \n    1398678 \n    612 \n    31815 \n    0.67 \n    1.22 \n    1.11 \n    1.42 \n    1.25 \n    0.92 \n    0.92 \n    1 \n    0.2 \n    -242 \n    -3.6 \n    -799427 \n    -0.4 \n    -2999026 \n    -4.7 \n    -98347 \n    -6.6 \n    20 \n    3.4 \n    1027 \n    3.3 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6059 \n    Orange County \n    5 \n    Apparel Mfg. \n    315 \n    NA \n    A \n    NA \n    3446 \n    252262071 \n    30400384 \n    1213749 \n    1408 \n    73199 \n    NA \n    3.63 \n    4.43 \n    3.63 \n    3.84 \n    1.22 \n    1.22 \n    NA \n    -6.7 \n    -398 \n    -10.4 \n    -17388328 \n    -6.4 \n    -4199977 \n    -12.1 \n    -296883 \n    -19.7 \n    59 \n    4.4 \n    3049 \n    4.3 \n    FALSE \n    75 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Warehouse & Storage \n    493110 \n    NA \n    A \n    NA \n    6485 \n    472134948 \n    66207033 \n    1604594 \n    1400 \n    72799 \n    NA \n    0.35 \n    0.46 \n    0.36 \n    0.30 \n    1.33 \n    1.33 \n    NA \n    20.4 \n    1120 \n    20.9 \n    85293496 \n    22.0 \n    7623517 \n    13.0 \n    312771 \n    24.2 \n    13 \n    0.9 \n    698 \n    1.0 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Fast Food \n    722513 \n    NA \n    A \n    NA \n    56460 \n    1537423101 \n    501326503 \n    10924899 \n    524 \n    27231 \n    NA \n    1.14 \n    1.28 \n    1.33 \n    1.31 \n    1.12 \n    1.12 \n    NA \n    2.1 \n    1592 \n    2.9 \n    93293955 \n    6.5 \n    6508363 \n    1.3 \n    101521 \n    0.9 \n    18 \n    3.6 \n    911 \n    3.5 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Car Wash \n    811192 \n    NA \n    A \n    NA \n    3366 \n    120424069 \n    29754104 \n    668566 \n    688 \n    35773 \n    NA \n    1.71 \n    1.83 \n    1.79 \n    1.55 \n    1.07 \n    1.07 \n    NA \n    4.4 \n    427 \n    14.5 \n    19247428 \n    19.0 \n    3633913 \n    13.9 \n    99970 \n    17.6 \n    26 \n    3.9 \n    1349 \n    3.9 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Apparel Mfg. \n    315 \n    NA \n    A \n    NA \n    138 \n    6560506 \n    1382005 \n    37210 \n    915 \n    47597 \n    NA \n    0.29 \n    0.30 \n    0.36 \n    0.26 \n    1.04 \n    1.04 \n    NA \n    -14.3 \n    6 \n    4.5 \n    1844971 \n    39.1 \n    127061 \n    10.1 \n    6091 \n    19.6 \n    228 \n    33.2 \n    11873 \n    33.2 \n    FALSE \n    75 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Warehouse & Storage \n    493110 \n    NA \n    A \n    NA \n    68859 \n    3690834868 \n    582627908 \n    17900108 \n    1031 \n    53600 \n    NA \n    7.28 \n    9.31 \n    7.02 \n    7.23 \n    1.28 \n    1.28 \n    NA \n    6.7 \n    -6126 \n    -8.2 \n    -17797035 \n    -0.5 \n    -73427574 \n    -11.2 \n    -1163116 \n    -6.1 \n    80 \n    8.4 \n    4142 \n    8.4 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Fast Food \n    722513 \n    NA \n    A \n    NA \n    36021 \n    907302063 \n    314620241 \n    7107865 \n    484 \n    25188 \n    NA \n    1.43 \n    1.94 \n    1.84 \n    1.87 \n    1.35 \n    1.36 \n    NA \n    3.2 \n    1366 \n    3.9 \n    72673083 \n    8.7 \n    -152943 \n    0.0 \n    12747 \n    0.2 \n    21 \n    4.5 \n    1104 \n    4.6 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Car Wash \n    811192 \n    NA \n    A \n    NA \n    1573 \n    44492327 \n    13679736 \n    378023 \n    544 \n    28290 \n    NA \n    1.57 \n    1.73 \n    1.81 \n    1.92 \n    1.10 \n    1.10 \n    NA \n    10.3 \n    27 \n    1.7 \n    1580522 \n    3.7 \n    -247663 \n    -1.8 \n    31891 \n    9.2 \n    10 \n    1.9 \n    539 \n    1.9 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n\n\n\n\n\nNotes on. kable styling: column_spec!!! mtcars[1:8, 1:8] %&gt;% kbl() %&gt;% kable_paper(full_width = F) %&gt;% column_spec(2, color = spec_color(mtcars\\(mpg[1:8]),\n              link = \"https://haozhu233.github.io/kableExtra/\") %&gt;%\n  column_spec(6, color = \"white\",\n              background = spec_color(mtcars\\)drat[1:8], end = 0.7), popover = paste(“am:”, mtcars$am[1:8]))\nWhat about text wrapping? if i want ot align_right how can I write that text? might have to use a function? Currently alright right doesnt work well bcus table is huge\nPlaces API (new): includes nearby search and text search The main difference between the two searches is that Text Search (New) lets you specify an arbitrary search string while Nearby Search (New) requires a specific area in which to search. Places API (not new):\n- A Place Search returns a list of places along with summary information about each place; additional information is available via a Place Details query."
  },
  {
    "objectID": "docs/heat_and_occupation.html#bureau-of-labor-statistics-quarterly-census-on-employment-and-wagesqcew-2023",
    "href": "docs/heat_and_occupation.html#bureau-of-labor-statistics-quarterly-census-on-employment-and-wagesqcew-2023",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "QCEW 2023\n \n  \n    fips \n    county \n    own_code \n    industry \n    naics \n    year \n    qtr \n    annual_avg_estabs \n    annual_avg_emplvl \n    total_annual_wages \n    taxable_annual_wages \n    annual_contributions \n    annual_avg_wkly_wage \n    avg_annual_pay \n    lq_annual_avg_estabs \n    lq_annual_avg_emplvl \n    lq_total_annual_wages \n    lq_taxable_annual_wages \n    lq_annual_contributions \n    lq_annual_avg_wkly_wage \n    lq_avg_annual_pay \n    oty_annual_avg_estabs_chg \n    oty_annual_avg_estabs_pct_chg \n    oty_annual_avg_emplvl_chg \n    oty_annual_avg_emplvl_pct_chg \n    oty_total_annual_wages_chg \n    oty_total_annual_wages_pct_chg \n    oty_taxable_annual_wages_chg \n    oty_taxable_annual_wages_pct_chg \n    oty_annual_contributions_chg \n    oty_annual_contributions_pct_chg \n    oty_annual_avg_wkly_wage_chg \n    oty_annual_avg_wkly_wage_pct_chg \n    oty_avg_annual_pay_chg \n    oty_avg_annual_pay_pct_chg \n    flag \n    agglvl_code \n    size_code \n    disclosure_code \n    lq_disclosure_code \n    oty_disclosure_code \n  \n \n\n  \n    6037 \n    Los Angeles County \n    5 \n    Apparel Mfg. \n    315 \n    2023 \n    A \n    1519 \n    20083 \n    1175982106 \n    186441384 \n    6048886 \n    1126 \n    58555 \n    5.05 \n    7.79 \n    7.35 \n    8.71 \n    7.39 \n    0.94 \n    0.94 \n    -134 \n    -8.1 \n    -1970 \n    -8.9 \n    -66757642 \n    -5.4 \n    -21052893 \n    -10.1 \n    -745072 \n    -11.0 \n    42 \n    3.9 \n    2203 \n    3.9 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Warehouse & Storage \n    493110 \n    2023 \n    A \n    562 \n    16702 \n    1039628183 \n    155609771 \n    4956405 \n    1197 \n    62247 \n    0.73 \n    0.33 \n    0.36 \n    0.33 \n    0.35 \n    1.10 \n    1.10 \n    52 \n    10.2 \n    -402 \n    -2.4 \n    10029162 \n    1.0 \n    -11639282 \n    -7.0 \n    -441311 \n    -8.2 \n    39 \n    3.4 \n    2052 \n    3.4 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Fast Food \n    722513 \n    2023 \n    A \n    8945 \n    150158 \n    4157504180 \n    1343749547 \n    30071603 \n    532 \n    27688 \n    0.74 \n    1.12 \n    1.23 \n    1.40 \n    1.39 \n    1.10 \n    1.10 \n    208 \n    2.4 \n    5198 \n    3.6 \n    203555912 \n    5.1 \n    5637873 \n    0.4 \n    181198 \n    0.6 \n    7 \n    1.3 \n    412 \n    1.5 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Car Wash \n    811192 \n    2023 \n    A \n    591 \n    6488 \n    206408702 \n    60282294 \n    1398678 \n    612 \n    31815 \n    0.67 \n    1.22 \n    1.11 \n    1.42 \n    1.25 \n    0.92 \n    0.92 \n    1 \n    0.2 \n    -242 \n    -3.6 \n    -799427 \n    -0.4 \n    -2999026 \n    -4.7 \n    -98347 \n    -6.6 \n    20 \n    3.4 \n    1027 \n    3.3 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6059 \n    Orange County \n    5 \n    Apparel Mfg. \n    315 \n    NA \n    A \n    NA \n    3446 \n    252262071 \n    30400384 \n    1213749 \n    1408 \n    73199 \n    NA \n    3.63 \n    4.43 \n    3.63 \n    3.84 \n    1.22 \n    1.22 \n    NA \n    -6.7 \n    -398 \n    -10.4 \n    -17388328 \n    -6.4 \n    -4199977 \n    -12.1 \n    -296883 \n    -19.7 \n    59 \n    4.4 \n    3049 \n    4.3 \n    FALSE \n    75 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Warehouse & Storage \n    493110 \n    NA \n    A \n    NA \n    6485 \n    472134948 \n    66207033 \n    1604594 \n    1400 \n    72799 \n    NA \n    0.35 \n    0.46 \n    0.36 \n    0.30 \n    1.33 \n    1.33 \n    NA \n    20.4 \n    1120 \n    20.9 \n    85293496 \n    22.0 \n    7623517 \n    13.0 \n    312771 \n    24.2 \n    13 \n    0.9 \n    698 \n    1.0 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Fast Food \n    722513 \n    NA \n    A \n    NA \n    56460 \n    1537423101 \n    501326503 \n    10924899 \n    524 \n    27231 \n    NA \n    1.14 \n    1.28 \n    1.33 \n    1.31 \n    1.12 \n    1.12 \n    NA \n    2.1 \n    1592 \n    2.9 \n    93293955 \n    6.5 \n    6508363 \n    1.3 \n    101521 \n    0.9 \n    18 \n    3.6 \n    911 \n    3.5 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Car Wash \n    811192 \n    NA \n    A \n    NA \n    3366 \n    120424069 \n    29754104 \n    668566 \n    688 \n    35773 \n    NA \n    1.71 \n    1.83 \n    1.79 \n    1.55 \n    1.07 \n    1.07 \n    NA \n    4.4 \n    427 \n    14.5 \n    19247428 \n    19.0 \n    3633913 \n    13.9 \n    99970 \n    17.6 \n    26 \n    3.9 \n    1349 \n    3.9 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Apparel Mfg. \n    315 \n    NA \n    A \n    NA \n    138 \n    6560506 \n    1382005 \n    37210 \n    915 \n    47597 \n    NA \n    0.29 \n    0.30 \n    0.36 \n    0.26 \n    1.04 \n    1.04 \n    NA \n    -14.3 \n    6 \n    4.5 \n    1844971 \n    39.1 \n    127061 \n    10.1 \n    6091 \n    19.6 \n    228 \n    33.2 \n    11873 \n    33.2 \n    FALSE \n    75 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Warehouse & Storage \n    493110 \n    NA \n    A \n    NA \n    68859 \n    3690834868 \n    582627908 \n    17900108 \n    1031 \n    53600 \n    NA \n    7.28 \n    9.31 \n    7.02 \n    7.23 \n    1.28 \n    1.28 \n    NA \n    6.7 \n    -6126 \n    -8.2 \n    -17797035 \n    -0.5 \n    -73427574 \n    -11.2 \n    -1163116 \n    -6.1 \n    80 \n    8.4 \n    4142 \n    8.4 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Fast Food \n    722513 \n    NA \n    A \n    NA \n    36021 \n    907302063 \n    314620241 \n    7107865 \n    484 \n    25188 \n    NA \n    1.43 \n    1.94 \n    1.84 \n    1.87 \n    1.35 \n    1.36 \n    NA \n    3.2 \n    1366 \n    3.9 \n    72673083 \n    8.7 \n    -152943 \n    0.0 \n    12747 \n    0.2 \n    21 \n    4.5 \n    1104 \n    4.6 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Car Wash \n    811192 \n    NA \n    A \n    NA \n    1573 \n    44492327 \n    13679736 \n    378023 \n    544 \n    28290 \n    NA \n    1.57 \n    1.73 \n    1.81 \n    1.92 \n    1.10 \n    1.10 \n    NA \n    10.3 \n    27 \n    1.7 \n    1580522 \n    3.7 \n    -247663 \n    -1.8 \n    31891 \n    9.2 \n    10 \n    1.9 \n    539 \n    1.9 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n\n\n\n\n\nNotes on. kable styling: column_spec!!! mtcars[1:8, 1:8] %&gt;% kbl() %&gt;% kable_paper(full_width = F) %&gt;% column_spec(2, color = spec_color(mtcars\\(mpg[1:8]),\n              link = \"https://haozhu233.github.io/kableExtra/\") %&gt;%\n  column_spec(6, color = \"white\",\n              background = spec_color(mtcars\\)drat[1:8], end = 0.7), popover = paste(“am:”, mtcars$am[1:8]))\nWhat about text wrapping? if i want ot align_right how can I write that text? might have to use a function? Currently alright right doesnt work well bcus table is huge\nPlaces API (new): includes nearby search and text search The main difference between the two searches is that Text Search (New) lets you specify an arbitrary search string while Nearby Search (New) requires a specific area in which to search. Places API (not new):\n- A Place Search returns a list of places along with summary information about each place; additional information is available via a Place Details query."
  },
  {
    "objectID": "docs/Notes.html",
    "href": "docs/Notes.html",
    "title": "Notes/ Literature Review",
    "section": "",
    "text": "Bootswatch project themes: journal, lux, sandstone, slate, solar"
  },
  {
    "objectID": "docs/Notes.html#literature-review",
    "href": "docs/Notes.html#literature-review",
    "title": "Notes/ Literature Review",
    "section": "Literature Review",
    "text": "Literature Review\nCalmatters 4/24 Waiting and sweltering: Why are California’s indoor heat protections for workers five years late?\n\n2005 outdoor heat standard passsed first of its kind in the country, &gt;80 = water+ shade, &lt;95 = additional breaks + monitoring. “a 2021 study [IZA] suggested it has helped to decrease workplace injuries on hot days.” outlining the importance of indoor heat standard and mentioning citations\nIZA institute on the study of labor found that these policies have a significant reduction in workplace injuries (find claim).\nAmazon citation mentioned in article calosha complaints from amazon fulfiment center 2535 e 3rd st san bernardino , subsequent agree/ disagree\n\nJisung park, IZA, Temperature, Workplace Safety, and Labor Market Inequality\n\n“Hotter temperature increases workplace injuries significantly, causing approximately 20,000 injuries per year. The effects persist in both outdoor and indoor settings (e.g. manufacturing, warehousing), and for injury types ostensibly unrelated to temperature (e.g. falling from heights), consistent with cognitive or cost-related channels.” (1)\n\nHauptman. The Health and Safety of Incarcerated Workers: OSHA’s Applicability in the Prison Context\n\n“This article documents how current occupational health and safety regulations and enforcement mechanisms fail to protect incarcerated workers, who are especially vulnerable to both unsafe working condi- tions and arbitrary retaliation” (73)\nprovides history of prison labor, history of OSHA and their enforcment mechanisms, part 3 the term “employee” as applied to prisoners and the consistent prisoner exemption of fed protective legislation\n\nBehrer et al. Heat has larger impacts on labor in poorer areas\n\nalternatively their 1 sentence summary reads “Wealth moderates the negative income effects of heat.” a kind of vice versa, meaning wealth differences/ inequality mitigate the (negative) impact of heat on labor productivity, labor income, and work hours. This suggests those with wealth suffer less income losses, specifically payroll income, due to the ability of wealth to absorb the negative impacts of heat."
  },
  {
    "objectID": "docs/Notes.html#general-tips",
    "href": "docs/Notes.html#general-tips",
    "title": "Notes/ Literature Review",
    "section": "General tips",
    "text": "General tips\nCitations and references workflow\n\nFollow hands on Data Viz’s workflow: Zotero and Better BibTeX for Notes and Biblio\n\nMapping using tigris – mapping chapter in Mastering Software Dev in R\n\nAwesome ability to pull state county & tracts from US census, loaded as a spatial object see walker databookdown on tigris, examples below\nsee further documentation from Walker here - great maps on average income by zip code\nI shoudl create an interactive map such as this title sac.map leaflet with median income chloropleth and the sac metro area shapefile\n\n\n    knitr::opts_chunk$set(eval = FALSE)\n    library(sp)\n    library(ggplot2)\n    denver_tracts &lt;- tracts(state = \"CO\", county = 31, cb = TRUE, \n                            class = \"sf\")\n    plot(denver_tracts)\n\n    ca_county &lt;- counties(\"CA\")\n    plot(ca_county$geometry)\n\n    lac &lt;- tracts(\"CA\", \"los angeles county\")\n    ggplot(lac) +\n      geom_sf() + theme_classic()\n\n\nArticle Layout chapter (quarto) very useful\n\nspecifically columns specifiers\n\nCreating multi-column layouts/ Combining mulitple plots into one\n\npatchwork or cowplot to combine multilpe ggplot2 lots\nCustom css\ngrid arrange may work really well too see google doc notes on image lit review\n\npage layout: qmd documentation is very helpful here.\n\nsee quartoandme page layout article\ndefault qmd is article format, centered at middle for readability (600px - 900px wide) for landing or index pages consider using other layouts. Examples below of divs and column layout\n\nhow to wrap text around a figure github answer here\n\nessentially you can do it in divs and set the div to float and include text in another div that is under it\n\n\nfomrat: \nhtml:\npage-layout: article, full, custom (use the css grid system)\n\nquarto tips and tricks - has a ton of good tips, footnotes, iframe, tabs, etc\nquarto bookdown - quarto documentation\n\nunder HTML theming: once theme is chosen, can customize the theme presets such as font family (serif, georgia etc), base font size, background color, linestretch (distance between lines of text, defaults to 1.5)\n\nrmd bookdown\n{r, echo = FALSE, out.width = “45”} knitr::include_graphics(c(“images/socalcoshlogo.jpg”, “images/uclalosh.png”)) #\nFigure Divs\nYou can treat any markdown content you want as a figure by enclosing it in Pandoc div block with an identifier prefaced with #fig-. For example, here we create a figure that includes an embedded iframe:\n\n\n\n\n\n\n\nFigure 1: Elephant\n\n\n\nNote that the last paragraph in the div block is used as the figure caption.\nNote on Images:\nwell the only way I was able to get the images side by side was by the current\nMaking your Rmd fancy: Adding a big image to the front of the page with the title also present is called a hero image\nBookdown books\nhands on data visualization - Jack dougherty - not an R book\n\nall about data viz and commmunicating social sci data effectively\ngeospatial data\nchart.js/ highchart good templates\nalso geospatial is his book On The Line\n\nArea notes: 06037 Los Angeles County,\nCalifornia 06059 Orange County,\nCalifornia 06071 San Bernardino County, California\nOperating warehousing and storage facilities and providing related logistics services–are classified in Industry Group 4931, Warehousing and Storage.\n\n\nCODEBOOK notes\nown_code - 3 = public ownersip\nannual_avg_estabs = Annual average of quarterly establishment counts for a given year\ntotal_annual_wages = Sum of the four quarterly total wage levels for a given year\nannual_contributions = Sum of the four quarterly contribution totals for a given year\nannual_avg_wkly_wage = Avg weekly wage based on 12-monthly employment levels and annual wage levels.\navg_annual_pay = Average annual pay\nlocation quotient: over the year change\n\nCurrent Population Survey\nCPS counts employed people, whereas the QCEW program counts covered.\nQCEW 2024 Q1 data available\nDATA: retrieving by area/county then subsetting by NAICS/inudstry"
  },
  {
    "objectID": "docs/Notes.html#heat-and-occupation-notes",
    "href": "docs/Notes.html#heat-and-occupation-notes",
    "title": "Notes/ Literature Review",
    "section": "heat and occupation NOTES",
    "text": "heat and occupation NOTES\n\nffood &lt;- qcewGetIndustryData(\"2023\", \"a\", \"722513\")\nlac_ff &lt;- ffood %&gt;% \n  rename(fips = area_fips) %&gt;% \n  filter(fips == \"06037\") \n  \ncarwash &lt;- qcewGetIndustryData(\"2023\", \"a\", \"811192\")\nlac_carwash &lt;- carwash %&gt;% \n  rename(fips = area_fips) %&gt;% \n  filter(fips == \"811192\")\n\n\nqcewGetIndustryData &lt;- function (year, qtr, industry) {\n    url &lt;- \"http://data.bls.gov/cew/data/api/YEAR/QTR/industry/INDUSTRY.csv\"\n    url &lt;- sub(\"YEAR\", year, url, ignore.case=FALSE)\n    url &lt;- sub(\"QTR\", tolower(qtr), url, ignore.case=FALSE)\n    url &lt;- sub(\"INDUSTRY\", industry, url, ignore.case=FALSE)\n    read.csv(url, header = TRUE, sep = \",\", quote=\"\\\"\", dec=\".\", na.strings=\" \", skip=0)\n}\n\nran into issues in bind row merge some NA’s that are fine but parse out the rows rthat have 0 taxable qtrly wages etc, no industry value in lac_naics24 – Issue solved!\n\n#str(industries24)\nindustries24 %&gt;% \n  select(-c(fips, naics)) %&gt;% \n  dfSummary(\n    graph.col = TRUE, style = \"grid\", \n    graph.magnif = 0.75\n  ) %&gt;% stview()"
  },
  {
    "objectID": "indextest.html",
    "href": "indextest.html",
    "title": "index_test",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "indextest.html#quarto",
    "href": "indextest.html#quarto",
    "title": "index_test",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "indextest.html#running-code",
    "href": "indextest.html#running-code",
    "title": "index_test",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "Notes.html",
    "href": "Notes.html",
    "title": "Notes/ Literature Review",
    "section": "",
    "text": "Bootswatch project themes: journal, lux, sandstone, slate, solar"
  },
  {
    "objectID": "Notes.html#literature-review",
    "href": "Notes.html#literature-review",
    "title": "Notes/ Literature Review",
    "section": "Literature Review",
    "text": "Literature Review\nCalmatters 4/24 Waiting and sweltering: Why are California’s indoor heat protections for workers five years late?\n\n2005 outdoor heat standard passsed first of its kind in the country, &gt;80 = water+ shade, &lt;95 = additional breaks + monitoring. “a 2021 study [IZA] suggested it has helped to decrease workplace injuries on hot days.” outlining the importance of indoor heat standard and mentioning citations\nIZA institute on the study of labor found that these policies have a significant reduction in workplace injuries (find claim).\nAmazon citation mentioned in article calosha complaints from amazon fulfiment center 2535 e 3rd st san bernardino , subsequent agree/ disagree\n\nJisung park, IZA, Temperature, Workplace Safety, and Labor Market Inequality\n\n“Hotter temperature increases workplace injuries significantly, causing approximately 20,000 injuries per year. The effects persist in both outdoor and indoor settings (e.g. manufacturing, warehousing), and for injury types ostensibly unrelated to temperature (e.g. falling from heights), consistent with cognitive or cost-related channels.” (1)\n\nHauptman. The Health and Safety of Incarcerated Workers: OSHA’s Applicability in the Prison Context\n\n“This article documents how current occupational health and safety regulations and enforcement mechanisms fail to protect incarcerated workers, who are especially vulnerable to both unsafe working condi- tions and arbitrary retaliation” (73)\nprovides history of prison labor, history of OSHA and their enforcment mechanisms, part 3 the term “employee” as applied to prisoners and the consistent prisoner exemption of fed protective legislation\n\nBehrer et al. Heat has larger impacts on labor in poorer areas\n\nalternatively their 1 sentence summary reads “Wealth moderates the negative income effects of heat.” a kind of vice versa, meaning wealth differences/ inequality mitigate the (negative) impact of heat on labor productivity, labor income, and work hours. This suggests those with wealth suffer less income losses, specifically payroll income, due to the ability of wealth to absorb the negative impacts of heat."
  },
  {
    "objectID": "Notes.html#general-tips",
    "href": "Notes.html#general-tips",
    "title": "Notes/ Literature Review",
    "section": "General tips",
    "text": "General tips\nCitations and references workflow\n\nFollow hands on Data Viz’s workflow: Zotero and Better BibTeX for Notes and Biblio\n\nMapping using tigris – mapping chapter in Mastering Software Dev in R\n\nAwesome ability to pull state county & tracts from US census, loaded as a spatial object see walker databookdown on tigris, examples below\nsee further documentation from Walker here - great maps on average income by zip code\nI shoudl create an interactive map such as this title sac.map leaflet with median income chloropleth and the sac metro area shapefile\n\n\n    knitr::opts_chunk$set(eval = FALSE)\n    library(sp)\n    library(ggplot2)\n    denver_tracts &lt;- tracts(state = \"CO\", county = 31, cb = TRUE, \n                            class = \"sf\")\n    plot(denver_tracts)\n\n    ca_county &lt;- counties(\"CA\")\n    plot(ca_county$geometry)\n\n    lac &lt;- tracts(\"CA\", \"los angeles county\")\n    ggplot(lac) +\n      geom_sf() + theme_classic()\n\n\nArticle Layout chapter (quarto) very useful\n\nspecifically columns specifiers\n\nCreating multi-column layouts/ Combining mulitple plots into one\n\npatchwork or cowplot to combine multilpe ggplot2 lots\nCustom css\ngrid arrange may work really well too see google doc notes on image lit review\n\npage layout: qmd documentation is very helpful here.\n\nsee quartoandme page layout article\ndefault qmd is article format, centered at middle for readability (600px - 900px wide) for landing or index pages consider using other layouts. Examples below of divs and column layout\n\nhow to wrap text around a figure github answer here\n\nessentially you can do it in divs and set the div to float and include text in another div that is under it\n\n\nfomrat: \nhtml:\npage-layout: article, full, custom (use the css grid system)\n\nquarto tips and tricks - has a ton of good tips, footnotes, iframe, tabs, etc\nquarto bookdown - quarto documentation\n\nunder HTML theming: once theme is chosen, can customize the theme presets such as font family (serif, georgia etc), base font size, background color, linestretch (distance between lines of text, defaults to 1.5)\n\nrmd bookdown\n{r, echo = FALSE, out.width = “45”} knitr::include_graphics(c(“images/socalcoshlogo.jpg”, “images/uclalosh.png”)) #\nFigure Divs\nYou can treat any markdown content you want as a figure by enclosing it in Pandoc div block with an identifier prefaced with #fig-. For example, here we create a figure that includes an embedded iframe:\n\n\n\n\n\n\n\nFigure 1: Elephant\n\n\n\nNote that the last paragraph in the div block is used as the figure caption.\nNote on Images:\nwell the only way I was able to get the images side by side was by the current\nMaking your Rmd fancy: Adding a big image to the front of the page with the title also present is called a hero image\nBookdown books\nhands on data visualization - Jack dougherty - not an R book\n\nall about data viz and commmunicating social sci data effectively\ngeospatial data\nchart.js/ highchart good templates\nalso geospatial is his book On The Line\n\nArea notes: 06037 Los Angeles County,\nCalifornia 06059 Orange County,\nCalifornia 06071 San Bernardino County, California\nOperating warehousing and storage facilities and providing related logistics services–are classified in Industry Group 4931, Warehousing and Storage.\n\n\nCODEBOOK notes\nown_code - 3 = public ownersip\nannual_avg_estabs = Annual average of quarterly establishment counts for a given year\ntotal_annual_wages = Sum of the four quarterly total wage levels for a given year\nannual_contributions = Sum of the four quarterly contribution totals for a given year\nannual_avg_wkly_wage = Avg weekly wage based on 12-monthly employment levels and annual wage levels.\navg_annual_pay = Average annual pay\nlocation quotient: over the year change\n\nCurrent Population Survey\nCPS counts employed people, whereas the QCEW program counts covered.\nQCEW 2024 Q1 data available\nDATA: retrieving by area/county then subsetting by NAICS/inudstry"
  },
  {
    "objectID": "Notes.html#heat-and-occupation-notes",
    "href": "Notes.html#heat-and-occupation-notes",
    "title": "Notes/ Literature Review",
    "section": "heat and occupation NOTES",
    "text": "heat and occupation NOTES\n\nffood &lt;- qcewGetIndustryData(\"2023\", \"a\", \"722513\")\nlac_ff &lt;- ffood %&gt;% \n  rename(fips = area_fips) %&gt;% \n  filter(fips == \"06037\") \n  \ncarwash &lt;- qcewGetIndustryData(\"2023\", \"a\", \"811192\")\nlac_carwash &lt;- carwash %&gt;% \n  rename(fips = area_fips) %&gt;% \n  filter(fips == \"811192\")\n\n\nqcewGetIndustryData &lt;- function (year, qtr, industry) {\n    url &lt;- \"http://data.bls.gov/cew/data/api/YEAR/QTR/industry/INDUSTRY.csv\"\n    url &lt;- sub(\"YEAR\", year, url, ignore.case=FALSE)\n    url &lt;- sub(\"QTR\", tolower(qtr), url, ignore.case=FALSE)\n    url &lt;- sub(\"INDUSTRY\", industry, url, ignore.case=FALSE)\n    read.csv(url, header = TRUE, sep = \",\", quote=\"\\\"\", dec=\".\", na.strings=\" \", skip=0)\n}\n\nran into issues in bind row merge some NA’s that are fine but parse out the rows rthat have 0 taxable qtrly wages etc, no industry value in lac_naics24 – Issue solved!\n\n#str(industries24)\nindustries24 %&gt;% \n  select(-c(fips, naics)) %&gt;% \n  dfSummary(\n    graph.col = TRUE, style = \"grid\", \n    graph.magnif = 0.75\n  ) %&gt;% stview()"
  },
  {
    "objectID": "heat_and_occupation.html",
    "href": "heat_and_occupation.html",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "Seven California workers died from indoor heat from 2010 to 2017. The real number is believed to be significantly higher, however, it remains consistently under-reported of the lack of recognition of indoor heat as a factor in these cases of death. Many more ED visits can actually be attributed to heat but aren’t reported as an underlying cause of\nLos Angeles County. San Bernardino County. Orange County. A southern California paradise? Or a microcosm of the labor fight?\n\n\n\n\n\n\nCalculating % change great Rpubs article with visuals. If comparing percent change of Q1 24 and Q1 23 then I must download Q1 23 data.\n\nPercentage changeWhen you have data for two points in time, you can calculate how much change there has been during this period. The result is expressed as a percentage (in absolute numbers, it’s just a difference) and is called the rate of change, i.e. the percentage change. It is calculated as follows: [(Number at later time ÷ Number at earlier time) - 1] × 100.\nExample In 2010, there were 4.8 million persons employed in country X and in 2015 there were 5.2 million. The percentage change from 2010 to 2015 is then calculated as follows: [(5.2 ÷ 4.8)-1] x 100= +8.3%\n\nmarijuana NAICS: 459991 Marijuana stores, medical or recreational\nNAICS 812300 - Drycleaning and Laundry Services\nmaintenance workers NAICS: 561720, cleaning offices/ homes, building cleaning services, residential cleaning services\n\ncase_when follows (condition ~ result), evaluates each condition in order, and if it finds the first TRUE condition for a row, it applies the corresponding result. DONE\nNote: What other industries are we interested in viewing employment statistics on?\n\n\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom this figure we can see the lion’s share of employment that is the fast food industry. Los Anegeles County through its sheer size, of course, constitutes a majority of the total count of fast food restaurants. Cutting the fast food industry out of the picture we can zoom in on\n### San Bernardino County\n\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nannual_avg_emplvl\ntotal_annual_wages\nannual_avg_estabs\navg annual pay - done for ff and ware\nannual_avg_wkly_wage - done for ff and ware\nannual_contributions - annual taxable wages what they contirbute to gov programs etc avg_annual_pay\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQCEW 2023\n \n  \n    fips \n    county \n    own_code \n    industry \n    naics \n    year \n    qtr \n    annual_avg_estabs \n    annual_avg_emplvl \n    total_annual_wages \n    taxable_annual_wages \n    annual_contributions \n    annual_avg_wkly_wage \n    avg_annual_pay \n    lq_annual_avg_estabs \n    lq_annual_avg_emplvl \n    lq_total_annual_wages \n    lq_taxable_annual_wages \n    lq_annual_contributions \n    lq_annual_avg_wkly_wage \n    lq_avg_annual_pay \n    oty_annual_avg_estabs_chg \n    oty_annual_avg_estabs_pct_chg \n    oty_annual_avg_emplvl_chg \n    oty_annual_avg_emplvl_pct_chg \n    oty_total_annual_wages_chg \n    oty_total_annual_wages_pct_chg \n    oty_taxable_annual_wages_chg \n    oty_taxable_annual_wages_pct_chg \n    oty_annual_contributions_chg \n    oty_annual_contributions_pct_chg \n    oty_annual_avg_wkly_wage_chg \n    oty_annual_avg_wkly_wage_pct_chg \n    oty_avg_annual_pay_chg \n    oty_avg_annual_pay_pct_chg \n    flag \n    agglvl_code \n    size_code \n    disclosure_code \n    lq_disclosure_code \n    oty_disclosure_code \n  \n \n\n  \n    6037 \n    Los Angeles County \n    5 \n    Apparel Mfg. \n    315 \n    2023 \n    A \n    1519 \n    20083 \n    1175982106 \n    186441384 \n    6048886 \n    1126 \n    58555 \n    5.05 \n    7.79 \n    7.35 \n    8.71 \n    7.39 \n    0.94 \n    0.94 \n    -134 \n    -8.1 \n    -1970 \n    -8.9 \n    -66757642 \n    -5.4 \n    -21052893 \n    -10.1 \n    -745072 \n    -11.0 \n    42 \n    3.9 \n    2203 \n    3.9 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Warehouse & Storage \n    493110 \n    2023 \n    A \n    562 \n    16702 \n    1039628183 \n    155609771 \n    4956405 \n    1197 \n    62247 \n    0.73 \n    0.33 \n    0.36 \n    0.33 \n    0.35 \n    1.10 \n    1.10 \n    52 \n    10.2 \n    -402 \n    -2.4 \n    10029162 \n    1.0 \n    -11639282 \n    -7.0 \n    -441311 \n    -8.2 \n    39 \n    3.4 \n    2052 \n    3.4 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Fast Food \n    722513 \n    2023 \n    A \n    8945 \n    150158 \n    4157504180 \n    1343749547 \n    30071603 \n    532 \n    27688 \n    0.74 \n    1.12 \n    1.23 \n    1.40 \n    1.39 \n    1.10 \n    1.10 \n    208 \n    2.4 \n    5198 \n    3.6 \n    203555912 \n    5.1 \n    5637873 \n    0.4 \n    181198 \n    0.6 \n    7 \n    1.3 \n    412 \n    1.5 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Car Wash \n    811192 \n    2023 \n    A \n    591 \n    6488 \n    206408702 \n    60282294 \n    1398678 \n    612 \n    31815 \n    0.67 \n    1.22 \n    1.11 \n    1.42 \n    1.25 \n    0.92 \n    0.92 \n    1 \n    0.2 \n    -242 \n    -3.6 \n    -799427 \n    -0.4 \n    -2999026 \n    -4.7 \n    -98347 \n    -6.6 \n    20 \n    3.4 \n    1027 \n    3.3 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6059 \n    Orange County \n    5 \n    Apparel Mfg. \n    315 \n    NA \n    A \n    NA \n    3446 \n    252262071 \n    30400384 \n    1213749 \n    1408 \n    73199 \n    NA \n    3.63 \n    4.43 \n    3.63 \n    3.84 \n    1.22 \n    1.22 \n    NA \n    -6.7 \n    -398 \n    -10.4 \n    -17388328 \n    -6.4 \n    -4199977 \n    -12.1 \n    -296883 \n    -19.7 \n    59 \n    4.4 \n    3049 \n    4.3 \n    FALSE \n    75 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Warehouse & Storage \n    493110 \n    NA \n    A \n    NA \n    6485 \n    472134948 \n    66207033 \n    1604594 \n    1400 \n    72799 \n    NA \n    0.35 \n    0.46 \n    0.36 \n    0.30 \n    1.33 \n    1.33 \n    NA \n    20.4 \n    1120 \n    20.9 \n    85293496 \n    22.0 \n    7623517 \n    13.0 \n    312771 \n    24.2 \n    13 \n    0.9 \n    698 \n    1.0 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Fast Food \n    722513 \n    NA \n    A \n    NA \n    56460 \n    1537423101 \n    501326503 \n    10924899 \n    524 \n    27231 \n    NA \n    1.14 \n    1.28 \n    1.33 \n    1.31 \n    1.12 \n    1.12 \n    NA \n    2.1 \n    1592 \n    2.9 \n    93293955 \n    6.5 \n    6508363 \n    1.3 \n    101521 \n    0.9 \n    18 \n    3.6 \n    911 \n    3.5 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Car Wash \n    811192 \n    NA \n    A \n    NA \n    3366 \n    120424069 \n    29754104 \n    668566 \n    688 \n    35773 \n    NA \n    1.71 \n    1.83 \n    1.79 \n    1.55 \n    1.07 \n    1.07 \n    NA \n    4.4 \n    427 \n    14.5 \n    19247428 \n    19.0 \n    3633913 \n    13.9 \n    99970 \n    17.6 \n    26 \n    3.9 \n    1349 \n    3.9 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Apparel Mfg. \n    315 \n    NA \n    A \n    NA \n    138 \n    6560506 \n    1382005 \n    37210 \n    915 \n    47597 \n    NA \n    0.29 \n    0.30 \n    0.36 \n    0.26 \n    1.04 \n    1.04 \n    NA \n    -14.3 \n    6 \n    4.5 \n    1844971 \n    39.1 \n    127061 \n    10.1 \n    6091 \n    19.6 \n    228 \n    33.2 \n    11873 \n    33.2 \n    FALSE \n    75 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Warehouse & Storage \n    493110 \n    NA \n    A \n    NA \n    68859 \n    3690834868 \n    582627908 \n    17900108 \n    1031 \n    53600 \n    NA \n    7.28 \n    9.31 \n    7.02 \n    7.23 \n    1.28 \n    1.28 \n    NA \n    6.7 \n    -6126 \n    -8.2 \n    -17797035 \n    -0.5 \n    -73427574 \n    -11.2 \n    -1163116 \n    -6.1 \n    80 \n    8.4 \n    4142 \n    8.4 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Fast Food \n    722513 \n    NA \n    A \n    NA \n    36021 \n    907302063 \n    314620241 \n    7107865 \n    484 \n    25188 \n    NA \n    1.43 \n    1.94 \n    1.84 \n    1.87 \n    1.35 \n    1.36 \n    NA \n    3.2 \n    1366 \n    3.9 \n    72673083 \n    8.7 \n    -152943 \n    0.0 \n    12747 \n    0.2 \n    21 \n    4.5 \n    1104 \n    4.6 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Car Wash \n    811192 \n    NA \n    A \n    NA \n    1573 \n    44492327 \n    13679736 \n    378023 \n    544 \n    28290 \n    NA \n    1.57 \n    1.73 \n    1.81 \n    1.92 \n    1.10 \n    1.10 \n    NA \n    10.3 \n    27 \n    1.7 \n    1580522 \n    3.7 \n    -247663 \n    -1.8 \n    31891 \n    9.2 \n    10 \n    1.9 \n    539 \n    1.9 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n\n\n\n\n\nNotes on. kable styling: column_spec!!! mtcars[1:8, 1:8] %&gt;% kbl() %&gt;% kable_paper(full_width = F) %&gt;% column_spec(2, color = spec_color(mtcars\\(mpg[1:8]),\n              link = \"https://haozhu233.github.io/kableExtra/\") %&gt;%\n  column_spec(6, color = \"white\",\n              background = spec_color(mtcars\\)drat[1:8], end = 0.7), popover = paste(“am:”, mtcars$am[1:8]))\nWhat about text wrapping? if i want ot align_right how can I write that text? might have to use a function? Currently alright right doesnt work well bcus table is huge\nPlaces API (new): includes nearby search and text search The main difference between the two searches is that Text Search (New) lets you specify an arbitrary search string while Nearby Search (New) requires a specific area in which to search. Places API (not new):\n- A Place Search returns a list of places along with summary information about each place; additional information is available via a Place Details query."
  },
  {
    "objectID": "heat_and_occupation.html#bureau-of-labor-statistics-quarterly-census-on-employment-and-wagesqcew-2023",
    "href": "heat_and_occupation.html#bureau-of-labor-statistics-quarterly-census-on-employment-and-wagesqcew-2023",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "QCEW 2023\n \n  \n    fips \n    county \n    own_code \n    industry \n    naics \n    year \n    qtr \n    annual_avg_estabs \n    annual_avg_emplvl \n    total_annual_wages \n    taxable_annual_wages \n    annual_contributions \n    annual_avg_wkly_wage \n    avg_annual_pay \n    lq_annual_avg_estabs \n    lq_annual_avg_emplvl \n    lq_total_annual_wages \n    lq_taxable_annual_wages \n    lq_annual_contributions \n    lq_annual_avg_wkly_wage \n    lq_avg_annual_pay \n    oty_annual_avg_estabs_chg \n    oty_annual_avg_estabs_pct_chg \n    oty_annual_avg_emplvl_chg \n    oty_annual_avg_emplvl_pct_chg \n    oty_total_annual_wages_chg \n    oty_total_annual_wages_pct_chg \n    oty_taxable_annual_wages_chg \n    oty_taxable_annual_wages_pct_chg \n    oty_annual_contributions_chg \n    oty_annual_contributions_pct_chg \n    oty_annual_avg_wkly_wage_chg \n    oty_annual_avg_wkly_wage_pct_chg \n    oty_avg_annual_pay_chg \n    oty_avg_annual_pay_pct_chg \n    flag \n    agglvl_code \n    size_code \n    disclosure_code \n    lq_disclosure_code \n    oty_disclosure_code \n  \n \n\n  \n    6037 \n    Los Angeles County \n    5 \n    Apparel Mfg. \n    315 \n    2023 \n    A \n    1519 \n    20083 \n    1175982106 \n    186441384 \n    6048886 \n    1126 \n    58555 \n    5.05 \n    7.79 \n    7.35 \n    8.71 \n    7.39 \n    0.94 \n    0.94 \n    -134 \n    -8.1 \n    -1970 \n    -8.9 \n    -66757642 \n    -5.4 \n    -21052893 \n    -10.1 \n    -745072 \n    -11.0 \n    42 \n    3.9 \n    2203 \n    3.9 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Warehouse & Storage \n    493110 \n    2023 \n    A \n    562 \n    16702 \n    1039628183 \n    155609771 \n    4956405 \n    1197 \n    62247 \n    0.73 \n    0.33 \n    0.36 \n    0.33 \n    0.35 \n    1.10 \n    1.10 \n    52 \n    10.2 \n    -402 \n    -2.4 \n    10029162 \n    1.0 \n    -11639282 \n    -7.0 \n    -441311 \n    -8.2 \n    39 \n    3.4 \n    2052 \n    3.4 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Fast Food \n    722513 \n    2023 \n    A \n    8945 \n    150158 \n    4157504180 \n    1343749547 \n    30071603 \n    532 \n    27688 \n    0.74 \n    1.12 \n    1.23 \n    1.40 \n    1.39 \n    1.10 \n    1.10 \n    208 \n    2.4 \n    5198 \n    3.6 \n    203555912 \n    5.1 \n    5637873 \n    0.4 \n    181198 \n    0.6 \n    7 \n    1.3 \n    412 \n    1.5 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6037 \n    Los Angeles County \n    5 \n    Car Wash \n    811192 \n    2023 \n    A \n    591 \n    6488 \n    206408702 \n    60282294 \n    1398678 \n    612 \n    31815 \n    0.67 \n    1.22 \n    1.11 \n    1.42 \n    1.25 \n    0.92 \n    0.92 \n    1 \n    0.2 \n    -242 \n    -3.6 \n    -799427 \n    -0.4 \n    -2999026 \n    -4.7 \n    -98347 \n    -6.6 \n    20 \n    3.4 \n    1027 \n    3.3 \n    FALSE \n    NA \n    NA \n    NA \n    NA \n    NA \n  \n  \n    6059 \n    Orange County \n    5 \n    Apparel Mfg. \n    315 \n    NA \n    A \n    NA \n    3446 \n    252262071 \n    30400384 \n    1213749 \n    1408 \n    73199 \n    NA \n    3.63 \n    4.43 \n    3.63 \n    3.84 \n    1.22 \n    1.22 \n    NA \n    -6.7 \n    -398 \n    -10.4 \n    -17388328 \n    -6.4 \n    -4199977 \n    -12.1 \n    -296883 \n    -19.7 \n    59 \n    4.4 \n    3049 \n    4.3 \n    FALSE \n    75 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Warehouse & Storage \n    493110 \n    NA \n    A \n    NA \n    6485 \n    472134948 \n    66207033 \n    1604594 \n    1400 \n    72799 \n    NA \n    0.35 \n    0.46 \n    0.36 \n    0.30 \n    1.33 \n    1.33 \n    NA \n    20.4 \n    1120 \n    20.9 \n    85293496 \n    22.0 \n    7623517 \n    13.0 \n    312771 \n    24.2 \n    13 \n    0.9 \n    698 \n    1.0 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Fast Food \n    722513 \n    NA \n    A \n    NA \n    56460 \n    1537423101 \n    501326503 \n    10924899 \n    524 \n    27231 \n    NA \n    1.14 \n    1.28 \n    1.33 \n    1.31 \n    1.12 \n    1.12 \n    NA \n    2.1 \n    1592 \n    2.9 \n    93293955 \n    6.5 \n    6508363 \n    1.3 \n    101521 \n    0.9 \n    18 \n    3.6 \n    911 \n    3.5 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6059 \n    Orange County \n    5 \n    Car Wash \n    811192 \n    NA \n    A \n    NA \n    3366 \n    120424069 \n    29754104 \n    668566 \n    688 \n    35773 \n    NA \n    1.71 \n    1.83 \n    1.79 \n    1.55 \n    1.07 \n    1.07 \n    NA \n    4.4 \n    427 \n    14.5 \n    19247428 \n    19.0 \n    3633913 \n    13.9 \n    99970 \n    17.6 \n    26 \n    3.9 \n    1349 \n    3.9 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Apparel Mfg. \n    315 \n    NA \n    A \n    NA \n    138 \n    6560506 \n    1382005 \n    37210 \n    915 \n    47597 \n    NA \n    0.29 \n    0.30 \n    0.36 \n    0.26 \n    1.04 \n    1.04 \n    NA \n    -14.3 \n    6 \n    4.5 \n    1844971 \n    39.1 \n    127061 \n    10.1 \n    6091 \n    19.6 \n    228 \n    33.2 \n    11873 \n    33.2 \n    FALSE \n    75 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Warehouse & Storage \n    493110 \n    NA \n    A \n    NA \n    68859 \n    3690834868 \n    582627908 \n    17900108 \n    1031 \n    53600 \n    NA \n    7.28 \n    9.31 \n    7.02 \n    7.23 \n    1.28 \n    1.28 \n    NA \n    6.7 \n    -6126 \n    -8.2 \n    -17797035 \n    -0.5 \n    -73427574 \n    -11.2 \n    -1163116 \n    -6.1 \n    80 \n    8.4 \n    4142 \n    8.4 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Fast Food \n    722513 \n    NA \n    A \n    NA \n    36021 \n    907302063 \n    314620241 \n    7107865 \n    484 \n    25188 \n    NA \n    1.43 \n    1.94 \n    1.84 \n    1.87 \n    1.35 \n    1.36 \n    NA \n    3.2 \n    1366 \n    3.9 \n    72673083 \n    8.7 \n    -152943 \n    0.0 \n    12747 \n    0.2 \n    21 \n    4.5 \n    1104 \n    4.6 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n  \n    6071 \n    San Bernardino County \n    5 \n    Car Wash \n    811192 \n    NA \n    A \n    NA \n    1573 \n    44492327 \n    13679736 \n    378023 \n    544 \n    28290 \n    NA \n    1.57 \n    1.73 \n    1.81 \n    1.92 \n    1.10 \n    1.10 \n    NA \n    10.3 \n    27 \n    1.7 \n    1580522 \n    3.7 \n    -247663 \n    -1.8 \n    31891 \n    9.2 \n    10 \n    1.9 \n    539 \n    1.9 \n    FALSE \n    78 \n    0 \n     \n     \n     \n  \n\n\n\n\n\nNotes on. kable styling: column_spec!!! mtcars[1:8, 1:8] %&gt;% kbl() %&gt;% kable_paper(full_width = F) %&gt;% column_spec(2, color = spec_color(mtcars\\(mpg[1:8]),\n              link = \"https://haozhu233.github.io/kableExtra/\") %&gt;%\n  column_spec(6, color = \"white\",\n              background = spec_color(mtcars\\)drat[1:8], end = 0.7), popover = paste(“am:”, mtcars$am[1:8]))\nWhat about text wrapping? if i want ot align_right how can I write that text? might have to use a function? Currently alright right doesnt work well bcus table is huge\nPlaces API (new): includes nearby search and text search The main difference between the two searches is that Text Search (New) lets you specify an arbitrary search string while Nearby Search (New) requires a specific area in which to search. Places API (not new):\n- A Place Search returns a list of places along with summary information about each place; additional information is available via a Place Details query."
  },
  {
    "objectID": "docs/indextest.html",
    "href": "docs/indextest.html",
    "title": "index_test",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "docs/indextest.html#quarto",
    "href": "docs/indextest.html#quarto",
    "title": "index_test",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "docs/indextest.html#running-code",
    "href": "docs/indextest.html#running-code",
    "title": "index_test",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "docs/index.html",
    "href": "docs/index.html",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "This research project is carried out in collaboration between UCLA’s Labor Occupational Safety and Health (LOSH) program and the Southern California Coalition for Occupational Safety & Health (SoCalCOSH). This project seeks to uncover the realities and impacts of indoor heat on workers in Southern California using a mixed-methods approach. Through worker interviews paired with data analysis, we analyze the current landscape of implementation and enforcement of the indoor heat standard, position worker voices front and center in research, and provide original analyses of labor and federal OSHA data.\n\n\nWith the onset of climate change, the planet continues to grow hotter and hotter. Heat impacts all facets of life, especially one’s working conditions. While some of the impacts of climate change may be irreversible, there are policies in place to curb the impact of heat, particularly in the workplace. California’s Title 8 regulation, more commonly known as the Indoor Heat Standard, protects all indoor workers, regardless of occupation, from indoor heat exceeding 82° and/ or 87°. The term indoor worker at first presents as vague but this is intentional, as the policy hopes to encompass a broad range of workers in a broad range of industries.\nVarious industries like warehousing, janitorial, fast food, laundry workers, steel workers, and food processing workers (to name a few) have been majorly impacted by indoor heat on the job. In other words, these are some of the industries that can benefit the most from the indoor heat standard’s protections.\nSouthern California residents are familiar with the dangers of being out in the heat. We avoid it. We seek shade. We see construction workers and gardeners working in the heat and we feel for them. Alongside many local governments and organizations, the state of California recognizes the impacts of outdoor heat, going as far as codifying labor standards in 2006 that protect outdoor employees, like agriculture and construction workers. Of course, the 2006 Maria Isabel Vasquez Jimenez outdoor heat illness standard was only passed after many lives were lost to outdoor heat. While the impacts of outdoor heat are well documented, what about the impacts of indoor heat?\n\n\n\n\n\n\n\nTaco Bell Worker, Credit: Unknown.\n\n\nIt is a warm Sunday in Anaheim, CA and people are looking for an affordable and fast meal. Why not Taco Bell? Jeanpaul, a shift lead at an Anaheim Taco Bell, finds himself fulfilling orders with his four person crew that is already short-staffed for the day. Work grows busier, which is typical– this Taco Bell crew sells upwards of $12,000- $18,000 of food daily. At an average of $15,000 in sales a day, the crew find themselves preparing and selling around $2,143 worth of food per hour. Orders are flooding in, and with a central air conditioning that has been broken for a year and six months, the kitchen heats up quickly. Amidst the rush, Jeanpaul’s co-worker calls him over.\n\n“I ask ‘what happened?’ … She’s pale. She stood against the wall and POOM. She fell. But when she fell I grabbed her and I didn’t care about anything anymore … Life comes first before work for me.” \n…\n“Honestly it was suffocating that day, my head even hurt. I felt like I was going to faint, but I got out. I couldn’t take it anymore. I said no, I’m not going to be here, but there are a lot of people who did [stay]. They were 49/50 years old, so it hits them harder. But you do feel suffocated. You do feel bad. You don’t feel comfortable working anymore.”\n\n\n\n\nIn the sweltering kitchen heat, Jeanpaul’s co-worker fainted in front of him. Jeanpaul himself had a headache. That same kitchen reached temperatures of 104° on certain days, a fact only known because a worker carried a small thermometer displaying the temperature. Evidently, there were no practices in place informing employees of workplace temperatures, which would enable them to take necessary precautions, such as breaks and hydrating, to prevent heat related emergencies. Additionally, the employer had not communicated any clear emergency procedures that would prepare the Taco Bell crew to handle serious health incidents, such as fainting from heat stress.\nThe fast food industry is notorious for being a poverty employer, that is, it employs a larger share of people in poverty than any other industry. Daniel Flaming outlines …. STAT. Fast food employment does not provide a living wage and further exposes workers to extreme, unsafe temperatures​​. In fact, Figure X belows shows how fast food workers in Los Angeles, orange, and San Bernardino county are earning average weekly wage of $532, $524, $484, respectively. With an average annual salary of just\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\nStill navigating the situation, Jeanpaul calls his manager for help but she refuses to believe in the gravity of the situation. Instead she insists que se hasta haciendo. She is faking it, the manager insists. The manager goes as far as saying Jeanpaul cannot take her to the hospital (as he hoped to) and he can only leave Taco Bell if the bathroom or plumbing is broken. After the incident, neither a supervisor nor a manager decided to show up that day. On Monday, the following day, Jeanpaul receives a call that he is being given a formal warning for five minutes of overtime that he worked but he suspects the meeting’s real purpose is to fire him. Reflecting on this he says:\n\n“But when the heat [incident] happened, it was like we said, ‘Right now. This week we have to go on strike.’ Their plan was to fire me, and I told them [SEIU XXX], ‘Aye, they’re going to fire me on Tuesday. Speed ​​up the strike because they’re going to fire me on Tuesday.’”\n\nCiting wage theft, psychological mistreatment, discrimination toward older workers, and the fainting incident as the final straw, these workers saw strength in numbers, walking out in protest of both unjust working conditions and extreme indoor temperatures. They have since filed a formal Cal/OSHA complaint. Empowered by collective action, they remain steadfast in their commitment to demand dignified workplaces. \n\n\n\n\n\n\n\n\nFigure 2\n\n\n\nThis kitchen’s 104° temperature indicates the ambient temperature at that moment, however, the heat stress one feels at any given moment is influenced by both ambient temperature and humidity. With a temperature of a 104* and a humidity level of 14%, the Taco Bell kitchen felt more like 100° instead of 104° due to the low humidity levels. However, apart from being uncomfortable working in 100° weather for a prolonged time can lead to possible sunstroke, heat cramps, or heat exhaustion, among several other health impacts. These thresholds are in the image above. \nIndoor heat is a silent killer. When the body is no longer able to cool itself under extreme temperatures, one can experience a plethora of health issues including dizziness, headaches, nosebleeds, heat exhaustion, and heat stroke. Under extreme heat the body will work harder to cool itself down, stressing the heart and kidneys which can in turn exacerbate underlying chronic illnesses such as cardiovascular, mental, respiratory and diabetes related conditions (WHO 2024). In other words, extreme heat disproportionately impacts the elderly or those with underlying health conditions. These impacts are further exacerbated when one has to work a long, strenuous work shift under extreme temperatures. \nHeat remains widely misunderstood, making it challenging to address its full impacts. Below is an overview of the dominant understandings of heat, new understandings of the heat index, and a straightforward explanation of how workers can interpret temperatures and heat stress.\nThe dominant understanding of heat revolves around the National Weather Service’s heat index developed by R.G. Steadman (1979) that combines ambient temperature (wet bulb temperature) and relative humidity to produce a reading of what the temperature really feels for the human body. By extension, this measure captures the heat stress a body may feel at any given temperature. While the heat index has successfully captured what temperatures really feel like, climate change has flipped this index on its head. Specifically, with the increase of extreme temperatures and humidity due to climate change, we are seeing the inability of the index to accurately capture what temperatures feel like on some of the hottest heat waves.\n\n\n\n\n\n\n\nFigure 3: Lu & Romps demonstrate that the current heat index underestimates values the most at high humidity + high temperatures.\n\n\nGenerally, Steadman’s model captures the heat index successfully for most weather conditions, however, the researchers point to the fact that for relative humidity levels at 80%, the heat index never defined values for temperatures below 59° or above 88° (Lu & Romps, 2022). For reference, average humidity levels in Los Angeleswere around  62% from 2018 - 2022 but can range from 47% to 74% throughout the day. Already in 2024, Southern California has seen several summer heat waves with temperatures above 90° and even 100°. . To update the heat index to the ongoing extreme weather episodes experienced today, the researchers provide an updated heat index calculator as well as a corrected NWS chart as seen in the figure below.  \n\n\n\n\n\n\nFigure 4\n\n\n\nIn their 2024 study, Romps and Lu collected original weather data from Texas during the summer months, further highlighting combined effects of rising temperatures and humidity on human physiological stress. Their findings show that climate change has raised the heat index in Texas by an average of 8–11°F during June through August. Consequently, the current heat index is underestimating these values.\n\nThis dangerous mix of high humidity and extreme heat significantly increases health risks, especially for workers, elderly people, and those with pre-existing conditions. While outdoor workers, such as those in construction, are known to be vulnerable to heat-related incidents, indoor workplaces can also become treacherous. Without adequate cooling, indoor workplaces can trap heat, creating conditions that, while less visible, are equally threatening. Specifically, indoor workplaces without proper ventilation, such as air conditioning, lack the presence of wind that normally functions as a cooling agent in outdoor heat. This can lead to dangerous combinations of high temperature and high humidity, precisely the conditions in which heat stress is much higher than what the current heat index reports. \n\n\n\nHigher humidity reduces the body’s ability to cool itself through sweating, leading to increased heat stress. This poses significant health risks, as the body is pushed closer to physiological limits where hyperthermia (dangerous overheating) can occur. As humidity and temperatures rise, so does the risk of heat-related illnesses. Findings suggest that even small increases in temperature can drastically increase the body’s stress under high humidity, leading to conditions like heat stroke.\n\n\n\n\n\n\n\n\n\n\n\nSan Bernardino Amazon Fulfillment Center, Cyber Monday 2016. Credit: Ferazzi/ LA Times\n\n\nSouthern California’s logistics and warehouse industry is a vital hub for goods movement, employing over XXXXX workers across the region. Warehouse and logistics workers form the backbone of the Southern California logistics hub (and the U.S. supply chain), but workers face a plethora of occupational and health challenges due to sprawling warehouse with limited ventilation and intense workloads. Many warehouses lack effective cooling systems, leading to indoor temperatures that can reach triple digits hot days. As a result, workers report facing health risks, often with minimal protections in place to mitigate the effects of prolonged heat exposure.\nVictor is currently employed at a large facility in Fontana that sorts wholesale goods for major retail stores like Sam’s Club and Costco. He describes the immense warehouse where 200-300 people are on the clock at one time, a sight all too common in the Inland Empire region. He’s up at 4 am for his morning shift, but even in the early hours, the impacts of the warehousing & logistics industry in the region are palpable to him.\n\n“There is a lot of traffic, all the containers. So many containers bring a lot of traffic. In the warehouses, everywhere, from very early. when I go in at 4 in the morning the freeway is already full.”\n\nWell for victor connecting this is easy, he’s worked in the warehouse industry for over 20 years. In his own words “I lived it,” insert quote here.\n\n\n\nHomes and a giant warehouse complex in the Rancho Cucamonga and Fontana area. Photo by David McNew/The New York Times\n\n\nIn Riverside, systemic impacts like extreme heat, climate change, and inequality converge, amplifying the hardships faced by workers. Victor sees firsthand how these forces intertwine, impacting his neighborhood with rising temperatures (indoor and outdoor), pollution, traffic congestion, and frequent wildfires.\n\n“But the heat is increasing. As more traffic passes by, instead of seeing more green areas we see more warehouses and warehouses, all of this heats up the environment more and especially when it is hot there are more fires. The climate gets worse, the air, everything is contaminated, everything like that.”\n\n\n\n\n\n……\n\n\n\nWorker outreach as part of California’s Workplace Outreach Project (CWOP)\n\n\n…."
  },
  {
    "objectID": "docs/index.html#why-indoor-heat",
    "href": "docs/index.html#why-indoor-heat",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "With the onset of climate change, the planet continues to grow hotter and hotter. Heat impacts all facets of life, especially one’s working conditions. While some of the impacts of climate change may be irreversible, there are policies in place to curb the impact of heat, particularly in the workplace. California’s Title 8 regulation, more commonly known as the Indoor Heat Standard, protects all indoor workers, regardless of occupation, from indoor heat exceeding 82° and/ or 87°. The term indoor worker at first presents as vague but this is intentional, as the policy hopes to encompass a broad range of workers in a broad range of industries.\nVarious industries like warehousing, janitorial, fast food, laundry workers, steel workers, and food processing workers (to name a few) have been majorly impacted by indoor heat on the job. In other words, these are some of the industries that can benefit the most from the indoor heat standard’s protections.\nSouthern California residents are familiar with the dangers of being out in the heat. We avoid it. We seek shade. We see construction workers and gardeners working in the heat and we feel for them. Alongside many local governments and organizations, the state of California recognizes the impacts of outdoor heat, going as far as codifying labor standards in 2006 that protect outdoor employees, like agriculture and construction workers. Of course, the 2006 Maria Isabel Vasquez Jimenez outdoor heat illness standard was only passed after many lives were lost to outdoor heat. While the impacts of outdoor heat are well documented, what about the impacts of indoor heat?\n\n\n\n\n\n\n\nTaco Bell Worker, Credit: Unknown.\n\n\nIt is a warm Sunday in Anaheim, CA and people are looking for an affordable and fast meal. Why not Taco Bell? Jeanpaul, a shift lead at an Anaheim Taco Bell, finds himself fulfilling orders with his four person crew that is already short-staffed for the day. Work grows busier, which is typical– this Taco Bell crew sells upwards of $12,000- $18,000 of food daily. At an average of $15,000 in sales a day, the crew find themselves preparing and selling around $2,143 worth of food per hour. Orders are flooding in, and with a central air conditioning that has been broken for a year and six months, the kitchen heats up quickly. Amidst the rush, Jeanpaul’s co-worker calls him over.\n\n“I ask ‘what happened?’ … She’s pale. She stood against the wall and POOM. She fell. But when she fell I grabbed her and I didn’t care about anything anymore … Life comes first before work for me.” \n…\n“Honestly it was suffocating that day, my head even hurt. I felt like I was going to faint, but I got out. I couldn’t take it anymore. I said no, I’m not going to be here, but there are a lot of people who did [stay]. They were 49/50 years old, so it hits them harder. But you do feel suffocated. You do feel bad. You don’t feel comfortable working anymore.”\n\n\n\n\nIn the sweltering kitchen heat, Jeanpaul’s co-worker fainted in front of him. Jeanpaul himself had a headache. That same kitchen reached temperatures of 104° on certain days, a fact only known because a worker carried a small thermometer displaying the temperature. Evidently, there were no practices in place informing employees of workplace temperatures, which would enable them to take necessary precautions, such as breaks and hydrating, to prevent heat related emergencies. Additionally, the employer had not communicated any clear emergency procedures that would prepare the Taco Bell crew to handle serious health incidents, such as fainting from heat stress.\nThe fast food industry is notorious for being a poverty employer, that is, it employs a larger share of people in poverty than any other industry. Daniel Flaming outlines …. STAT. Fast food employment does not provide a living wage and further exposes workers to extreme, unsafe temperatures​​. In fact, Figure X belows shows how fast food workers in Los Angeles, orange, and San Bernardino county are earning average weekly wage of $532, $524, $484, respectively. With an average annual salary of just\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\nStill navigating the situation, Jeanpaul calls his manager for help but she refuses to believe in the gravity of the situation. Instead she insists que se hasta haciendo. She is faking it, the manager insists. The manager goes as far as saying Jeanpaul cannot take her to the hospital (as he hoped to) and he can only leave Taco Bell if the bathroom or plumbing is broken. After the incident, neither a supervisor nor a manager decided to show up that day. On Monday, the following day, Jeanpaul receives a call that he is being given a formal warning for five minutes of overtime that he worked but he suspects the meeting’s real purpose is to fire him. Reflecting on this he says:\n\n“But when the heat [incident] happened, it was like we said, ‘Right now. This week we have to go on strike.’ Their plan was to fire me, and I told them [SEIU XXX], ‘Aye, they’re going to fire me on Tuesday. Speed ​​up the strike because they’re going to fire me on Tuesday.’”\n\nCiting wage theft, psychological mistreatment, discrimination toward older workers, and the fainting incident as the final straw, these workers saw strength in numbers, walking out in protest of both unjust working conditions and extreme indoor temperatures. They have since filed a formal Cal/OSHA complaint. Empowered by collective action, they remain steadfast in their commitment to demand dignified workplaces. \n\n\n\n\n\n\n\n\nFigure 2\n\n\n\nThis kitchen’s 104° temperature indicates the ambient temperature at that moment, however, the heat stress one feels at any given moment is influenced by both ambient temperature and humidity. With a temperature of a 104* and a humidity level of 14%, the Taco Bell kitchen felt more like 100° instead of 104° due to the low humidity levels. However, apart from being uncomfortable working in 100° weather for a prolonged time can lead to possible sunstroke, heat cramps, or heat exhaustion, among several other health impacts. These thresholds are in the image above. \nIndoor heat is a silent killer. When the body is no longer able to cool itself under extreme temperatures, one can experience a plethora of health issues including dizziness, headaches, nosebleeds, heat exhaustion, and heat stroke. Under extreme heat the body will work harder to cool itself down, stressing the heart and kidneys which can in turn exacerbate underlying chronic illnesses such as cardiovascular, mental, respiratory and diabetes related conditions (WHO 2024). In other words, extreme heat disproportionately impacts the elderly or those with underlying health conditions. These impacts are further exacerbated when one has to work a long, strenuous work shift under extreme temperatures. \nHeat remains widely misunderstood, making it challenging to address its full impacts. Below is an overview of the dominant understandings of heat, new understandings of the heat index, and a straightforward explanation of how workers can interpret temperatures and heat stress.\nThe dominant understanding of heat revolves around the National Weather Service’s heat index developed by R.G. Steadman (1979) that combines ambient temperature (wet bulb temperature) and relative humidity to produce a reading of what the temperature really feels for the human body. By extension, this measure captures the heat stress a body may feel at any given temperature. While the heat index has successfully captured what temperatures really feel like, climate change has flipped this index on its head. Specifically, with the increase of extreme temperatures and humidity due to climate change, we are seeing the inability of the index to accurately capture what temperatures feel like on some of the hottest heat waves.\n\n\n\n\n\n\n\nFigure 3: Lu & Romps demonstrate that the current heat index underestimates values the most at high humidity + high temperatures.\n\n\nGenerally, Steadman’s model captures the heat index successfully for most weather conditions, however, the researchers point to the fact that for relative humidity levels at 80%, the heat index never defined values for temperatures below 59° or above 88° (Lu & Romps, 2022). For reference, average humidity levels in Los Angeleswere around  62% from 2018 - 2022 but can range from 47% to 74% throughout the day. Already in 2024, Southern California has seen several summer heat waves with temperatures above 90° and even 100°. . To update the heat index to the ongoing extreme weather episodes experienced today, the researchers provide an updated heat index calculator as well as a corrected NWS chart as seen in the figure below.  \n\n\n\n\n\n\nFigure 4\n\n\n\nIn their 2024 study, Romps and Lu collected original weather data from Texas during the summer months, further highlighting combined effects of rising temperatures and humidity on human physiological stress. Their findings show that climate change has raised the heat index in Texas by an average of 8–11°F during June through August. Consequently, the current heat index is underestimating these values.\n\nThis dangerous mix of high humidity and extreme heat significantly increases health risks, especially for workers, elderly people, and those with pre-existing conditions. While outdoor workers, such as those in construction, are known to be vulnerable to heat-related incidents, indoor workplaces can also become treacherous. Without adequate cooling, indoor workplaces can trap heat, creating conditions that, while less visible, are equally threatening. Specifically, indoor workplaces without proper ventilation, such as air conditioning, lack the presence of wind that normally functions as a cooling agent in outdoor heat. This can lead to dangerous combinations of high temperature and high humidity, precisely the conditions in which heat stress is much higher than what the current heat index reports. \n\n\n\nHigher humidity reduces the body’s ability to cool itself through sweating, leading to increased heat stress. This poses significant health risks, as the body is pushed closer to physiological limits where hyperthermia (dangerous overheating) can occur. As humidity and temperatures rise, so does the risk of heat-related illnesses. Findings suggest that even small increases in temperature can drastically increase the body’s stress under high humidity, leading to conditions like heat stroke.\n\n\n\n\n\n\n\n\n\n\n\nSan Bernardino Amazon Fulfillment Center, Cyber Monday 2016. Credit: Ferazzi/ LA Times\n\n\nSouthern California’s logistics and warehouse industry is a vital hub for goods movement, employing over XXXXX workers across the region. Warehouse and logistics workers form the backbone of the Southern California logistics hub (and the U.S. supply chain), but workers face a plethora of occupational and health challenges due to sprawling warehouse with limited ventilation and intense workloads. Many warehouses lack effective cooling systems, leading to indoor temperatures that can reach triple digits hot days. As a result, workers report facing health risks, often with minimal protections in place to mitigate the effects of prolonged heat exposure.\nVictor is currently employed at a large facility in Fontana that sorts wholesale goods for major retail stores like Sam’s Club and Costco. He describes the immense warehouse where 200-300 people are on the clock at one time, a sight all too common in the Inland Empire region. He’s up at 4 am for his morning shift, but even in the early hours, the impacts of the warehousing & logistics industry in the region are palpable to him.\n\n“There is a lot of traffic, all the containers. So many containers bring a lot of traffic. In the warehouses, everywhere, from very early. when I go in at 4 in the morning the freeway is already full.”\n\nWell for victor connecting this is easy, he’s worked in the warehouse industry for over 20 years. In his own words “I lived it,” insert quote here.\n\n\n\nHomes and a giant warehouse complex in the Rancho Cucamonga and Fontana area. Photo by David McNew/The New York Times\n\n\nIn Riverside, systemic impacts like extreme heat, climate change, and inequality converge, amplifying the hardships faced by workers. Victor sees firsthand how these forces intertwine, impacting his neighborhood with rising temperatures (indoor and outdoor), pollution, traffic congestion, and frequent wildfires.\n\n“But the heat is increasing. As more traffic passes by, instead of seeing more green areas we see more warehouses and warehouses, all of this heats up the environment more and especially when it is hot there are more fires. The climate gets worse, the air, everything is contaminated, everything like that.”"
  },
  {
    "objectID": "docs/index.html#worker-struggles-persistence-and-advocacy",
    "href": "docs/index.html#worker-struggles-persistence-and-advocacy",
    "title": "Indoor Heat and Occupation",
    "section": "",
    "text": "……\n\n\n\nWorker outreach as part of California’s Workplace Outreach Project (CWOP)\n\n\n…."
  },
  {
    "objectID": "docs/methods.html",
    "href": "docs/methods.html",
    "title": "Data & Methods",
    "section": "",
    "text": "This research project uses a mixed-methods approach combining qualitative interviews and first hand accounts with a quantitative analysis of employment and OSHA data."
  },
  {
    "objectID": "docs/methods.html#qualitative",
    "href": "docs/methods.html#qualitative",
    "title": "Data & Methods",
    "section": "Qualitative",
    "text": "Qualitative\n\nI. Interviews & Testimonies\nImplementation and enforcement of the indoor heat standard remains an ongoing process and understanding workers perceptions’ of the standard throughout this process is an important question. Are workers aware of this heat standard? What do workers think about the process of implementation? Questions such as these are important to answer, hence, seven semi-structured interviews were carried out with workers from five different industries, namely warehousing & logistics, fast food & kitchen, cannabis, maintenance, and service (cafes). Furthermore, interviews with workers impacted by indoor heat allows Community Based Organizations (CBO’s), decision makers, and other interested parties to hear and receive necessary feedback for more effective implementation and/ or enforcement.\nInterviews were carried out via video-call and in person over the span of a month. Many were set up by way of pre-existing relationships between CBO’s and the primary partner organization, Southern California Coalition for Occupational Safety and Health (SoCalCOSH).\n\nValidity and reliability \nInterviews are an important part of gathering qualitative data and, outside of informally chatting with workers, were the only formal qualitative method use in this project. While interviews provide direct data about worker perceptions and opinions one cannot generalize interview findings to all workers in a particular industry. The views of workers are representative of their own. While often times qualitative methodologies are criticized for lacking generalizability, qualitative scholars highlight the misunderstanding that methods, such as qualitative interviews, lack any ability to extend generalizations(Smith 2018). Applying assumptions or findings to a broader audience is still possible, but not in the same way as quantitative results are typically generalized. Provide example!! and write more on validity\nThis set of qualitative interviews was intended to gather perspectives directly from workers over an attempt to vaguely understand the impact of the indoor heat standard through unfounded policy assumptions. As a result, the project carried out a relatively straightforward, reproducible interview recruitment process. As previously mentioned, workers were recruited by way of contacting pre-existing connections with employees working inside various CBO’s throughout Los Angeles and the Inland Empire. Scheduling and interviews with workers typically occurred after being put in contact with them directly through an organizer representing their respective community based organization. In X/7 cases the community or regional organizer connected me directly with the organizer. This points to the crucial link that community and/ or regional organizers represent in connecting working class people to not only their respective community based organization but also to other institutional bodies and resources, such as, UCLA’s Labor and Occupational Safety (LOSH) Program. Include image of the network at play here.\n\n\nData sources\nThe recruitment process, while relatively straightforward, presents its own set of methodological questions. Namely what do the recruited interview subjects represent in the broader pool of potential interview subjects? Can one classify the recruited worker as an ‘average worker’? Are their views representative of the ’average worker’ ? Depending on who is being asked, the answer to these questions vary. For the purpose of this study workers have been classified into three categories: an active advocate/ organizer, newly involved worker, and a non-involved worker.\n\n\nBias\nMost interview participants fall into the active advocate and newly involved worker category. It would be remiss to not discuss the potential bias this may represent in the study and interview conclusions. Specifically, some interview findings represent a particular perspective of workers who have been involved in labor advocacy and/ or organizing for years. From the interview findings these workers are more involved, analyze socio-economic systems critically, and encourage advocacy and activism. For example, one warehouse worker from Pomona, CA has been involved to varying capacities with a warehouse worker labor center for 10 years. The interview responses of this worker confirm that their perspective is noticeably different than that of a recent warehouse worker.\nDespite some of the bias present in the interview design the approach is justified when working with labor for the sake of building trust. Furthermore, in some cases the list of questions were not provided as a means of gauging whether or not this would really impact interview responses. While this is not a fool-proof method of comprehensively gauging bias, it provided sufficient evidence to the research team that the impact was negligible and worth the trade off in building trust while also increasing potential bias.\n\n\nInterview protocol\nUpong scheduling interviews with workers a verbal consent form and list of prospective questions were presented. The verbal consent form outlines expectations and guidelines from the interviewer and interviewee, such as, the option to: remain anonymous, refuse any question, and to end the interview at any point. Both are included in the appendix.\nProviding a list of questions prior to the interview may influence the response of participants which in turn may impact the overall bias of inferences. However, questions were provided in order to strengthen the trust and relationship between researcher and interviewee. Building trust between these two groups was crucial because when researching and interviewing labor, participants will have hesitations, doubts, or concerns that involving in this project may put their employment at risk. Apart from being common knowledge in organizing and occupational safety and health circles, scholars overwhelmingly recognize that fears of workplace retaliation present a major obstacle to any sort of labor advocacy and organizing(Hurd 1998; Murphy, n.d.)."
  },
  {
    "objectID": "docs/methods.html#quantitative",
    "href": "docs/methods.html#quantitative",
    "title": "Data & Methods",
    "section": "Quantitative",
    "text": "Quantitative\n\nII. Data Analysis\nThe purpose of analyzing employment and location data is to uncover and advocate for working class realities. Workers on the ground are well aware of the lack of a living wage, the insufficient blank, and blank.\n\nData sources\nAll of the data used was gathered from publicly available"
  },
  {
    "objectID": "docs/resources.html#what-is-the-new-indoor-heat-standard",
    "href": "docs/resources.html#what-is-the-new-indoor-heat-standard",
    "title": "Resources",
    "section": "What is the new Indoor Heat Standard?",
    "text": "What is the new Indoor Heat Standard?\n\n\n\n\nOverview of your rights under California’s Indoor Heat Standard\n\n\n\n\n\n\nWater:\nWorkers have a right to access fresh, cool, and potable drinking water. Water must be as close as possible to work and cool down areas.\nLowering workplace temperature:\nA boss/ supervisor must cool down the work area, such as using A/C, under hot temperatures. If that is not enough, bosses must “limit the amount of time spent working in hot areas.” If that is still not enough a boss must provide “heat-protective clothing.”\nWorkers have a right to these protections when:\n\nTemperatures are above 87°\nTemperatures are above 82° and workers wear clothing that restricts your ability to cool down\nTemperatures are above 82° and employees work near an object that makes the room hotter.\n\n\n\nRest:\nWorkers have a right to take a preventative cool-down break when they feel the need to do so to protect themselves from overheating. You cannot be discouraged to take this break.\nTraining:\nWorkers have a right to heat trainings to understand heat illness and symptoms, risk factors, water consumption, and emergency response actions. Supervisors must be trained in the same subjects.\n\n\nCool Down Areas:\nWorkers have the right to access a cool-down area that is kept at 82° or lower whenever needed.\nHeat Illness Prevention Plan:\nA boss must maintain a heat illness prevention plan in English and the language understood by the majority of the workers.\n\n\n\n\n\nThis explanation of the indoor heat standard comes directly from CALOSHA’s heat resource website 99Calor found here.\n\nWhen does your boss need to do something about high temperatures? At 87°F or 82°F!\nThe chart below describes when an employer must take action to lower workplace temperatures that hit 87°F or 82°F if you are wearing “heat restrictive clothing” or working near a “high radiant heat source.” These terms are defined below.\n\n\n\n\n\n\n\n\n%%{init: {\"flowchart\": {\"htmlLabels\": false}} }%%\nflowchart LR\n    A[\"`At Work`\"] --&gt; B1[\"`Temp hits 82F while\n    wearing 'heat restrictive clothing'`\"]\n    A --&gt; B2[\"`Temp hits 87F`\"]\n    A --&gt; B3[\"`Temp hits 82F while working \n    near 'radiant heat source'`\"]\n    B1 --&gt; C[\"`Use Engineering \n    Controls: A/C, mist fans, acclimate, isolate\n    heat source, etc.`\"]\n    B2 --&gt; C\n    B3 --&gt; C\n    C --&gt;|If still too hot|D[\"`Use Administrative\n    Controls: Lower work intensity, rotate work in\n    hot areas, natural ventilation, etc.`\" ] \n    D --&gt; |If still too hot| E[\"`Boss must provide\n    'personal heat-protective equipment'`\"]\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n“Heat restrictive clothing”\n\nFull body clothing that reduces your ability to cool off. Examples: waterproof/ insulated coveralls, welding jackets, hazard protection suits.\n\n“Radiant heat”\n\nHeat transmitted by electromagnetic waves and not by conduction or convection. In other words, radiant heat includes the sun, hot objects (e.g. large machinery), hot liquids (e.g. kitchen oils), hot surfaces (e.g. heat lamps, grills, ovens), and fire.\n\n“Radiant heat source”\n\nAny object, surface, or other source of radiant heat that, if not shielded, would raise the globe temperature of the cool-down area 5°F or more than the temperature of the cool-down area.\n\n“High radiant heat area”\n\nA work area where an the temperature is at least 5°F greater than the immediate temperature in the broader work area.\n\n“Heat protective clothing”\n\nEquipment/ clothing made to protect against heat illness. Examples: water-cooled garments, air-cooled garments, cooling vests, wetted over-garments, heat-reflective clothing."
  },
  {
    "objectID": "docs/resources.html#how-to-identify-heat-stress-and-illness",
    "href": "docs/resources.html#how-to-identify-heat-stress-and-illness",
    "title": "Resources",
    "section": "How to identify heat stress and illness?",
    "text": "How to identify heat stress and illness?\n\n\n\n\n\n\nImportant\n\n\n\nHeat illness is serious and can worsen rapidly. If you feel any of these symptoms you have the right to take a preventative cool down break at any point until you feel healthy enough to return to work."
  },
  {
    "objectID": "docs/resources.html#are-you-experiencing-high-temperatures-at-work",
    "href": "docs/resources.html#are-you-experiencing-high-temperatures-at-work",
    "title": "Resources",
    "section": "Are you experiencing high temperatures at work?",
    "text": "Are you experiencing high temperatures at work?\n\nSee Step-By-Step Guide to Filing a Heat Related Complaint Online with Federal OSHA.\nIf you have been exposed to unfair work conditions related to extreme indoor temperatures you have the opportunity to hold your employer accountable. Below is a link to the step by step guide to file a heat related OSHA complaint provided by the National Coalition for Occupational Safety and Health (National COSH)."
  },
  {
    "objectID": "docs/resources.html#community-based-southern-california-worker-organizations",
    "href": "docs/resources.html#community-based-southern-california-worker-organizations",
    "title": "Resources",
    "section": "Community based Southern California worker organizations:",
    "text": "Community based Southern California worker organizations:\nWarehouse Workers:\n\nWarehouse Workers Resource Center\nInland Empire Amazon Workers United\n\nOccupational Worker Safety and Health:\n\nSouthern California Coalition for Occupational Safety and Health\nUCLA Labor Occupational Safety and Health\n\nCarwash Workers:\n\nCLEAN\n\nAffinity and Location based worker organizations:\n\nLA Black Workers Center\nKoreatown Immigrant Worker Alliance"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This research project aims to amplify workers’ voices and experiences with indoor heat—often extreme heat—to better understand its impact on health, safety, working conditions, and the overall worker. In the context of California’s recent Indoor Heat Illness Standard, passed June 2024 and in effect as of July 23rd, 2024, a plethora of worker advocacy organizations, labor unions, and collectives are taking the necessary action to inform, train, and empower their workers as it relates to indoor heat. This research website forms a part of that broader push to empower workers in the face of new and, initially, ambiguous understandings of California’s indoor heat protections. It is our hope this website serves as both an advocacy tool to inform workers and organizations and a push to bridge data analysis and original labor research.\nCarried out in partnership with:\nSoCalCOSH & UCLA Labor Occupational Saftey and Health Program\n\n\n\n Back to top"
  },
  {
    "objectID": "webscrape.html",
    "href": "webscrape.html",
    "title": "CALOSHA establishment search web scrape",
    "section": "",
    "text": "for webscraping:\nrvest if it works well for static site scrapping and also web browser control (with read_html_live()): https://rvest.tidyverse.org/ dev. by wickham\n\nPagination: See his github rvest here, uses httr to scrape multiple pages\n\nHayalbaz if you need more interaction : https://github.com/rundel/hayalbaz\nA nice playlist on how to use rvest by data slice: https://youtube.com/playlist?list=PLr5uaPu5L7xLEclrT0-2TWAz5FTkfdUiW&si=FWa02M1Qq7uLBMDB\nto read pdf content:\nreadtext (wrap pdftools and more): https://github.com/quanteda/readtext\npdftools: https://cran.r-project.org/web/packages/pdftools/index.html\nCriminologist jail/ prison extraction data using pdftools package:\nSince other packages to extract tables from pdf have maintenance or dependency issues (with java) here is a tutorial using pdftools (a bit long): https://crimebythenumbers.com/scrape-table.html\nFor more complex sites, you might need to deal with JavaScript-rendered content. In such cases, RSelenium is a great tool. It allows you to automate a web browser, interact with dynamic content, and scrape data that isn’t readily available in the static HTML.\nTo scrape:\n\nwebscrape CALOSHA website (not really up to date) on complaints received and citations issued\n\n\n\n\norder: close pop up (if needed)&gt; establishment search (California, monrovia office, case status: all, violation status: With Violations), date, press search &gt; Click Activity &gt;Inspection Nr: 1760736.015, Report ID: 0950644, Date Opened: 06/13/2024, Site Address, Union Status, NAICS, Mailing Address, Inspection Type, Scope, Advanced Notice, Ownership, Safety/Health, Close Conference, Emphasis, Case Closed,\nLocate violation summary: Current Violations - Total, Current Penalty - Total\nLocate Violation Items: Get Standard Cited only if it is 3395? or get all standards cited, regardless retrieve Standard cited, Issuance Date, Abatement Due Date, current penalty\n\n\nInspection type: there are two types– programmed and unprogrammed,\n\nA Fatality/Catastrophe Report (FAT/CAT),\nComplaint\nAccident\n\n\nnotes from lex (osha rep):\nIn the case you referenced below, there are indicators of what type of inspection: Accident and Complaint Inspections are” Unprogrammed Inspections:” and in most cases are also “Partial” Inspections (focused on the specific accident or the complaint item, although some complaints could be “Comprehensive”).\nInspection Type: Complaint\nScope: Partial\nAdvanced Notice: N\nOwnership: Private\nSafety/Health: Health\nClose Conference: 12/15/2023\nEmphasis:\nCase Closed: 01/30/2024\nProgrammed inspections, like those conducted by my office will always be “Comprehensive”. IN all cases, there is never an announcement of a pending inspection. Notice is never given to any employer, by law in Cal OSHA\nData analysis:\n\nsee which industries are most cited\nWhat percent of complaints actually result in violations? This is 5 year range 1059/ 1706 – 62%\n\n\nknitr::opts_chunk$set(eval = FALSE)\n#install.packages(\"rvest\") \n#install.packages(\"pdftools\")\n#install.packages(\"xml2\")\n#install.packages(\"RSelenium\")\n#install.packages(\"binman\")\n# install.packages(\"purrr\")\nlibrary(purrr)\nlibrary(pdftools)\n\nUsing poppler version 23.04.0\n\nlibrary(rvest)\nlibrary(httr)\nlibrary(xml2)\nlibrary(tibble)\nlibrary(RSelenium)\nlibrary(wdman)\nlibrary(binman)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n#FAILED - server request 403 \n#url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n# set user agent \n\n#response &lt;- GET(url, \n                user_agent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"))\n\n# Check if the request was successful\n#if (status_code(response) == 200) {\n  # Parse the content of the webpage\n  #webpage &lt;- read_html(content(response, \"text\"))\n  \n  # Extract the first table from the page\n # table &lt;- webpage %&gt;% \n   # html_nodes(\"table\") %&gt;%     # Find all tables on the page\n  #  .[[1]] %&gt;%                  # Select the first table (adjust index if needed)\n   # html_table(fill = TRUE)      # Convert HTML table to data frame\n  \n  # Print the table\n  #print(table)\n  \n#} else {\n  stop(\"Failed to retrieve the webpage. Status code: \", status_code(response))\n#}\n\n\n#FAILED - not recgonzing referer, user agent issues \n# Define the URL\n# Load required libraries\n\n# Define the URL\nurl &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n\n# Set HTTP headers to mimic a real browser\n# adding more user agent headers, simulate real users \nresponse &lt;- GET(url, \n                user_agent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"),\n                add_headers(.  \n                  `Referer` = \"https://www.google.com\",\n                  `Accept-Language` = \"en-US,en;q=0.9\",\n                  `Cache-Control` = \"max-age=0\"\n                ))\n\n# Check if the request was successful\nif (status_code(response) == 200) {\n  # Parse the content of the webpage\n  webpage &lt;- read_html(content(response, \"text\"))\n  \n  # Extract the first table from the page\n  table &lt;- webpage %&gt;% \n    html_nodes(\"table\") %&gt;%     # Find all tables on the page\n    .[[1]] %&gt;%                  # Select the first table (adjust index if needed)\n    html_table(fill = TRUE)      # Convert HTML table to data frame\n  \n  # Print the table\n  print(table)\n  \n} else {\n  stop(\"Failed to retrieve the webpage. Status code: \", status_code(response))\n}\n\nAttempt II. rvest xml2 and tibbles\n\n#store url \nurl2 &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n#scrape htmlinfo from stored url \nbase_webpage &lt;- read_html(url2)\n#loop \nnew_url2 &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024/%s\"\n# Creating dataframe of the first 100 movies:\n# html_table() converts html tables into dataframes.\ntable_base &lt;- rvest::html_table(base_webpage) [[1]] %&gt;% \n  tibble::as_tibble(.name_repair = \"unique\")\ntable_new &lt;- data.frame()\ndf &lt;- data.frame()\ni &lt;- 101\n\n## Creating data out of the next set of tables \nwhile (i&lt;5502) {\n  new_webpage&lt;- read_html(sprintf(new_url2,i))\n  table_new &lt;- rvest::html_table(new_webpage)[[1]] %&gt;% \n    tibble::as_tibble(.name_repair = \"unique\") # repair the repeated columns\n  df&lt;- rbind(df,table_new)\n  i=i+100\n}\n## Merge table_base and df \ncitations &lt;- merge(table_base, df, all = T)\nhead(citations)\n\n\n\n\nsites generate dynamic content w/ JavaScript so the raw html of site doesnt help much. Rblogger tutorial (2014) outdated, using appsilon tutorial\n\nlatest chromedriver version installed: 129.0.6668.89, somehow my R cannot access it it conitnues to access an older version of it 106. tried everything, I manually installed driver 129 for browser and driver compatibility.\nI dwonloaded driver 129 here\n\nChrome attempt didnt work. chrome driver incompatibility, saved by firefox\n\n#NOT WORKING\n#rD &lt;- RSelenium::rsDriver() #only supports v.106, have v.129\n# check supported chrome versions. \nbinman::list_versions(appname = \"chromedriver\")\nrD &lt;- RSelenium::rsDriver(browser = \"chrome\", \n                          port = 53924L, chromever = \"129.0.6668.89\") \n#troubleshooting below \n# Define the path to your ChromeDriver\nchrome_driver_path &lt;- \"/Users/diegoflores/Downloads/chromedriver-mac-arm64-2/chromedriver\"\n\n# Start RSelenium with the path to the driver\nrD &lt;- rsDriver(browser = \"chrome\", chromever = \"129.0.6668.89\", extraCapabilities = list(chromeOptions = list(binary = chrome_driver_path)))\nbinman::list_versions(appname = \"chromedriver\")\n\nrD &lt;- RSelenium::rsDriver(browser = \"chrome\",\n                          chromever = \"106.0.5249.21\")\n\nWorking with elements\n\nfindElement(using, value): Search for an element on the page, starting from the document root. The located element will be returned as an object of webElement class. To use this need some basic knowledge of HTML/ CSS (or xpath, etc). Chrome extension, called SelectorGadget, might help.\nhighlightElement(): Utility function to highlight current Element. This helps to check that you selected the wanted element.\nsendKeysToElement(): Send a sequence of keystrokes to an element. The keystrokes are sent as a list. Plain text is entered as an unnamed element of the list. Keyboard entries are defined in ’selKeys‘ and should be listed with the name ’key‘.\nclearElement(): Clear a TEXTAREA or text INPUT element’s value.\nclickElement(): Click the element. You can click links, check boxes, dropdown lists, etc.\nLATEST UPDATE:\n\nsuccesful but the table output isnt that nice I need to first get the top header (whihc has the variables names) am I analyzing by column or row or both, or how do I think about the scrape?\nI think I successfully extracted all of the first table? now I need to loop it!! figure out pagination\n\n\n\nrD &lt;- RSelenium::rsDriver(browser = \"firefox\", port = 4569L) # start session\nremDr &lt;- rD[[\"client\"]] # Assign the client to an object\n\n\nremDr$open()\nbase_url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024\" \n\nremDr$navigate(base_url)\n# Sys.sleep(4) # seconds\n\n#webElem &lt;- remDr$findElement(using = \"css selector\", value = \"div.table-responsive:nth-child(8) &gt; table:nth-child(1)\") \n# webElem$highlightElement()\nremDr$maxWindowSize()\n#keep the browser active, open(silent = FALSE)\n#remDr$open() #use this if server is already active\n#remDr$close() #close current session \n\n\nsource &lt;- remDr$getPageSource()[[1]]# read page source from where you navigated \n# get all rows of table in an xml list \ntable_body  &lt;- read_html(source) %&gt;% #table_body is xml list \n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) &gt; tbody:nth-child(2)\")\n\nprint(table_body)\n #Extract all data from rows in the table\ntable_data &lt;- table_body %&gt;% # then table body is passed to html_nodes to extract the actual data\n  html_nodes(\"tr\") %&gt;% # first get all rows (tr, its getting from source code) separately \n  html_nodes(\"td\") %&gt;% # then get all cells (td)\n  html_text2()         # html_text() retrives text from html element\ndf &lt;- as.data.frame(table_data)\n\n# Get column names, turn into list, when transforming into df, the ncol = the list column_length\ncolumn_names &lt;- read_html(source) %&gt;%  # extract list of column names, convert to text after using html_text2\n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) &gt; thead:nth-child(1)\") %&gt;% \n  html_nodes(\"th\") %&gt;%  # extracting table headers (th)\n  html_text2()\nprint(column_names) # vector of 12 names, just a check\n\ncolumn_length &lt;- length(column_names) # 12, length gets/sets the length of a vector (which is a list)\n\n# First turn lists into matrix w correct # of cols then make a tibble \ndf &lt;- matrix(table_data, ncol = column_length, byrow = TRUE) %&gt;% \n  as_tibble()\n\ncolnames(df) &lt;- column_names \n#str(df) # all chrs \n# df &lt;- df %&gt;% select(-1, -2)  # remove first two columns, not sure where/ when to run this prolly after \n                             # everything is scraped \n\n#### Pagination repeat function ####\nrepeat {\nnext_button &lt;- remDr$findElement(using = \"xpath\", value = '//a[@title = \"Next Page\"]') # locate netx button\n\nnext_button$clickElement()  # Click next button \nSys.sleep(2)                # Sleep 3 seconds \n\nif (length(remDr$findElements(using = \"xpath\", value = '//a[@title = \"Next Page\"]')) == 0) { # a check! \n  break\n  }\n}\n\n# Appending newly scraped df to all data \nall_data &lt;- list() \n\nall_data &lt;- rbindlist(list(all_data, df))\n\n\n# NOT WORKING RN \n# Navigating to sub pages on the Activtiy # the a elements \na_elements &lt;- read_html(remDr$getPageSource()[[1]]) %&gt;%\n  html_nodes(\"tr\") %&gt;%\n  html_nodes(\"td\") %&gt;% # get a elemtns from the source (html) of the base_url\n  html_elements(css = \"div.package &gt; a\")\na_elements\n\nwebsite_html &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024\" %&gt;% \n  read_html()\ntd_cell_elements &lt;- source %&gt;% \n  html_nodes(\"tr\") %&gt;% \n  html_nodes(\"td\") \n#bcus a elements (links) are inside the td (cells) i must extract all a tags w/ in the td cells \na_elements &lt;- td_cell_elements %&gt;%  \n  html_elements(\"a\") # selecting the a elements from the html source - here its from the td_cel_elements html source\na_elements_links &lt;- a_elements %&gt;% \n  html_attr(\"href\") #gets attribute from html source code \na_element_links\n\n\n# SCRAPE SUB PAGE working but abandoning \nactivityElem &lt;- remDr$findElement(using = \"css selector\", # finds the activity link using \n                                       value =\"tbody tr:nth-child(1) td:nth-child(3)\") # relative css selector \nactivityElem$clickElement()  #clicks the activity link \nSys.sleep(2)\nsource &lt;- remDr$getPageSource()[[1]] # source() retrieves current HTML of webpage as a list, and [[1]] extracts first  # (and only) item in that list, which is full HTML code as a string\n# Extract paragraphs based on their HTML structure, using single-line selector(no spaces)\nptext &lt;- read_html(source) %&gt;%  \n  html_nodes(\"div.row-fluid:nth-child(9) &gt; div:nth-child(1) &gt; p:nth-child(1), #site address\n              div.row-fluid:nth-child(9) &gt; div:nth-child(2) &gt; p:nth-child(1), # union \n              div.row-fluid:nth-child(9) &gt; div:nth-child(3) &gt; p:nth-child(2), # NAICS \n              div.row-fluid:nth-child(11) &gt; div:nth-child(2) &gt; p:nth-child(1),# safety \n              div.row-fluid:nth-child(11) &gt; div:nth-child(2) &gt; p:nth-child(3)\") %&gt;% \n  html_text2()\n# print(ptext) # Print the extracted text, currently a vector it works! 10/14  \n# Violation Summary Table: getting total current violations and current penalty  \ntable_body2 &lt;- read_html(source) %&gt;% \n  html_nodes(\".tablei &gt; tbody:nth-child(2) &gt; tr\") #looking at tablei, tbody, nth child 2, all the rows (tr)\n# 10/14, it works!!! and its already a function :) must be appended into the larger script \ntable_data2 &lt;- table_body2 %&gt;% \n  map_df(function(.x) { # already looking at all rows (as a string) so .x represents each element of the vector, \n    data.frame(         # in this case each .x is a row (tr) element \n      current_vil = html_node(.x, \"tr:nth-child(3) &gt; td:nth-child(7)\") %&gt;% html_text2(), # tbl row 3, cell 7\n      current_pen = html_node(.x, \"tr:nth-child(5) &gt; td:nth-child(7)\") %&gt;% html_text2()  # tbl row 5, cell 7\n    )# must tell function to look into .x bcus this searches w/ in specified rows of  table_body2 \n  }) # instead of excluding it and then telling the function to search the entire document? \n     # map_df is superseded meaning it will. not be replaced but there are other syntax recommendations \n\n\n# 1: SETUP \nremDr$open()\nbase_url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024\" \nremDr$navigate(base_url)\nSys.sleep(3) \nremDr$maxWindowSize()\nsource &lt;- remDr$getPageSource()[[1]]\n\n# 2: PLUG IN SCRAPE OF INITIAL TABLE \n\n# 3: get all links for activity # using for loop, navigate and scrape w/ in them\n# FAILED Attempt 2 - neither work :( i am sad. 10/16 update, ending web scraping. \nparsed_html &lt;- read_html(source)\nlinks &lt;- parsed_html %&gt;% \n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) tbody tr\") %&gt;% \n  html_nodes(\"td a\") %&gt;% # each row has links in &lt;a&gt; tags inside &lt;td&gt;\n  html_attr(\"href\") # Extract href attributes\nprint(links)\n# https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024 \n# https://www.osha.gov/ords/imis/establishment.inspection_detail?id=1763527.015\n# FAILED Attempt 1 below\nrows &lt;- remDr$findElements(using = \"css selector\", value =\"div.table-responsive:nth-child(8) table tbody tr\") # rows - find all row elements first, its only getting row 1!!! \nlinks &lt;- sapply(rows, function(row) {   # Getting links: iterate over each row to get links \n  a_tag &lt;- row$findElement(using = \"css\", value = \"td a\")\n    a_tag$getElementAttribute(\"href\")   # get link itself from &lt;a&gt; (anchor element)\n})\nprint(links)\n#\nfor (link in links){\n  remDr$navigate(links) # navigate to the link in vector links\n  #SCRAPE FUNCTION HERE\n}\n\n\n## DEBUGGING## # alternative approach below, fixed code above was missing html_nodes(\"th\") in order to extract cell\n##               values of the css selector \n# Up to this point 10/7 the data wasnt scraped properly, it is in a long 1 column dataframe \n#num_cols &lt;- 12\n#num_rows &lt;- length(table_data)/num_cols\n# matrix_table_data &lt;- matrix(table_data, ncol = num_cols, byrow = TRUE) %&gt;% \n # as_tibble()\n# colnames(matrix_table_data) &lt;- column_names\n# there is an issue w the way column names are being extracted, try different css selector, if it fails, try new written\n# vector \n\n10/ 16\n\nending for now. very close to just scraping all pages but not the subpages unfortunately!\n\n10/15\n\ngreat progress but on the note of why the function is iterating over the first row 20 times instead of each row once\n\nThis usually happens if the findElement (singular) method is used instead of findElements (plural), or if you’re not properly referencing each individual row during iteration. but I have used plural!! to no avail\n\n\n10/14\nCSS selector\n\n\n\n10/10/224\n\ndo we need the script to create a predefined list for the total activity number? yes i believe\nTo do: Following along with web scrape premier league\n\n\ncreate a list of all activity numbers (href links) from the readable HTML source (its a string from a list)\nI.e. see code chunk. So i must find all “link” items in the row elements that have attribute href. html_attr then extracts value of the “data-option-name” attribute from the li elements, which are the season names\n“As you can see, we have an attribute named ‘data-dropdown-list’ whose value is ‘FOOTBALL_COMPSEASON’ and inside we have ‘li’ tags where the attribute ‘data-option-name’ changes for each season.”\n\n\n#FOR EXMAPLE:\nlist_seasons &lt;- read_html(source) %&gt;%\n  html_nodes(\"ul[data-dropdown-list=         # find all list (li) items in the ul elements that have attribute [data-dropdown-\n             FOOTBALL_COMPSEASON] &gt; li\") %&gt;% # list=FOOTBALL...] targetting the specific dropdown list for seasons \n  html_attr(\"data-option-name\")\n\n10/4/24\n\nafter I find the correct html elements/ and their css selectors I should replicate the for loop code below to get all html source from all pages, then can parse it out correctly into a dataframe (rvest)\ndiv.table-responsive:nth-child(8) refers to 8th child element div w/ class table responsive\n\n10/7/24 - monday\n\nfinally got the base scrape down (df), now I gotta deal with pagination and inspection details\nPagination: locate ‘next’ web element to run at the end of the initial scrape, sys.sleep(_), extract only the table body, dont need table headers? See wickham github\nIndex pages: Inspection detail: can navigate and click it, then scrape site address, union status, naics, row fluid class under it, case status, violation summary, and violation items\n\nthe issue here is creating the new variables, will be a new set of 10+ variables – will prolly happen after using same methods\nViolation summary: only retrieve Current violations/ penalty from the total row\nviolation items: not sure at all how to get standard cited since there is more than 1 unique value there can be x amount of unique standards cited but surely not unlimited, dont need to get all since it is already common knowledge what standards are cited most frequently (provided by OSHA) could probably just check if heat standard is mentioned and if so to make it Y/N\n\nwrapper functions:\nultimate goal:\n\n&lt;table&gt; \n&lt;tr&gt;\n&lt;td&gt;Row 1, Cell 1&lt;/td&gt; #td defines a cell in the row\n&lt;td&gt;Row 1, Cell 2&lt;/td&gt;\n&lt;/tr&gt; \n&lt;tr&gt;\n &lt;td&gt;Row 2, Cell 1&lt;/td&gt;\n&lt;td&gt;Row 2, Cell 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tr&gt;\n\n&lt;a href=“establishment.inspection detail? id = ####### title =”#######” &gt;\n1763527.015\n\n &lt;/table&gt;\nScraping programmatically from stack overflow: start by writing a function that takes a page number, finds the link for that page, clicks on the link, and returns the HTML source for that page:\nuseful functions\n\nfindElement(using =, value=): Search for an element on the page, starting from the document root. The located element will be returned as an object of webElement class. To use this function you need some basic knowledge of HTML and CSS (or xpath, etc). Using a Chrome extension, called SelectorGadget, might help.\nhighlightElement(): Utility function to highlight current Element. This helps to check that you selected the wanted element.\nsendKeysToElement(): Send a sequence of keystrokes to an element. The keystrokes are sent as a list. Plain text is entered as an unnamed element of the list. Keyboard entries are defined in ’selKeys‘ and should be listed with the name ’key‘.\ngetPageSource()[[1]]: Get the current page source. This method combined with `rvest` is what makes possible to scrape dynamic web pages. The xml document returned by the method can then be read using rvest::read_html(). This method returns a `list` object, that’s the reason behind [[1]].\n\nget_html &lt;- function(i) {\n  webElem &lt;- remDr$findElement(using = \"link text\", as.character(i))\n  webElem$clickElement()\n  Sys.sleep(s)\n  remDr$getPageSource()[[1]]\n}\ns &lt;- 2 # seconds to wait between each page\ntotal_pages &lt;- 17\nhtml_pages &lt;- vector(\"list\", total_pages)\nStart the browser, navigate to page 1, and save the source:\nlibrary(RSelenium)\nrD &lt;- rsDriver()\nremDr &lt;- rD[[\"client\"]]\nbase_url &lt;- \"http://dgsp.cns.gob.mx/Transparencia/wConsultasGeneral.aspx\"\nremDr$navigate(base_url)\nsrc &lt;- remDr$getPageSource()[[1]]\nhtml_pages[1] &lt;- src\nFor pages 2 to 17, we use a for-loop and call the function we wrote above, taking care to account specially for page 11:\nfor (i in 2:total_pages) {\n  if (i == 11) {\n    webElem &lt;- remDr$findElement(using = \"link text\", \"...\")\n    webElem$clickElement()\n    Sys.sleep(s)\n    html_pages[i] &lt;- remDr$getPageSource()[[1]]\n  } else {\n    html_pages[i] &lt;- get_html(i)  \n  }\n}\nremDr$close()\nThe result is html_pages, a list of length 17, with each element the HTML source for each page."
  },
  {
    "objectID": "webscrape.html#notes-for-webscraping",
    "href": "webscrape.html#notes-for-webscraping",
    "title": "CALOSHA establishment search web scrape",
    "section": "",
    "text": "for webscraping:\nrvest if it works well for static site scrapping and also web browser control (with read_html_live()): https://rvest.tidyverse.org/ dev. by wickham\n\nPagination: See his github rvest here, uses httr to scrape multiple pages\n\nHayalbaz if you need more interaction : https://github.com/rundel/hayalbaz\nA nice playlist on how to use rvest by data slice: https://youtube.com/playlist?list=PLr5uaPu5L7xLEclrT0-2TWAz5FTkfdUiW&si=FWa02M1Qq7uLBMDB\nto read pdf content:\nreadtext (wrap pdftools and more): https://github.com/quanteda/readtext\npdftools: https://cran.r-project.org/web/packages/pdftools/index.html\nCriminologist jail/ prison extraction data using pdftools package:\nSince other packages to extract tables from pdf have maintenance or dependency issues (with java) here is a tutorial using pdftools (a bit long): https://crimebythenumbers.com/scrape-table.html\nFor more complex sites, you might need to deal with JavaScript-rendered content. In such cases, RSelenium is a great tool. It allows you to automate a web browser, interact with dynamic content, and scrape data that isn’t readily available in the static HTML.\nTo scrape:\n\nwebscrape CALOSHA website (not really up to date) on complaints received and citations issued\n\n\n\n\norder: close pop up (if needed)&gt; establishment search (California, monrovia office, case status: all, violation status: With Violations), date, press search &gt; Click Activity &gt;Inspection Nr: 1760736.015, Report ID: 0950644, Date Opened: 06/13/2024, Site Address, Union Status, NAICS, Mailing Address, Inspection Type, Scope, Advanced Notice, Ownership, Safety/Health, Close Conference, Emphasis, Case Closed,\nLocate violation summary: Current Violations - Total, Current Penalty - Total\nLocate Violation Items: Get Standard Cited only if it is 3395? or get all standards cited, regardless retrieve Standard cited, Issuance Date, Abatement Due Date, current penalty\n\n\nInspection type: there are two types– programmed and unprogrammed,\n\nA Fatality/Catastrophe Report (FAT/CAT),\nComplaint\nAccident\n\n\nnotes from lex (osha rep):\nIn the case you referenced below, there are indicators of what type of inspection: Accident and Complaint Inspections are” Unprogrammed Inspections:” and in most cases are also “Partial” Inspections (focused on the specific accident or the complaint item, although some complaints could be “Comprehensive”).\nInspection Type: Complaint\nScope: Partial\nAdvanced Notice: N\nOwnership: Private\nSafety/Health: Health\nClose Conference: 12/15/2023\nEmphasis:\nCase Closed: 01/30/2024\nProgrammed inspections, like those conducted by my office will always be “Comprehensive”. IN all cases, there is never an announcement of a pending inspection. Notice is never given to any employer, by law in Cal OSHA\nData analysis:\n\nsee which industries are most cited\nWhat percent of complaints actually result in violations? This is 5 year range 1059/ 1706 – 62%\n\n\nknitr::opts_chunk$set(eval = FALSE)\n#install.packages(\"rvest\") \n#install.packages(\"pdftools\")\n#install.packages(\"xml2\")\n#install.packages(\"RSelenium\")\n#install.packages(\"binman\")\n# install.packages(\"purrr\")\nlibrary(purrr)\nlibrary(pdftools)\n\nUsing poppler version 23.04.0\n\nlibrary(rvest)\nlibrary(httr)\nlibrary(xml2)\nlibrary(tibble)\nlibrary(RSelenium)\nlibrary(wdman)\nlibrary(binman)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n#FAILED - server request 403 \n#url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n# set user agent \n\n#response &lt;- GET(url, \n                user_agent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"))\n\n# Check if the request was successful\n#if (status_code(response) == 200) {\n  # Parse the content of the webpage\n  #webpage &lt;- read_html(content(response, \"text\"))\n  \n  # Extract the first table from the page\n # table &lt;- webpage %&gt;% \n   # html_nodes(\"table\") %&gt;%     # Find all tables on the page\n  #  .[[1]] %&gt;%                  # Select the first table (adjust index if needed)\n   # html_table(fill = TRUE)      # Convert HTML table to data frame\n  \n  # Print the table\n  #print(table)\n  \n#} else {\n  stop(\"Failed to retrieve the webpage. Status code: \", status_code(response))\n#}\n\n\n#FAILED - not recgonzing referer, user agent issues \n# Define the URL\n# Load required libraries\n\n# Define the URL\nurl &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n\n# Set HTTP headers to mimic a real browser\n# adding more user agent headers, simulate real users \nresponse &lt;- GET(url, \n                user_agent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"),\n                add_headers(.  \n                  `Referer` = \"https://www.google.com\",\n                  `Accept-Language` = \"en-US,en;q=0.9\",\n                  `Cache-Control` = \"max-age=0\"\n                ))\n\n# Check if the request was successful\nif (status_code(response) == 200) {\n  # Parse the content of the webpage\n  webpage &lt;- read_html(content(response, \"text\"))\n  \n  # Extract the first table from the page\n  table &lt;- webpage %&gt;% \n    html_nodes(\"table\") %&gt;%     # Find all tables on the page\n    .[[1]] %&gt;%                  # Select the first table (adjust index if needed)\n    html_table(fill = TRUE)      # Convert HTML table to data frame\n  \n  # Print the table\n  print(table)\n  \n} else {\n  stop(\"Failed to retrieve the webpage. Status code: \", status_code(response))\n}\n\nAttempt II. rvest xml2 and tibbles\n\n#store url \nurl2 &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024\"\n#scrape htmlinfo from stored url \nbase_webpage &lt;- read_html(url2)\n#loop \nnew_url2 &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=all&startmonth=09&startday=30&startyear=2019&endmonth=09&endday=30&endyear=2024/%s\"\n# Creating dataframe of the first 100 movies:\n# html_table() converts html tables into dataframes.\ntable_base &lt;- rvest::html_table(base_webpage) [[1]] %&gt;% \n  tibble::as_tibble(.name_repair = \"unique\")\ntable_new &lt;- data.frame()\ndf &lt;- data.frame()\ni &lt;- 101\n\n## Creating data out of the next set of tables \nwhile (i&lt;5502) {\n  new_webpage&lt;- read_html(sprintf(new_url2,i))\n  table_new &lt;- rvest::html_table(new_webpage)[[1]] %&gt;% \n    tibble::as_tibble(.name_repair = \"unique\") # repair the repeated columns\n  df&lt;- rbind(df,table_new)\n  i=i+100\n}\n## Merge table_base and df \ncitations &lt;- merge(table_base, df, all = T)\nhead(citations)\n\n\n\n\nsites generate dynamic content w/ JavaScript so the raw html of site doesnt help much. Rblogger tutorial (2014) outdated, using appsilon tutorial\n\nlatest chromedriver version installed: 129.0.6668.89, somehow my R cannot access it it conitnues to access an older version of it 106. tried everything, I manually installed driver 129 for browser and driver compatibility.\nI dwonloaded driver 129 here\n\nChrome attempt didnt work. chrome driver incompatibility, saved by firefox\n\n#NOT WORKING\n#rD &lt;- RSelenium::rsDriver() #only supports v.106, have v.129\n# check supported chrome versions. \nbinman::list_versions(appname = \"chromedriver\")\nrD &lt;- RSelenium::rsDriver(browser = \"chrome\", \n                          port = 53924L, chromever = \"129.0.6668.89\") \n#troubleshooting below \n# Define the path to your ChromeDriver\nchrome_driver_path &lt;- \"/Users/diegoflores/Downloads/chromedriver-mac-arm64-2/chromedriver\"\n\n# Start RSelenium with the path to the driver\nrD &lt;- rsDriver(browser = \"chrome\", chromever = \"129.0.6668.89\", extraCapabilities = list(chromeOptions = list(binary = chrome_driver_path)))\nbinman::list_versions(appname = \"chromedriver\")\n\nrD &lt;- RSelenium::rsDriver(browser = \"chrome\",\n                          chromever = \"106.0.5249.21\")\n\nWorking with elements\n\nfindElement(using, value): Search for an element on the page, starting from the document root. The located element will be returned as an object of webElement class. To use this need some basic knowledge of HTML/ CSS (or xpath, etc). Chrome extension, called SelectorGadget, might help.\nhighlightElement(): Utility function to highlight current Element. This helps to check that you selected the wanted element.\nsendKeysToElement(): Send a sequence of keystrokes to an element. The keystrokes are sent as a list. Plain text is entered as an unnamed element of the list. Keyboard entries are defined in ’selKeys‘ and should be listed with the name ’key‘.\nclearElement(): Clear a TEXTAREA or text INPUT element’s value.\nclickElement(): Click the element. You can click links, check boxes, dropdown lists, etc.\nLATEST UPDATE:\n\nsuccesful but the table output isnt that nice I need to first get the top header (whihc has the variables names) am I analyzing by column or row or both, or how do I think about the scrape?\nI think I successfully extracted all of the first table? now I need to loop it!! figure out pagination\n\n\n\nrD &lt;- RSelenium::rsDriver(browser = \"firefox\", port = 4569L) # start session\nremDr &lt;- rD[[\"client\"]] # Assign the client to an object\n\n\nremDr$open()\nbase_url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024\" \n\nremDr$navigate(base_url)\n# Sys.sleep(4) # seconds\n\n#webElem &lt;- remDr$findElement(using = \"css selector\", value = \"div.table-responsive:nth-child(8) &gt; table:nth-child(1)\") \n# webElem$highlightElement()\nremDr$maxWindowSize()\n#keep the browser active, open(silent = FALSE)\n#remDr$open() #use this if server is already active\n#remDr$close() #close current session \n\n\nsource &lt;- remDr$getPageSource()[[1]]# read page source from where you navigated \n# get all rows of table in an xml list \ntable_body  &lt;- read_html(source) %&gt;% #table_body is xml list \n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) &gt; tbody:nth-child(2)\")\n\nprint(table_body)\n #Extract all data from rows in the table\ntable_data &lt;- table_body %&gt;% # then table body is passed to html_nodes to extract the actual data\n  html_nodes(\"tr\") %&gt;% # first get all rows (tr, its getting from source code) separately \n  html_nodes(\"td\") %&gt;% # then get all cells (td)\n  html_text2()         # html_text() retrives text from html element\ndf &lt;- as.data.frame(table_data)\n\n# Get column names, turn into list, when transforming into df, the ncol = the list column_length\ncolumn_names &lt;- read_html(source) %&gt;%  # extract list of column names, convert to text after using html_text2\n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) &gt; thead:nth-child(1)\") %&gt;% \n  html_nodes(\"th\") %&gt;%  # extracting table headers (th)\n  html_text2()\nprint(column_names) # vector of 12 names, just a check\n\ncolumn_length &lt;- length(column_names) # 12, length gets/sets the length of a vector (which is a list)\n\n# First turn lists into matrix w correct # of cols then make a tibble \ndf &lt;- matrix(table_data, ncol = column_length, byrow = TRUE) %&gt;% \n  as_tibble()\n\ncolnames(df) &lt;- column_names \n#str(df) # all chrs \n# df &lt;- df %&gt;% select(-1, -2)  # remove first two columns, not sure where/ when to run this prolly after \n                             # everything is scraped \n\n#### Pagination repeat function ####\nrepeat {\nnext_button &lt;- remDr$findElement(using = \"xpath\", value = '//a[@title = \"Next Page\"]') # locate netx button\n\nnext_button$clickElement()  # Click next button \nSys.sleep(2)                # Sleep 3 seconds \n\nif (length(remDr$findElements(using = \"xpath\", value = '//a[@title = \"Next Page\"]')) == 0) { # a check! \n  break\n  }\n}\n\n# Appending newly scraped df to all data \nall_data &lt;- list() \n\nall_data &lt;- rbindlist(list(all_data, df))\n\n\n# NOT WORKING RN \n# Navigating to sub pages on the Activtiy # the a elements \na_elements &lt;- read_html(remDr$getPageSource()[[1]]) %&gt;%\n  html_nodes(\"tr\") %&gt;%\n  html_nodes(\"td\") %&gt;% # get a elemtns from the source (html) of the base_url\n  html_elements(css = \"div.package &gt; a\")\na_elements\n\nwebsite_html &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=03&startyear=2019&endmonth=10&endday=03&endyear=2024\" %&gt;% \n  read_html()\ntd_cell_elements &lt;- source %&gt;% \n  html_nodes(\"tr\") %&gt;% \n  html_nodes(\"td\") \n#bcus a elements (links) are inside the td (cells) i must extract all a tags w/ in the td cells \na_elements &lt;- td_cell_elements %&gt;%  \n  html_elements(\"a\") # selecting the a elements from the html source - here its from the td_cel_elements html source\na_elements_links &lt;- a_elements %&gt;% \n  html_attr(\"href\") #gets attribute from html source code \na_element_links\n\n\n# SCRAPE SUB PAGE working but abandoning \nactivityElem &lt;- remDr$findElement(using = \"css selector\", # finds the activity link using \n                                       value =\"tbody tr:nth-child(1) td:nth-child(3)\") # relative css selector \nactivityElem$clickElement()  #clicks the activity link \nSys.sleep(2)\nsource &lt;- remDr$getPageSource()[[1]] # source() retrieves current HTML of webpage as a list, and [[1]] extracts first  # (and only) item in that list, which is full HTML code as a string\n# Extract paragraphs based on their HTML structure, using single-line selector(no spaces)\nptext &lt;- read_html(source) %&gt;%  \n  html_nodes(\"div.row-fluid:nth-child(9) &gt; div:nth-child(1) &gt; p:nth-child(1), #site address\n              div.row-fluid:nth-child(9) &gt; div:nth-child(2) &gt; p:nth-child(1), # union \n              div.row-fluid:nth-child(9) &gt; div:nth-child(3) &gt; p:nth-child(2), # NAICS \n              div.row-fluid:nth-child(11) &gt; div:nth-child(2) &gt; p:nth-child(1),# safety \n              div.row-fluid:nth-child(11) &gt; div:nth-child(2) &gt; p:nth-child(3)\") %&gt;% \n  html_text2()\n# print(ptext) # Print the extracted text, currently a vector it works! 10/14  \n# Violation Summary Table: getting total current violations and current penalty  \ntable_body2 &lt;- read_html(source) %&gt;% \n  html_nodes(\".tablei &gt; tbody:nth-child(2) &gt; tr\") #looking at tablei, tbody, nth child 2, all the rows (tr)\n# 10/14, it works!!! and its already a function :) must be appended into the larger script \ntable_data2 &lt;- table_body2 %&gt;% \n  map_df(function(.x) { # already looking at all rows (as a string) so .x represents each element of the vector, \n    data.frame(         # in this case each .x is a row (tr) element \n      current_vil = html_node(.x, \"tr:nth-child(3) &gt; td:nth-child(7)\") %&gt;% html_text2(), # tbl row 3, cell 7\n      current_pen = html_node(.x, \"tr:nth-child(5) &gt; td:nth-child(7)\") %&gt;% html_text2()  # tbl row 5, cell 7\n    )# must tell function to look into .x bcus this searches w/ in specified rows of  table_body2 \n  }) # instead of excluding it and then telling the function to search the entire document? \n     # map_df is superseded meaning it will. not be replaced but there are other syntax recommendations \n\n\n# 1: SETUP \nremDr$open()\nbase_url &lt;- \"https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024\" \nremDr$navigate(base_url)\nSys.sleep(3) \nremDr$maxWindowSize()\nsource &lt;- remDr$getPageSource()[[1]]\n\n# 2: PLUG IN SCRAPE OF INITIAL TABLE \n\n# 3: get all links for activity # using for loop, navigate and scrape w/ in them\n# FAILED Attempt 2 - neither work :( i am sad. 10/16 update, ending web scraping. \nparsed_html &lt;- read_html(source)\nlinks &lt;- parsed_html %&gt;% \n  html_nodes(\"div.table-responsive:nth-child(8) &gt; table:nth-child(1) tbody tr\") %&gt;% \n  html_nodes(\"td a\") %&gt;% # each row has links in &lt;a&gt; tags inside &lt;td&gt;\n  html_attr(\"href\") # Extract href attributes\nprint(links)\n# https://www.osha.gov/ords/imis/establishment.search?p_logger=1&establishment=&State=CA&officetype=all&Office=950644&sitezip=&p_case=all&p_violations_exist=yes&startmonth=10&startday=14&startyear=2019&endmonth=10&endday=14&endyear=2024 \n# https://www.osha.gov/ords/imis/establishment.inspection_detail?id=1763527.015\n# FAILED Attempt 1 below\nrows &lt;- remDr$findElements(using = \"css selector\", value =\"div.table-responsive:nth-child(8) table tbody tr\") # rows - find all row elements first, its only getting row 1!!! \nlinks &lt;- sapply(rows, function(row) {   # Getting links: iterate over each row to get links \n  a_tag &lt;- row$findElement(using = \"css\", value = \"td a\")\n    a_tag$getElementAttribute(\"href\")   # get link itself from &lt;a&gt; (anchor element)\n})\nprint(links)\n#\nfor (link in links){\n  remDr$navigate(links) # navigate to the link in vector links\n  #SCRAPE FUNCTION HERE\n}\n\n\n## DEBUGGING## # alternative approach below, fixed code above was missing html_nodes(\"th\") in order to extract cell\n##               values of the css selector \n# Up to this point 10/7 the data wasnt scraped properly, it is in a long 1 column dataframe \n#num_cols &lt;- 12\n#num_rows &lt;- length(table_data)/num_cols\n# matrix_table_data &lt;- matrix(table_data, ncol = num_cols, byrow = TRUE) %&gt;% \n # as_tibble()\n# colnames(matrix_table_data) &lt;- column_names\n# there is an issue w the way column names are being extracted, try different css selector, if it fails, try new written\n# vector \n\n10/ 16\n\nending for now. very close to just scraping all pages but not the subpages unfortunately!\n\n10/15\n\ngreat progress but on the note of why the function is iterating over the first row 20 times instead of each row once\n\nThis usually happens if the findElement (singular) method is used instead of findElements (plural), or if you’re not properly referencing each individual row during iteration. but I have used plural!! to no avail\n\n\n10/14\nCSS selector\n\n\n\n10/10/224\n\ndo we need the script to create a predefined list for the total activity number? yes i believe\nTo do: Following along with web scrape premier league\n\n\ncreate a list of all activity numbers (href links) from the readable HTML source (its a string from a list)\nI.e. see code chunk. So i must find all “link” items in the row elements that have attribute href. html_attr then extracts value of the “data-option-name” attribute from the li elements, which are the season names\n“As you can see, we have an attribute named ‘data-dropdown-list’ whose value is ‘FOOTBALL_COMPSEASON’ and inside we have ‘li’ tags where the attribute ‘data-option-name’ changes for each season.”\n\n\n#FOR EXMAPLE:\nlist_seasons &lt;- read_html(source) %&gt;%\n  html_nodes(\"ul[data-dropdown-list=         # find all list (li) items in the ul elements that have attribute [data-dropdown-\n             FOOTBALL_COMPSEASON] &gt; li\") %&gt;% # list=FOOTBALL...] targetting the specific dropdown list for seasons \n  html_attr(\"data-option-name\")\n\n10/4/24\n\nafter I find the correct html elements/ and their css selectors I should replicate the for loop code below to get all html source from all pages, then can parse it out correctly into a dataframe (rvest)\ndiv.table-responsive:nth-child(8) refers to 8th child element div w/ class table responsive\n\n10/7/24 - monday\n\nfinally got the base scrape down (df), now I gotta deal with pagination and inspection details\nPagination: locate ‘next’ web element to run at the end of the initial scrape, sys.sleep(_), extract only the table body, dont need table headers? See wickham github\nIndex pages: Inspection detail: can navigate and click it, then scrape site address, union status, naics, row fluid class under it, case status, violation summary, and violation items\n\nthe issue here is creating the new variables, will be a new set of 10+ variables – will prolly happen after using same methods\nViolation summary: only retrieve Current violations/ penalty from the total row\nviolation items: not sure at all how to get standard cited since there is more than 1 unique value there can be x amount of unique standards cited but surely not unlimited, dont need to get all since it is already common knowledge what standards are cited most frequently (provided by OSHA) could probably just check if heat standard is mentioned and if so to make it Y/N\n\nwrapper functions:\nultimate goal:\n\n&lt;table&gt; \n&lt;tr&gt;\n&lt;td&gt;Row 1, Cell 1&lt;/td&gt; #td defines a cell in the row\n&lt;td&gt;Row 1, Cell 2&lt;/td&gt;\n&lt;/tr&gt; \n&lt;tr&gt;\n &lt;td&gt;Row 2, Cell 1&lt;/td&gt;\n&lt;td&gt;Row 2, Cell 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tr&gt;\n\n&lt;a href=“establishment.inspection detail? id = ####### title =”#######” &gt;\n1763527.015\n\n &lt;/table&gt;\nScraping programmatically from stack overflow: start by writing a function that takes a page number, finds the link for that page, clicks on the link, and returns the HTML source for that page:\nuseful functions\n\nfindElement(using =, value=): Search for an element on the page, starting from the document root. The located element will be returned as an object of webElement class. To use this function you need some basic knowledge of HTML and CSS (or xpath, etc). Using a Chrome extension, called SelectorGadget, might help.\nhighlightElement(): Utility function to highlight current Element. This helps to check that you selected the wanted element.\nsendKeysToElement(): Send a sequence of keystrokes to an element. The keystrokes are sent as a list. Plain text is entered as an unnamed element of the list. Keyboard entries are defined in ’selKeys‘ and should be listed with the name ’key‘.\ngetPageSource()[[1]]: Get the current page source. This method combined with `rvest` is what makes possible to scrape dynamic web pages. The xml document returned by the method can then be read using rvest::read_html(). This method returns a `list` object, that’s the reason behind [[1]].\n\nget_html &lt;- function(i) {\n  webElem &lt;- remDr$findElement(using = \"link text\", as.character(i))\n  webElem$clickElement()\n  Sys.sleep(s)\n  remDr$getPageSource()[[1]]\n}\ns &lt;- 2 # seconds to wait between each page\ntotal_pages &lt;- 17\nhtml_pages &lt;- vector(\"list\", total_pages)\nStart the browser, navigate to page 1, and save the source:\nlibrary(RSelenium)\nrD &lt;- rsDriver()\nremDr &lt;- rD[[\"client\"]]\nbase_url &lt;- \"http://dgsp.cns.gob.mx/Transparencia/wConsultasGeneral.aspx\"\nremDr$navigate(base_url)\nsrc &lt;- remDr$getPageSource()[[1]]\nhtml_pages[1] &lt;- src\nFor pages 2 to 17, we use a for-loop and call the function we wrote above, taking care to account specially for page 11:\nfor (i in 2:total_pages) {\n  if (i == 11) {\n    webElem &lt;- remDr$findElement(using = \"link text\", \"...\")\n    webElem$clickElement()\n    Sys.sleep(s)\n    html_pages[i] &lt;- remDr$getPageSource()[[1]]\n  } else {\n    html_pages[i] &lt;- get_html(i)  \n  }\n}\nremDr$close()\nThe result is html_pages, a list of length 17, with each element the HTML source for each page."
  }
]